(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    155486,       3666]
NotebookOptionsPosition[    144780,       3455]
NotebookOutlinePosition[    149251,       3554]
CellTagsIndexPosition[    148579,       3532]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["An Enumeration of All Pythagorean Triples", "Title",
 CellChangeTimes->{
  3.906647532905538*^9},ExpressionUUID->"b9e6fe14-67c5-4f7d-9ec0-\
13c361826e91"],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization Code",
 StyleBox[" (optional) ", "SectionGloss"],
 Cell[BoxData[
  TemplateBox[{"Initialization Code", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{"Provide any code that must be evaluated before the ", 
          StyleBox["Manipulate", "MRbig"], 
          ". This will automatically be built into the ", 
          StyleBox["Manipulate", "MRbig"], 
          " in the final notebook version. Never use a package that is not \
included in the default distribution of ", 
          StyleBox["Mathematica", FontSlant -> "Italic"], 
          ". To use a package, use the ", 
          StyleBox["Initialization", "MRbig"], " option (with ", 
          StyleBox["Get", "MRbig"], ", not ", 
          StyleBox["Needs", "MRbig"], ") in the ", 
          StyleBox["Manipulate", "MRbig"], 
          " itself, and use the full name of the function from the package. \
For example:\n", 
          StyleBox[
          "  Manipulate[\n  ...\n  ComputationalGeometry`ConvexHull[...]...\n \
 ...\n  Initialization :> Get[\"ComputationalGeometry`\"],\n  ...\n  ]", 
           "MR"], "\nIf you provide initialization code, include a ", 
          StyleBox["SaveDefinitions->True", "MRbig"], " option in the ", 
          StyleBox["Manipulate", "MRbig"], ".", 
          StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "81fde376-e763-44cf-83ed-5c52ec315067"]
}], "InitializationSection",
 CellTags->
  "Initialization \
Code",ExpressionUUID->"1d34a731-8c48-4189-8b6f-89ef5777db9f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"cnn", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"3", " ", "n"}], "-", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "n"]}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"toCWPair", "[", "i_Integer", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"b", "=", 
         RowBox[{"Rest", "@", 
          RowBox[{"IntegerDigits", "[", 
           RowBox[{"i", ",", "2"}], "]"}]}]}], ",", 
        RowBox[{"t", "=", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Scan", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#", "==", "0"}], ",", 
            RowBox[{"t", "=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"First", "[", "t", "]"}], ",", 
               RowBox[{"Total", "@", "t"}]}], "}"}]}], ",", 
            RowBox[{"t", "=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Total", "@", "t"}], ",", 
               RowBox[{"Last", "[", "t", "]"}]}], "}"}]}]}], "]"}], "&"}], 
         ",", "b"}], "]"}], ";", "\[IndentingNewLine]", "t"}]}], "]"}]}], 
   ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"toPPT", "[", 
     RowBox[{"{", 
      RowBox[{"u_", ",", "v_"}], "}"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SuperscriptBox["v", "2"], "-", 
       SuperscriptBox["u", "2"]}], ",", 
      RowBox[{"2", "u", " ", "v"}], ",", 
      RowBox[{
       SuperscriptBox["v", "2"], "+", 
       SuperscriptBox["u", "2"]}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fromIndexToPPT", "[", "n_", "]"}], " ", ":=", " ", 
    RowBox[{"toPPT", "@", 
     RowBox[{"toCWPair", "@", 
      RowBox[{"cnn", "@", "n"}]}]}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Tri", "[", "n_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], ")"}], "n", 
     RowBox[{"(", 
      RowBox[{"1", "+", "n"}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"invTri", "[", "x_Integer", "]"}], ":=", 
    RowBox[{"Ceiling", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "+", 
          RowBox[{"8", "x"}]}], "]"}]}], ")"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unrankCantor", "[", "x_Integer", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"k", ",", "m", ",", "n"}], "}"}], ",", "\n", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{"invTri", "[", "x", "]"}]}], ";", "\n", 
       RowBox[{"n", "=", 
        RowBox[{"x", "-", 
         RowBox[{"Tri", "[", 
          RowBox[{"k", "-", "1"}], "]"}]}]}], ";", "\n", 
       RowBox[{"m", "=", 
        RowBox[{"k", "-", "n", "+", "1"}]}], ";", "\n", 
       RowBox[{"{", 
        RowBox[{"m", ",", "n"}], "}"}]}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fromPairToPT", "[", 
     RowBox[{"{", 
      RowBox[{"m_", ",", "n_"}], "}"}], "]"}], ":=", 
    RowBox[{"m", "*", 
     RowBox[{"fromIndexToPPT", "[", "n", "]"}]}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fromIndexToPT", "[", "i_", "]"}], ":=", 
   RowBox[{"fromPairToPT", "[", 
    RowBox[{"unrankCantor", "[", "i", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"chopLarge", "[", 
     RowBox[{"L_List", ",", "zoom_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "max", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"max", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Take", "[", 
             RowBox[{"#", ",", "2"}], "]"}], "&"}], " ", "/@", " ", "L"}], 
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Select", "[", 
        RowBox[{"L", ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "<=", 
            RowBox[{
             SuperscriptBox["10", 
              RowBox[{"-", "zoom"}]], " ", "max"}]}], " ", "&&", " ", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "<=", 
            RowBox[{
             SuperscriptBox["10", 
              RowBox[{"-", "zoom"}]], " ", "max"}]}]}], "&"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"assignColor", "[", 
   RowBox[{"{", 
    RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"GCD", "[", 
        RowBox[{"a", ",", "b", ",", "c"}], "]"}], "==", "1"}], ",", "Blue", 
      ",", "Red"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"showTriangle", "[", 
     RowBox[{"{", 
      RowBox[{"color_", ",", 
       RowBox[{"{", 
        RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}]}], "}"}], "]"}], " ", ":=",
     "\[IndentingNewLine]", 
    RowBox[{"Column", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "color", ",", 
            "\[IndentingNewLine]", 
            RowBox[{"SSSTriangle", "[", 
             RowBox[{"b", ",", "c", ",", "a"}], "]"}]}], "}"}], ",", 
          RowBox[{"ImageSize", "->", "Tiny"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "\[IndentingNewLine]", 
       "}"}], ",", "Center"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"derivation", "[", "i_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "m"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"m", ",", "n"}], "}"}], "=", 
       RowBox[{"unrankCantor", "[", "i", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "i", ",", "\"\<:\>\"", ",", "\"\<{\>\"", ",", "m", ",", "\"\<,\>\"", 
        ",", "n", ",", "\"\<}\>\"", ",", "\"\<:\>\"", ",", 
        RowBox[{"cnn", "[", "n", "]"}], ",", "\"\<:\>\"", ",", 
        RowBox[{"toCWPair", "[", 
         RowBox[{"cnn", "[", "n", "]"}], "]"}], ",", "\"\<:\>\"", ",", "m", 
        ",", "\"\<\[Times]\>\"", ",", 
        RowBox[{"fromIndexToPPT", "[", "n", "]"}], ",", "\"\<=\>\"", ",", 
        RowBox[{"fromIndexToPT", "[", "i", "]"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"display", "[", "i_Integer", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "n"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"m", ",", "n"}], "}"}], "=", 
       RowBox[{"unrankCantor", "[", "i", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Tooltip", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Row", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"m", ",", 
              SubscriptBox["\[ScriptCapitalP]", "n"]}], "}"}], ",", 
            "\"\< \>\""}], "]"}], ",", "16"}], "]"}], ",", 
        RowBox[{"Style", "[", " ", 
         RowBox[{
          RowBox[{"Row", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", ",", "\"\<: \>\"", ",", "m", ",", 
              RowBox[{"fromIndexToPPT", "[", "n", "]"}], ",", "\"\<=\>\"", 
              ",", 
              RowBox[{"m", "  ", 
               RowBox[{"fromIndexToPPT", "[", "n", "]"}]}]}], "}"}], ",", 
            "\"\< \>\""}], "]"}], ",", "14"}], "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vf", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xc_", ",", "yc_"}], "}"}], ",", "name_", ",", 
     RowBox[{"{", 
      RowBox[{"w_", ",", "h_"}], "}"}]}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "n"}], "}"}], ",", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"note", ":", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xc", ",", "yc"}], "}"}], " ", "actually", " ", "equals", 
        " ", 
        RowBox[{"{", 
         RowBox[{"m", ",", 
          RowBox[{"-", "n"}]}], "}"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"m", ",", "n"}], "}"}], "=", 
       RowBox[{"unrankCantor", "[", "name", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
        RowBox[{"Hue", "[", 
         RowBox[{".6", "+", 
          RowBox[{".15", "  ", 
           RowBox[{"(", 
            RowBox[{"m", "+", "n"}], ")"}]}]}], "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"xc", ",", "yc"}], "}"}], "-", 
           RowBox[{"{", 
            RowBox[{"0.40", ",", ".17"}], "}"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"xc", ",", "yc"}], "}"}], "+", 
           RowBox[{"{", 
            RowBox[{"0.40", ",", ".17"}], "}"}]}], ",", 
          RowBox[{"RoundingRadius", "->", ".11"}]}], "]"}], ",", "Black", ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"display", "[", "name", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"xc", ",", "yc"}], "}"}]}], "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ef", "[", 
    RowBox[{"lines__", ",", "edge_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x1", ",", "y1", ",", "x2", ",", "y2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x1", ",", "y1"}], "}"}], "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], " ", 
        RowBox[{"unrankCantor", "[", 
         RowBox[{"edge", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x2", ",", "y2"}], "}"}], "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], " ", 
        RowBox[{"unrankCantor", "[", 
         RowBox[{"edge", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"x1", "==", "1"}], ",", "Red", ",", "Blue"}], "]"}], ",", 
        RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x1", ",", "y1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x2", ",", "y2"}], "}"}]}], "}"}], ",", "0.35"}], 
         "]"}]}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8764938145563536`*^9, 3.876493822006153*^9}, {
   3.87649396024522*^9, 3.8764939775174074`*^9}, {3.883749062895033*^9, 
   3.8837491220194063`*^9}, {3.8837491940991306`*^9, 
   3.8837492030805798`*^9}, {3.8837492351742945`*^9, 3.8837492633468266`*^9}, 
   3.8837493025462055`*^9, {3.883754025603574*^9, 3.883754026024639*^9}, {
   3.9062145649356213`*^9, 3.906214662724083*^9}, 3.906563280874822*^9},
 CellLabel->"In[1]:=",
 CellID->53610471,ExpressionUUID->"4de4e2ba-4774-43ef-a3bd-947a9068643e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Manipulate",
 Cell[BoxData[
  TemplateBox[{"Manipulate", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{"This section contains the ", 
          StyleBox["Manipulate", "MRbig"], 
          " input cell and its evaluated output cell. Make all control labels \
or labels in the output as descriptive as possible, with only proper nouns \
and proper adjectives capitalized. More description of the controls can be \
provided in the Details section below, if necessary. If you change this ", 
          StyleBox["Manipulate", "MRbig"], 
          " after creating screenshots and/or thumbnails, use ", 
          StyleBox["Update Thumbnail & Snapshots", FontWeight -> "Bold"], 
          " in the toolbar to update any copies in later sections. You can \
control the Flash preview for the Demonstration with the ", 
          StyleBox["AutorunSequencing", "MRbig"], " option. Use ", 
          StyleBox["SaveDefinitions->True", "MRbig"], 
          " if you provided initialization code in the previous section."}], 
        "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
       FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", 
     Deletable -> True, CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "d12d57a6-93e6-4518-8a9c-9df2eb688354"]
}], "ManipulateSection",
 CellTags->
  "Manipulate",ExpressionUUID->"b7acceb9-ca4b-4965-b319-bd8a6214a587"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Switch", "[", 
    RowBox[{
    "mode", ",", "\[IndentingNewLine]", "1", ",", "\[IndentingNewLine]", 
     RowBox[{"Panel", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Tooltip", "[", 
             RowBox[{
              RowBox[{"Most", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
              RowBox[{"showTriangle", "[", "#", "]"}]}], "]"}], "&"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"GatherBy", "[", 
            RowBox[{
             RowBox[{"assignColor", "/@", 
              RowBox[{"(", 
               RowBox[{"chopLarge", "[", 
                RowBox[{
                 RowBox[{"fromIndexToPT", " ", "/@", " ", 
                  RowBox[{"Range", "[", "i", "]"}]}], ",", "zoom"}], "]"}], 
               ")"}]}], ",", "First"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", "2", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "->", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", "Red"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "->", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<A\>\"", ",", "Italic"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<B\>\"", ",", "Italic"}], "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AspectRatio", "->", "1"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"1.2", 
           RowBox[{"{", 
            RowBox[{"450", ",", "275"}], "}"}]}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Row", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"\"\<The first \>\"", ",", 
            RowBox[{"ToString", "[", "i", "]"}], ",", 
            "\"\< Pythagorean triples {\>\"", ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<A\>\"", ",", "Italic"}], "]"}], ",", "\"\<, \>\"", 
            ",", "\[IndentingNewLine]", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<B\>\"", ",", "Italic"}], "]"}], ",", "\"\<, \>\"", 
            ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<C\>\"", ",", "Italic"}], "]"}], ",", "\"\<}\>\"", 
            ",", "\"\<, zoom level: \>\"", ",", 
            RowBox[{"ToString", "[", "zoom", "]"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", "\"\<Label\>\"", ",", "Medium"}], "]"}], ",", 
       RowBox[{"Alignment", "\[Rule]", "Center"}]}], "\[IndentingNewLine]", 
      "]"}], ",", "\[IndentingNewLine]", "2", ",", "\[IndentingNewLine]", 
     RowBox[{"Panel", "[", 
      RowBox[{
       RowBox[{"Pane", "[", 
        RowBox[{
         RowBox[{"fromIndexToPT", " ", "/@", " ", 
          RowBox[{"Range", "[", "i", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "->", 
          RowBox[{"{", 
           RowBox[{"450", ",", "275"}], "}"}]}], ",", 
         RowBox[{"ImageSizeAction", "->", "\"\<Scrollable\>\""}], ",", 
         RowBox[{"Scrollbars", "->", 
          RowBox[{"{", 
           RowBox[{"False", ",", "Automatic"}], "}"}]}]}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<The first \>\"", ",", 
            RowBox[{"ToString", "[", "i", "]"}], ",", 
            "\"\< Pythagorean triples {\>\"", ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<A\>\"", ",", "Italic"}], "]"}], ",", "\"\<, \>\"", 
            "\[IndentingNewLine]", ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<B\>\"", ",", "Italic"}], "]"}], ",", "\"\<, \>\"", 
            ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<C\>\"", ",", "Italic"}], "]"}], ",", "\"\<}.\>\""}],
            "}"}], "]"}], ",", "\"\<Label\>\"", ",", "Medium"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"1.2", 
         RowBox[{"{", 
          RowBox[{"450", ",", "275"}], "}"}]}]}], ",", 
       RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
     "\[IndentingNewLine]", "3", ",", "\[IndentingNewLine]", 
     RowBox[{"Panel", "[", 
      RowBox[{
       RowBox[{"Pane", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Graph", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"k", "\[DirectedEdge]", 
              RowBox[{"(", 
               RowBox[{"k", "+", "1"}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "1", ",", 
               RowBox[{"i", "-", "1"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"VertexCoordinates", "->", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "->", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", 
                   RowBox[{"-", "1"}]}], "}"}], 
                 RowBox[{"unrankCantor", "[", "#", "]"}]}]}], "&"}], "/@", 
              " ", 
              RowBox[{"Range", "[", "i", "]"}]}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"VertexShapeFunction", "->", "vf"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"EdgeShapeFunction", "->", "ef"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"AspectRatio", "->", ".7"}], ",", "\[IndentingNewLine]", 
           RowBox[{"ImageSize", "->", 
            RowBox[{"50", 
             RowBox[{"Total", "[", 
              RowBox[{"unrankCantor", "[", "i", "]"}], "]"}]}]}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "->", 
          RowBox[{"{", 
           RowBox[{"450", ",", "275"}], "}"}]}], ",", 
         RowBox[{"ImageSizeAction", "->", "\"\<Scrollable\>\""}], ",", 
         RowBox[{"Scrollbars", "->", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "Automatic"}], "}"}]}]}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<The first \>\"", ",", 
            RowBox[{"ToString", "[", "i", "]"}], ",", 
            "\"\< Pythagorean triples shown in Cantor diagonalization \
order.\>\""}], "}"}], "]"}], ",", "\"\<Label\>\"", ",", "Medium"}], "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"1.2", 
         RowBox[{"{", 
          RowBox[{"450", ",", "275"}], "}"}]}]}], ",", 
       RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
     "\[IndentingNewLine]", "4", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"Panel", "[", 
      RowBox[{
       RowBox[{"Pane", "[", 
        RowBox[{
         RowBox[{"Grid", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"derivation", " ", "/@", " ", 
              RowBox[{"Range", "[", "i", "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<i\>\"", ",", "Italic"}], "]"}], ",", "\"\<\>\"", 
               ",", "\"\<\>\"", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<m\>\"", ",", "Italic"}], "]"}], ",", "\"\<\>\"", 
               ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<n\>\"", ",", "Italic"}], "]"}], ",", "\"\<\>\"", 
               ",", "\"\<\>\"", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<cnn(n)\>\"", ",", "Italic"}], "]"}], ",", 
               "\"\<\>\"", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<C-W\>\"", ",", "Italic"}], "]"}], ",", 
               "\"\<\>\"", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<m\>\"", ",", "Italic"}], "]"}], ",", "\"\<\>\"", 
               ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<{a,b,c}\>\"", ",", "Italic"}], "]"}], ",", 
               "\"\<\>\"", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<{A,B,C}\>\"", ",", "Italic"}], "]"}]}], "}"}]}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"ItemStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "Black", ",", "Black", ",", "Black", ",", "Red", ",", "Black", 
                ",", " ", "Blue", ",", 
                AdjustmentBox["Black",
                 
                 BoxMargins->{{0.09356109950772115, -0.09356109950772115}, {
                  0., 0.}}], 
                AdjustmentBox[",",
                 
                 BoxMargins->{{0.09356109950772115, -0.09356109950772115}, {
                  0., 0.}}], 
                AdjustmentBox[" ",
                 
                 BoxMargins->{{0.09356109950772115, -0.09356109950772115}, {
                  0., 0.}}], 
                AdjustmentBox["Black",
                 
                 BoxMargins->{{0.09356109950772115, -0.09356109950772115}, {
                  0., 0.}}], ",", "Blue", ",", "Black", ",", "Blue", ",", 
                "Black", ",", "Red", ",", "Black", ",", "Blue", ",", "Black", 
                ",", "Purple"}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
           RowBox[{"Spacings", "->", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "3", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0.1", ",", 
                ".3", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", 
                "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
              "0.5"}], "}"}]}], ",", 
           RowBox[{"Alignment", "->", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "Center", ",", "Center", ",", "Center", ",", "Center", ",", 
                "Center", ",", "Center", ",", "Center", ",", "Center", ",", 
                "Center", ",", "Center", ",", "Center", ",", "Center", ",", 
                "Right", ",", "Center", ",", "Left", ",", "Left", ",", 
                "Left"}], "}"}], ",", "Automatic"}], "}"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"1.2", 
           RowBox[{"{", 
            RowBox[{"450", ",", "275"}], "}"}]}]}], ",", 
         RowBox[{"Alignment", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Left", ",", "Top"}], "}"}]}], ",", 
         RowBox[{"Scrollbars", "->", 
          RowBox[{"{", 
           RowBox[{"False", ",", "Automatic"}], "}"}]}]}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<Derivation of first \>\"", ",", 
            RowBox[{"ToString", "[", "i", "]"}], ",", 
            "\"\< Pythagorean triples {\>\"", ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<A\>\"", ",", "Italic"}], "]"}], ",", "\"\<, \>\"", 
            ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<B\>\"", ",", "Italic"}], "]"}], ",", "\"\<, \>\"", 
            ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<C\>\"", ",", "Italic"}], "]"}], ",", "\"\<}.\>\""}],
            "}"}], "]"}], ",", "\"\<Label\>\"", ",", "Medium"}], "]"}]}], 
      "]"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Control", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", ",", "50", ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<i\>\"", ",", "Italic"}], "]"}]}], "}"}], ",", "1",
             ",", 
            RowBox[{"10", "^", "3"}], ",", "1", ",", 
            RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Control", "@", 
          RowBox[{"{", 
           RowBox[{"mode", ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "->", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{"\"\<graph \>\"", ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<AB\>\"", ",", "Italic"}], "]"}]}], "}"}], 
                "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"2", "->", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{"\"\<list {\>\"", ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<A\>\"", ",", "Italic"}], "]"}], ",", 
                  "\"\<, \>\"", ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<B\>\"", ",", "Italic"}], "]"}], ",", 
                  "\"\<, \>\"", ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<C\>\"", ",", "Italic"}], "]"}], ",", 
                  "\"\<}\>\""}], "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"3", "->", "\"\<Cantor ordering\>\""}], ",", " ", 
              "\[IndentingNewLine]", 
              RowBox[{"4", "->", "\"\<derivation\>\""}]}], "}"}]}], "}"}]}]}],
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Control", "@", 
          RowBox[{"{", 
           RowBox[{"zoom", ",", "0", ",", "3", ",", 
            RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", 
            RowBox[{"Enabled", "->", 
             RowBox[{"Dynamic", "[", 
              RowBox[{"mode", "==", "1"}], "]"}]}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Spacer", "[", "20", "]"}], ",", 
            "\"\<In the graph, hover over a point to see {\>\"", ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<A\>\"", ",", "Italic"}], "]"}], ",", "\"\<, \>\"", 
            ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<B\>\"", ",", "Italic"}], "]"}], ",", "\"\<, \>\"", 
            ",", " ", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<C\>\"", ",", "Italic"}], "]"}], ",", 
            "\"\<} and a proportional triangle.\>\""}], "}"}], "]"}]}], 
        "}"}]}], "}"}], ",", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Right", ",", "Left"}], "}"}], ",", "Automatic"}], "}"}]}]}],
     "]"}], ",", 
   RowBox[{"SaveDefinitions", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.906647555662221*^9, 3.906647562600424*^9}, {
  3.9066478635911427`*^9, 3.9066478643335075`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"1c8a51fe-61b3-446f-b3f3-b27c622b6763"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 50, $CellContext`mode$$ = 
    1, $CellContext`zoom$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 50, 
       Style["i", Italic]}, 1, 1000, 1}, {{
       Hold[$CellContext`mode$$], 1}, {1 -> Row[{"graph ", 
          Style["AB", Italic]}], 2 -> Row[{"list {", 
          Style["A", Italic], ", ", 
          Style["B", Italic], ", ", 
          Style["C", Italic], "}"}], 3 -> "Cantor ordering", 4 -> 
       "derivation"}}, {
      Hold[$CellContext`zoom$$], 0, 3}, {
      Hold[
       Grid[{{
          Manipulate`Place[1], 
          Manipulate`Place[2]}, {
          Manipulate`Place[3], 
          Row[{
            Spacer[20], "In the graph, hover over a point to see {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "} and a proportional triangle."}]}}, 
        Alignment -> {{Right, Left}, Automatic}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    555., {173., 193.4953125}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`i$$ = 50, $CellContext`mode$$ = 
        1, $CellContext`zoom$$ = 0}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Switch[$CellContext`mode$$, 1, 
        Panel[
         ListPlot[
          Map[Tooltip[
            Most[
             Part[#, 2]], 
            $CellContext`showTriangle[#]]& , 
           GatherBy[
            Map[$CellContext`assignColor, 
             $CellContext`chopLarge[
              Map[$CellContext`fromIndexToPT, 
               Range[$CellContext`i$$]], $CellContext`zoom$$]], First], {2}], 
          PlotStyle -> {Blue, Red}, AxesLabel -> {
            Style["A", Italic], 
            Style["B", Italic]}, AspectRatio -> 1, ImageSize -> 
          1.2 {450, 275}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}", ", zoom level: ", 
            ToString[$CellContext`zoom$$]}], "Label", Medium], Alignment -> 
         Center], 2, 
        Panel[
         Pane[
          Map[$CellContext`fromIndexToPT, 
           Range[$CellContext`i$$]], ImageSize -> {450, 275}, ImageSizeAction -> 
          "Scrollable", Scrollbars -> {False, Automatic}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}."}], "Label", Medium], ImageSize -> 
         1.2 {450, 275}, Alignment -> Center], 3, 
        Panel[
         Pane[
          Graph[
           Table[
            
            DirectedEdge[$CellContext`k, $CellContext`k + 1], {$CellContext`k,
              1, $CellContext`i$$ - 1}], VertexCoordinates -> 
           Map[# -> {1, -1} $CellContext`unrankCantor[#]& , 
             Range[$CellContext`i$$]], VertexShapeFunction -> $CellContext`vf,
            EdgeShapeFunction -> $CellContext`ef, AspectRatio -> 0.7, 
           ImageSize -> 50 Total[
              $CellContext`unrankCantor[$CellContext`i$$]]], 
          ImageSize -> {450, 275}, ImageSizeAction -> "Scrollable", 
          Scrollbars -> {Automatic, Automatic}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], 
            " Pythagorean triples shown in Cantor diagonalization order."}], 
          "Label", Medium], ImageSize -> 1.2 {450, 275}, Alignment -> Center],
         4, 
        Panel[
         Pane[
          Grid[
           Prepend[
            Map[$CellContext`derivation, 
             Range[$CellContext`i$$]], {
             Style["i", Italic], "", "", 
             Style["m", Italic], "", 
             Style["n", Italic], "", "", 
             Style["cnn(n)", Italic], "", 
             Style["C-W", Italic], "", 
             Style["m", Italic], "", 
             Style["{a,b,c}", Italic], "", 
             Style["{A,B,C}", Italic]}], 
           ItemStyle -> {{
             Black, Black, Black, Red, Black, Blue, Black, Black, Blue, Black,
               Blue, Black, Red, Black, Blue, Black, Purple}, Automatic}, 
           Spacings -> {{
             3, 1, 1, 0, 0, 0.1, 0.3, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1}, 0.5}, 
           Alignment -> {{
             Center, Center, Center, Center, Center, Center, Center, Center, 
              Center, Center, Center, Center, Right, Center, Left, Left, 
              Left}, Automatic}], ImageSize -> 1.2 {450, 275}, 
          Alignment -> {Left, Top}, Scrollbars -> {False, Automatic}], 
         Style[
          Row[{"Derivation of first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}."}], "Label", Medium]]], 
      "Specifications" :> {{{$CellContext`i$$, 50, 
          Style["i", Italic]}, 1, 1000, 1, Appearance -> "Labeled", 
         ControlPlacement -> 1}, {{$CellContext`mode$$, 1}, {
         1 -> Row[{"graph ", 
             Style["AB", Italic]}], 2 -> Row[{"list {", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ", ", 
             Style["C", Italic], "}"}], 3 -> "Cantor ordering", 4 -> 
          "derivation"}, ControlPlacement -> 2}, {$CellContext`zoom$$, 0, 3, 
         Appearance -> "Labeled", Enabled -> 
         Dynamic[$CellContext`mode$$ == 1], ControlPlacement -> 3}, 
        Grid[{{
           Manipulate`Place[1], 
           Manipulate`Place[2]}, {
           Manipulate`Place[3], 
           Row[{
             Spacer[20], "In the graph, hover over a point to see {", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ", ", 
             Style["C", Italic], "} and a proportional triangle."}]}}, 
         Alignment -> {{Right, Left}, Automatic}]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{600., {234.3544921875, 239.6455078125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`showTriangle[{
          Pattern[$CellContext`color, 
           Blank[]], {
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`b, 
            Blank[]], 
           Pattern[$CellContext`c, 
            Blank[]]}}] := Column[{
          Graphics[{
            EdgeForm[Thick], $CellContext`color, 
            SSSTriangle[$CellContext`b, $CellContext`c, $CellContext`a]}, 
           ImageSize -> 
           Tiny], {$CellContext`a, $CellContext`b, $CellContext`c}}, 
         Center], $CellContext`assignColor[{
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}] := {
         If[
         GCD[$CellContext`a, $CellContext`b, $CellContext`c] == 1, Blue, 
          Red], {$CellContext`a, $CellContext`b, $CellContext`c}}, \
$CellContext`chopLarge[
         Pattern[$CellContext`L, 
          Blank[List]], 
         Pattern[$CellContext`zoom, 
          Blank[]]] := Module[{$CellContext`max}, $CellContext`max = Max[
            Flatten[
             Map[Take[#, 2]& , $CellContext`L]]]; 
         Select[$CellContext`L, And[
           Part[#, 1] <= $CellContext`max/10^$CellContext`zoom, 
            Part[#, 2] <= $CellContext`max/
             10^$CellContext`zoom]& ]], $CellContext`fromIndexToPT[
         Pattern[$CellContext`i, 
          Blank[]]] := $CellContext`fromPairToPT[
         $CellContext`unrankCantor[$CellContext`i]], \
$CellContext`fromPairToPT[{
          Pattern[$CellContext`m, 
           Blank[]], 
          Pattern[$CellContext`n, 
           
           Blank[]]}] := $CellContext`m \
$CellContext`fromIndexToPPT[$CellContext`n], $CellContext`fromIndexToPPT[
         Pattern[$CellContext`n, 
          Blank[]]] := $CellContext`toPPT[
         $CellContext`toCWPair[
          $CellContext`cnn[$CellContext`n]]], $CellContext`toPPT[{
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           Blank[]]}] := {$CellContext`v^2 - $CellContext`u^2, 
         2 $CellContext`u $CellContext`v, $CellContext`v^2 + \
$CellContext`u^2}, $CellContext`toCWPair[
         Pattern[$CellContext`i, 
          Blank[Integer]]] := Module[{$CellContext`b = Rest[
            IntegerDigits[$CellContext`i, 2]], $CellContext`t = {1, 1}}, 
         Scan[If[# == 0, $CellContext`t = {
              First[$CellContext`t], 
              Total[$CellContext`t]}, $CellContext`t = {
              Total[$CellContext`t], 
              
              Last[$CellContext`t]}]& , $CellContext`b]; $CellContext`t], \
$CellContext`cnn[
         Pattern[$CellContext`n, 
          Blank[]]] := 
       3 $CellContext`n - (1/2) (
         1 - (-1)^$CellContext`n), $CellContext`unrankCantor[
         Pattern[$CellContext`x, 
          Blank[Integer]]] := 
       Module[{$CellContext`k, $CellContext`m, $CellContext`n}, \
$CellContext`k = $CellContext`invTri[$CellContext`x]; $CellContext`n = \
$CellContext`x - $CellContext`Tri[$CellContext`k - 
            1]; $CellContext`m = $CellContext`k - $CellContext`n + 
           1; {$CellContext`m, $CellContext`n}], $CellContext`invTri[
         Pattern[$CellContext`x, 
          Blank[Integer]]] := 
       Ceiling[(1/2) (-1 + Sqrt[1 + 8 $CellContext`x])], $CellContext`Tri[
         Pattern[$CellContext`n, 
          Blank[]]] := (1/2) $CellContext`n (
         1 + $CellContext`n), $CellContext`vf[{
          Pattern[$CellContext`xc, 
           Blank[]], 
          Pattern[$CellContext`yc, 
           Blank[]]}, 
         Pattern[$CellContext`name, 
          Blank[]], {
          Pattern[$CellContext`w, 
           Blank[]], 
          Pattern[$CellContext`h, 
           Blank[]]}] := 
       Module[{$CellContext`m, $CellContext`n}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`name]; {
           EdgeForm[None], 
           Hue[0.6 + 0.15 ($CellContext`m + $CellContext`n)], 
           
           Rectangle[{$CellContext`xc, $CellContext`yc} - {0.4, 
            0.17}, {$CellContext`xc, $CellContext`yc} + {0.4, 0.17}, 
            RoundingRadius -> 0.11], Black, 
           Text[
            $CellContext`display[$CellContext`name], {$CellContext`xc, \
$CellContext`yc}]}], $CellContext`display[
         Pattern[$CellContext`i, 
          Blank[Integer]]] := 
       Module[{$CellContext`m, $CellContext`n}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`i]; Tooltip[
           Style[
            Row[{$CellContext`m, 
              Subscript[$CellContext`\[ScriptCapitalP], $CellContext`n]}, 
             " "], 16], 
           Style[
            Row[{$CellContext`i, ": ", $CellContext`m, 
              $CellContext`fromIndexToPPT[$CellContext`n], 
              "=", $CellContext`m \
$CellContext`fromIndexToPPT[$CellContext`n]}, " "], 14]]], $CellContext`ef[
         Pattern[$CellContext`lines, 
          BlankSequence[]], 
         Pattern[$CellContext`edge, 
          Blank[]]] := 
       Module[{$CellContext`x1, $CellContext`y1, $CellContext`x2, \
$CellContext`y2}, {$CellContext`x1, $CellContext`y1} = {
            1, -1} $CellContext`unrankCantor[
             
             Part[$CellContext`edge, 
              1]]; {$CellContext`x2, $CellContext`y2} = {
            1, -1} $CellContext`unrankCantor[
             Part[$CellContext`edge, 2]]; {
           If[$CellContext`x1 == 1, Red, Blue], 
           Arrowheads[Medium], 
           
           Arrow[{{$CellContext`x1, $CellContext`y1}, {$CellContext`x2, \
$CellContext`y2}}, 0.35]}], $CellContext`derivation[
         Pattern[$CellContext`i, 
          Blank[]]] := 
       Module[{$CellContext`n, $CellContext`m}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`i]; {$CellContext`i, 
           ":", "{", $CellContext`m, ",", $CellContext`n, "}", ":", 
           $CellContext`cnn[$CellContext`n], ":", 
           $CellContext`toCWPair[
            $CellContext`cnn[$CellContext`n]], ":", $CellContext`m, 
           "\[Times]", 
           $CellContext`fromIndexToPPT[$CellContext`n], "=", 
           $CellContext`fromIndexToPT[$CellContext`i]}]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->510509920,ExpressionUUID->"ba2ff809-34af-42d4-a80b-d1e8ed62d590"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Caption",
 Cell[BoxData[
  TemplateBox[{"Caption", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{
         "The caption provides all the information needed to understand the \
Demonstration. It should be between three and five sentences long, but \
clarity is more important than length. Include only text in this section \
\[LongDash] no code, graphics, etc. Do not change the cell style or copy \
cells from other sections. Do not copy text from books or the web. Write your \
ideas in your own words. If you want to refer to something on the web, link \
to it in the Details.", 
          StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "a97b5d36-1c59-4018-b3f0-6bfc71662d3d"]
}], "ManipulateCaptionSection",
 CellTags->"Caption",ExpressionUUID->"3ed78bfd-4459-4d2a-906f-3e9e6aba33a4"],

Cell[TextData[{
 "This Demonstration generates all Pythagorean triples (PTs) using a Cantor \
diagonal ordering to produce all multiples of all primitive PTs, in turn \
generated by the Calkin\[Dash]Wilf enumeration of the rational numbers. The \
main slider selects ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]], "InlineMath",ExpressionUUID->
  "6b5df47e-7fff-406a-9128-3a7793abbe5f"],
 ", the number of PTs shown. Various modes allow graphical or tabular \
displays of the results, including the \"derivation\" to show the steps from \
the positive integers ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]], "InlineMath",ExpressionUUID->
  "533318fb-8172-418e-8ed0-ef54bc2c62d2"],
 ", to the Cantor pair ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"m", ",", "n"}], ")"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"1ee71c59-c19c-44ac-9bb7-1ffba9d6f58d"],
 ", to a filtered list of \"compliant\" natural numbers, to Calkin\[Dash]Wilf \
pairs ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"u", ",", "v"}], ")"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"83e9bd8b-7d73-4339-9de8-98c89cc21622"],
 ", to the PTs of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A", ",", "B", ",", "C"}], ")"}], "=", 
    RowBox[{"m", "(", 
     RowBox[{"a", ",", "b", ",", "c"}], ")"}]}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"7b791dfb-ac2c-422e-bdec-5aeb46925a27"],
 ". In the graph mode, a blue or red dot at point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"A", ",", "B"}], ")"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"d255457f-c09e-40dd-af72-a5b300871556"],
 " represents a PT (primitive or non-primitive, respectively), with all side \
lengths and a proportional triangle shown by mouseover, and a slider to zoom \
in on the part of the graph near the origin. The \"Cantor ordering\" mode \
explains how each integer generates a multiplier and a primitive PT, with \
details shown mouseover."
}], "ManipulateCaption",
 CellChangeTimes->{
  3.906647585647098*^9},ExpressionUUID->"71921e4e-c8c2-4f05-96e3-\
4e3047349e9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Thumbnail",
 Cell[BoxData[
  TemplateBox[{"Thumbnail", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{
         "To create the thumbnail, copy and paste the output cell from the ", 
          StyleBox["Manipulate", "MRbig"], 
          " section and adjust the controls to the most visually appealing \
setting. Do not convert it to a bitmap. The thumbnail is what visitors see \
when browsing the Demonstrations site and while the Flash preview loads.", 
          StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "5363174b-397a-4e31-b8e5-95e1af887bc9"]
}], "ThumbnailSection",
 CellTags->"Thumbnail",ExpressionUUID->"401cc3c4-8319-4e19-82e7-df5fcb711a42"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 50, $CellContext`mode$$ = 
    1, $CellContext`zoom$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 50, 
       Style["i", Italic]}, 1, 1000, 1}, {{
       Hold[$CellContext`mode$$], 1}, {1 -> Row[{"graph ", 
          Style["AB", Italic]}], 2 -> Row[{"list {", 
          Style["A", Italic], ", ", 
          Style["B", Italic], ", ", 
          Style["C", Italic], "}"}], 3 -> "Cantor ordering", 4 -> 
       "derivation"}}, {
      Hold[$CellContext`zoom$$], 0, 3}, {
      Hold[
       Grid[{{
          Manipulate`Place[1], 
          Manipulate`Place[2]}, {
          Manipulate`Place[3], 
          Row[{
            Spacer[20], "In the graph, hover over a point to see {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "} and a proportional triangle."}]}}, 
        Alignment -> {{Right, Left}, Automatic}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    555., {173., 193.4953125}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`i$$ = 50, $CellContext`mode$$ = 
        1, $CellContext`zoom$$ = 0}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Switch[$CellContext`mode$$, 1, 
        Panel[
         ListPlot[
          Map[Tooltip[
            Most[
             Part[#, 2]], 
            $CellContext`showTriangle[#]]& , 
           GatherBy[
            Map[$CellContext`assignColor, 
             $CellContext`chopLarge[
              Map[$CellContext`fromIndexToPT, 
               Range[$CellContext`i$$]], $CellContext`zoom$$]], First], {2}], 
          PlotStyle -> {Blue, Red}, AxesLabel -> {
            Style["A", Italic], 
            Style["B", Italic]}, AspectRatio -> 1, ImageSize -> 
          1.2 {450, 275}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}", ", zoom level: ", 
            ToString[$CellContext`zoom$$]}], "Label", Medium], Alignment -> 
         Center], 2, 
        Panel[
         Pane[
          Map[$CellContext`fromIndexToPT, 
           Range[$CellContext`i$$]], ImageSize -> {450, 275}, ImageSizeAction -> 
          "Scrollable", Scrollbars -> {False, Automatic}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}."}], "Label", Medium], ImageSize -> 
         1.2 {450, 275}, Alignment -> Center], 3, 
        Panel[
         Pane[
          Graph[
           Table[
            
            DirectedEdge[$CellContext`k, $CellContext`k + 1], {$CellContext`k,
              1, $CellContext`i$$ - 1}], VertexCoordinates -> 
           Map[# -> {1, -1} $CellContext`unrankCantor[#]& , 
             Range[$CellContext`i$$]], VertexShapeFunction -> $CellContext`vf,
            EdgeShapeFunction -> $CellContext`ef, AspectRatio -> 0.7, 
           ImageSize -> 50 Total[
              $CellContext`unrankCantor[$CellContext`i$$]]], 
          ImageSize -> {450, 275}, ImageSizeAction -> "Scrollable", 
          Scrollbars -> {Automatic, Automatic}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], 
            " Pythagorean triples shown in Cantor diagonalization order."}], 
          "Label", Medium], ImageSize -> 1.2 {450, 275}, Alignment -> Center],
         4, 
        Panel[
         Pane[
          Grid[
           Prepend[
            Map[$CellContext`derivation, 
             Range[$CellContext`i$$]], {
             Style["i", Italic], "", "", 
             Style["m", Italic], "", 
             Style["n", Italic], "", "", 
             Style["cnn(n)", Italic], "", 
             Style["C-W", Italic], "", 
             Style["m", Italic], "", 
             Style["{a,b,c}", Italic], "", 
             Style["{A,B,C}", Italic]}], 
           ItemStyle -> {{
             Black, Black, Black, Red, Black, Blue, Black, Black, Blue, Black,
               Blue, Black, Red, Black, Blue, Black, Purple}, Automatic}, 
           Spacings -> {{
             3, 1, 1, 0, 0, 0.1, 0.3, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1}, 0.5}, 
           Alignment -> {{
             Center, Center, Center, Center, Center, Center, Center, Center, 
              Center, Center, Center, Center, Right, Center, Left, Left, 
              Left}, Automatic}], ImageSize -> 1.2 {450, 275}, 
          Alignment -> {Left, Top}, Scrollbars -> {False, Automatic}], 
         Style[
          Row[{"Derivation of first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}."}], "Label", Medium]]], 
      "Specifications" :> {{{$CellContext`i$$, 50, 
          Style["i", Italic]}, 1, 1000, 1, Appearance -> "Labeled", 
         ControlPlacement -> 1}, {{$CellContext`mode$$, 1}, {
         1 -> Row[{"graph ", 
             Style["AB", Italic]}], 2 -> Row[{"list {", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ", ", 
             Style["C", Italic], "}"}], 3 -> "Cantor ordering", 4 -> 
          "derivation"}, ControlPlacement -> 2}, {$CellContext`zoom$$, 0, 3, 
         Appearance -> "Labeled", Enabled -> 
         Dynamic[$CellContext`mode$$ == 1], ControlPlacement -> 3}, 
        Grid[{{
           Manipulate`Place[1], 
           Manipulate`Place[2]}, {
           Manipulate`Place[3], 
           Row[{
             Spacer[20], "In the graph, hover over a point to see {", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ", ", 
             Style["C", Italic], "} and a proportional triangle."}]}}, 
         Alignment -> {{Right, Left}, Automatic}]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{600., {234.3544921875, 239.6455078125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`showTriangle[{
          Pattern[$CellContext`color, 
           Blank[]], {
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`b, 
            Blank[]], 
           Pattern[$CellContext`c, 
            Blank[]]}}] := Column[{
          Graphics[{
            EdgeForm[Thick], $CellContext`color, 
            SSSTriangle[$CellContext`b, $CellContext`c, $CellContext`a]}, 
           ImageSize -> 
           Tiny], {$CellContext`a, $CellContext`b, $CellContext`c}}, 
         Center], $CellContext`assignColor[{
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}] := {
         If[
         GCD[$CellContext`a, $CellContext`b, $CellContext`c] == 1, Blue, 
          Red], {$CellContext`a, $CellContext`b, $CellContext`c}}, \
$CellContext`chopLarge[
         Pattern[$CellContext`L, 
          Blank[List]], 
         Pattern[$CellContext`zoom, 
          Blank[]]] := Module[{$CellContext`max}, $CellContext`max = Max[
            Flatten[
             Map[Take[#, 2]& , $CellContext`L]]]; 
         Select[$CellContext`L, And[
           Part[#, 1] <= $CellContext`max/10^$CellContext`zoom, 
            Part[#, 2] <= $CellContext`max/
             10^$CellContext`zoom]& ]], $CellContext`fromIndexToPT[
         Pattern[$CellContext`i, 
          Blank[]]] := $CellContext`fromPairToPT[
         $CellContext`unrankCantor[$CellContext`i]], \
$CellContext`fromPairToPT[{
          Pattern[$CellContext`m, 
           Blank[]], 
          Pattern[$CellContext`n, 
           
           Blank[]]}] := $CellContext`m \
$CellContext`fromIndexToPPT[$CellContext`n], $CellContext`fromIndexToPPT[
         Pattern[$CellContext`n, 
          Blank[]]] := $CellContext`toPPT[
         $CellContext`toCWPair[
          $CellContext`cnn[$CellContext`n]]], $CellContext`toPPT[{
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           Blank[]]}] := {$CellContext`v^2 - $CellContext`u^2, 
         2 $CellContext`u $CellContext`v, $CellContext`v^2 + \
$CellContext`u^2}, $CellContext`toCWPair[
         Pattern[$CellContext`i, 
          Blank[Integer]]] := Module[{$CellContext`b = Rest[
            IntegerDigits[$CellContext`i, 2]], $CellContext`t = {1, 1}}, 
         Scan[If[# == 0, $CellContext`t = {
              First[$CellContext`t], 
              Total[$CellContext`t]}, $CellContext`t = {
              Total[$CellContext`t], 
              
              Last[$CellContext`t]}]& , $CellContext`b]; $CellContext`t], \
$CellContext`cnn[
         Pattern[$CellContext`n, 
          Blank[]]] := 
       3 $CellContext`n - (1/2) (
         1 - (-1)^$CellContext`n), $CellContext`unrankCantor[
         Pattern[$CellContext`x, 
          Blank[Integer]]] := 
       Module[{$CellContext`k, $CellContext`m, $CellContext`n}, \
$CellContext`k = $CellContext`invTri[$CellContext`x]; $CellContext`n = \
$CellContext`x - $CellContext`Tri[$CellContext`k - 
            1]; $CellContext`m = $CellContext`k - $CellContext`n + 
           1; {$CellContext`m, $CellContext`n}], $CellContext`invTri[
         Pattern[$CellContext`x, 
          Blank[Integer]]] := 
       Ceiling[(1/2) (-1 + Sqrt[1 + 8 $CellContext`x])], $CellContext`Tri[
         Pattern[$CellContext`n, 
          Blank[]]] := (1/2) $CellContext`n (
         1 + $CellContext`n), $CellContext`vf[{
          Pattern[$CellContext`xc, 
           Blank[]], 
          Pattern[$CellContext`yc, 
           Blank[]]}, 
         Pattern[$CellContext`name, 
          Blank[]], {
          Pattern[$CellContext`w, 
           Blank[]], 
          Pattern[$CellContext`h, 
           Blank[]]}] := 
       Module[{$CellContext`m, $CellContext`n}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`name]; {
           EdgeForm[None], 
           Hue[0.6 + 0.15 ($CellContext`m + $CellContext`n)], 
           
           Rectangle[{$CellContext`xc, $CellContext`yc} - {0.4, 
            0.17}, {$CellContext`xc, $CellContext`yc} + {0.4, 0.17}, 
            RoundingRadius -> 0.11], Black, 
           Text[
            $CellContext`display[$CellContext`name], {$CellContext`xc, \
$CellContext`yc}]}], $CellContext`display[
         Pattern[$CellContext`i, 
          Blank[Integer]]] := 
       Module[{$CellContext`m, $CellContext`n}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`i]; Tooltip[
           Style[
            Row[{$CellContext`m, 
              Subscript[$CellContext`\[ScriptCapitalP], $CellContext`n]}, 
             " "], 16], 
           Style[
            Row[{$CellContext`i, ": ", $CellContext`m, 
              $CellContext`fromIndexToPPT[$CellContext`n], 
              "=", $CellContext`m \
$CellContext`fromIndexToPPT[$CellContext`n]}, " "], 14]]], $CellContext`ef[
         Pattern[$CellContext`lines, 
          BlankSequence[]], 
         Pattern[$CellContext`edge, 
          Blank[]]] := 
       Module[{$CellContext`x1, $CellContext`y1, $CellContext`x2, \
$CellContext`y2}, {$CellContext`x1, $CellContext`y1} = {
            1, -1} $CellContext`unrankCantor[
             
             Part[$CellContext`edge, 
              1]]; {$CellContext`x2, $CellContext`y2} = {
            1, -1} $CellContext`unrankCantor[
             Part[$CellContext`edge, 2]]; {
           If[$CellContext`x1 == 1, Red, Blue], 
           Arrowheads[Medium], 
           
           Arrow[{{$CellContext`x1, $CellContext`y1}, {$CellContext`x2, \
$CellContext`y2}}, 0.35]}], $CellContext`derivation[
         Pattern[$CellContext`i, 
          Blank[]]] := 
       Module[{$CellContext`n, $CellContext`m}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`i]; {$CellContext`i, 
           ":", "{", $CellContext`m, ",", $CellContext`n, "}", ":", 
           $CellContext`cnn[$CellContext`n], ":", 
           $CellContext`toCWPair[
            $CellContext`cnn[$CellContext`n]], ":", $CellContext`m, 
           "\[Times]", 
           $CellContext`fromIndexToPPT[$CellContext`n], "=", 
           $CellContext`fromIndexToPT[$CellContext`i]}]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->33067823,ExpressionUUID->"15ff67df-35d8-4594-8ef5-1272d482ebf1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Snapshots",
 Cell[BoxData[
  TemplateBox[{"Snapshots", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{"To create snapshots, paste the output cell from the ", 
          StyleBox["Manipulate", "MRbig"], 
          " section in this section at least three times, and adjust the \
controls of each copy to show a range of interesting settings. Do not convert \
the screenshots to bitmaps. Optional captions for the screenshots may be \
included in the Details section.", 
          StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "d854de0f-efbb-449a-8b04-a7b3ca5773d5"]
}], "SnapshotsSection",
 CellTags->"Snapshots",ExpressionUUID->"96bb7a68-4496-4362-86d3-c2a0812907f2"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1000, $CellContext`mode$$ = 
    1, $CellContext`zoom$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 1000, 
       Style["i", Italic]}, 1, 1000, 1}, {{
       Hold[$CellContext`mode$$], 1}, {1 -> Row[{"graph ", 
          Style["AB", Italic]}], 2 -> Row[{"list {", 
          Style["A", Italic], ", ", 
          Style["B", Italic], ", ", 
          Style["C", Italic], "}"}], 3 -> "Cantor ordering", 4 -> 
       "derivation"}}, {{
       Hold[$CellContext`zoom$$], 2}, 0, 3}, {
      Hold[
       Grid[{{
          Manipulate`Place[1], 
          Manipulate`Place[2]}, {
          Manipulate`Place[3], 
          Row[{
            Spacer[20], "In the graph, hover over a point to see {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "} and a proportional triangle."}]}}, 
        Alignment -> {{Right, Left}, Automatic}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    555., {173., 193.4953125}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`i$$ = 1000, $CellContext`mode$$ = 
        1, $CellContext`zoom$$ = 2}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Switch[$CellContext`mode$$, 1, 
        Panel[
         ListPlot[
          Map[Tooltip[
            Most[
             Part[#, 2]], 
            $CellContext`showTriangle[#]]& , 
           GatherBy[
            Map[$CellContext`assignColor, 
             $CellContext`chopLarge[
              Map[$CellContext`fromIndexToPT, 
               Range[$CellContext`i$$]], $CellContext`zoom$$]], First], {2}], 
          PlotStyle -> {Blue, Red}, AxesLabel -> {
            Style["A", Italic], 
            Style["B", Italic]}, AspectRatio -> 1, ImageSize -> 
          1.2 {450, 275}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}", ", zoom level: ", 
            ToString[$CellContext`zoom$$]}], "Label", Medium], Alignment -> 
         Center], 2, 
        Panel[
         Pane[
          Map[$CellContext`fromIndexToPT, 
           Range[$CellContext`i$$]], ImageSize -> {450, 275}, ImageSizeAction -> 
          "Scrollable", Scrollbars -> {False, Automatic}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}."}], "Label", Medium], ImageSize -> 
         1.2 {450, 275}, Alignment -> Center], 3, 
        Panel[
         Pane[
          Graph[
           Table[
            
            DirectedEdge[$CellContext`k, $CellContext`k + 1], {$CellContext`k,
              1, $CellContext`i$$ - 1}], VertexCoordinates -> 
           Map[# -> {1, -1} $CellContext`unrankCantor[#]& , 
             Range[$CellContext`i$$]], VertexShapeFunction -> $CellContext`vf,
            EdgeShapeFunction -> $CellContext`ef, AspectRatio -> 0.7, 
           ImageSize -> 50 Total[
              $CellContext`unrankCantor[$CellContext`i$$]]], 
          ImageSize -> {450, 275}, ImageSizeAction -> "Scrollable", 
          Scrollbars -> {Automatic, Automatic}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], 
            " Pythagorean triples shown in Cantor diagonalization order."}], 
          "Label", Medium], ImageSize -> 1.2 {450, 275}, Alignment -> Center],
         4, 
        Panel[
         Pane[
          Grid[
           Prepend[
            Map[$CellContext`derivation, 
             Range[$CellContext`i$$]], {
             Style["i", Italic], "", "", 
             Style["m", Italic], "", 
             Style["n", Italic], "", "", 
             Style["cnn(n)", Italic], "", 
             Style["C-W", Italic], "", 
             Style["m", Italic], "", 
             Style["{a,b,c}", Italic], "", 
             Style["{A,B,C}", Italic]}], 
           ItemStyle -> {{
             Black, Black, Black, Red, Black, Blue, Black, Black, Blue, Black,
               Blue, Black, Red, Black, Blue, Black, Purple}, Automatic}, 
           Spacings -> {{
             3, 1, 1, 0, 0, 0.1, 0.3, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1}, 0.5}, 
           Alignment -> {{
             Center, Center, Center, Center, Center, Center, Center, Center, 
              Center, Center, Center, Center, Right, Center, Left, Left, 
              Left}, Automatic}], ImageSize -> 1.2 {450, 275}, 
          Alignment -> {Left, Top}, Scrollbars -> {False, Automatic}], 
         Style[
          Row[{"Derivation of first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}."}], "Label", Medium]]], 
      "Specifications" :> {{{$CellContext`i$$, 1000, 
          Style["i", Italic]}, 1, 1000, 1, Appearance -> "Labeled", 
         ControlPlacement -> 1}, {{$CellContext`mode$$, 1}, {
         1 -> Row[{"graph ", 
             Style["AB", Italic]}], 2 -> Row[{"list {", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ", ", 
             Style["C", Italic], "}"}], 3 -> "Cantor ordering", 4 -> 
          "derivation"}, ControlPlacement -> 2}, {{$CellContext`zoom$$, 2}, 0,
          3, Appearance -> "Labeled", Enabled -> 
         Dynamic[$CellContext`mode$$ == 1], ControlPlacement -> 3}, 
        Grid[{{
           Manipulate`Place[1], 
           Manipulate`Place[2]}, {
           Manipulate`Place[3], 
           Row[{
             Spacer[20], "In the graph, hover over a point to see {", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ", ", 
             Style["C", Italic], "} and a proportional triangle."}]}}, 
         Alignment -> {{Right, Left}, Automatic}]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{600., {234.3544921875, 239.6455078125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`showTriangle[{
          Pattern[$CellContext`color, 
           Blank[]], {
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`b, 
            Blank[]], 
           Pattern[$CellContext`c, 
            Blank[]]}}] := Column[{
          Graphics[{
            EdgeForm[Thick], $CellContext`color, 
            SSSTriangle[$CellContext`b, $CellContext`c, $CellContext`a]}, 
           ImageSize -> 
           Tiny], {$CellContext`a, $CellContext`b, $CellContext`c}}, 
         Center], $CellContext`assignColor[{
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}] := {
         If[
         GCD[$CellContext`a, $CellContext`b, $CellContext`c] == 1, Blue, 
          Red], {$CellContext`a, $CellContext`b, $CellContext`c}}, \
$CellContext`chopLarge[
         Pattern[$CellContext`L, 
          Blank[List]], 
         Pattern[$CellContext`zoom, 
          Blank[]]] := Module[{$CellContext`max}, $CellContext`max = Max[
            Flatten[
             Map[Take[#, 2]& , $CellContext`L]]]; 
         Select[$CellContext`L, And[
           Part[#, 1] <= $CellContext`max/10^$CellContext`zoom, 
            Part[#, 2] <= $CellContext`max/
             10^$CellContext`zoom]& ]], $CellContext`fromIndexToPT[
         Pattern[$CellContext`i, 
          Blank[]]] := $CellContext`fromPairToPT[
         $CellContext`unrankCantor[$CellContext`i]], \
$CellContext`fromPairToPT[{
          Pattern[$CellContext`m, 
           Blank[]], 
          Pattern[$CellContext`n, 
           
           Blank[]]}] := $CellContext`m \
$CellContext`fromIndexToPPT[$CellContext`n], $CellContext`fromIndexToPPT[
         Pattern[$CellContext`n, 
          Blank[]]] := $CellContext`toPPT[
         $CellContext`toCWPair[
          $CellContext`cnn[$CellContext`n]]], $CellContext`toPPT[{
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           Blank[]]}] := {$CellContext`v^2 - $CellContext`u^2, 
         2 $CellContext`u $CellContext`v, $CellContext`v^2 + \
$CellContext`u^2}, $CellContext`toCWPair[
         Pattern[$CellContext`i, 
          Blank[Integer]]] := Module[{$CellContext`b = Rest[
            IntegerDigits[$CellContext`i, 2]], $CellContext`t = {1, 1}}, 
         Scan[If[# == 0, $CellContext`t = {
              First[$CellContext`t], 
              Total[$CellContext`t]}, $CellContext`t = {
              Total[$CellContext`t], 
              
              Last[$CellContext`t]}]& , $CellContext`b]; $CellContext`t], \
$CellContext`cnn[
         Pattern[$CellContext`n, 
          Blank[]]] := 
       3 $CellContext`n - (1/2) (
         1 - (-1)^$CellContext`n), $CellContext`unrankCantor[
         Pattern[$CellContext`x, 
          Blank[Integer]]] := 
       Module[{$CellContext`k, $CellContext`m, $CellContext`n}, \
$CellContext`k = $CellContext`invTri[$CellContext`x]; $CellContext`n = \
$CellContext`x - $CellContext`Tri[$CellContext`k - 
            1]; $CellContext`m = $CellContext`k - $CellContext`n + 
           1; {$CellContext`m, $CellContext`n}], $CellContext`invTri[
         Pattern[$CellContext`x, 
          Blank[Integer]]] := 
       Ceiling[(1/2) (-1 + Sqrt[1 + 8 $CellContext`x])], $CellContext`Tri[
         Pattern[$CellContext`n, 
          Blank[]]] := (1/2) $CellContext`n (
         1 + $CellContext`n), $CellContext`vf[{
          Pattern[$CellContext`xc, 
           Blank[]], 
          Pattern[$CellContext`yc, 
           Blank[]]}, 
         Pattern[$CellContext`name, 
          Blank[]], {
          Pattern[$CellContext`w, 
           Blank[]], 
          Pattern[$CellContext`h, 
           Blank[]]}] := 
       Module[{$CellContext`m, $CellContext`n}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`name]; {
           EdgeForm[None], 
           Hue[0.6 + 0.15 ($CellContext`m + $CellContext`n)], 
           
           Rectangle[{$CellContext`xc, $CellContext`yc} - {0.4, 
            0.17}, {$CellContext`xc, $CellContext`yc} + {0.4, 0.17}, 
            RoundingRadius -> 0.11], Black, 
           Text[
            $CellContext`display[$CellContext`name], {$CellContext`xc, \
$CellContext`yc}]}], $CellContext`display[
         Pattern[$CellContext`i, 
          Blank[Integer]]] := 
       Module[{$CellContext`m, $CellContext`n}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`i]; Tooltip[
           Style[
            Row[{$CellContext`m, 
              Subscript[$CellContext`\[ScriptCapitalP], $CellContext`n]}, 
             " "], 16], 
           Style[
            Row[{$CellContext`i, ": ", $CellContext`m, 
              $CellContext`fromIndexToPPT[$CellContext`n], 
              "=", $CellContext`m \
$CellContext`fromIndexToPPT[$CellContext`n]}, " "], 14]]], $CellContext`ef[
         Pattern[$CellContext`lines, 
          BlankSequence[]], 
         Pattern[$CellContext`edge, 
          Blank[]]] := 
       Module[{$CellContext`x1, $CellContext`y1, $CellContext`x2, \
$CellContext`y2}, {$CellContext`x1, $CellContext`y1} = {
            1, -1} $CellContext`unrankCantor[
             
             Part[$CellContext`edge, 
              1]]; {$CellContext`x2, $CellContext`y2} = {
            1, -1} $CellContext`unrankCantor[
             Part[$CellContext`edge, 2]]; {
           If[$CellContext`x1 == 1, Red, Blue], 
           Arrowheads[Medium], 
           
           Arrow[{{$CellContext`x1, $CellContext`y1}, {$CellContext`x2, \
$CellContext`y2}}, 0.35]}], $CellContext`derivation[
         Pattern[$CellContext`i, 
          Blank[]]] := 
       Module[{$CellContext`n, $CellContext`m}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`i]; {$CellContext`i, 
           ":", "{", $CellContext`m, ",", $CellContext`n, "}", ":", 
           $CellContext`cnn[$CellContext`n], ":", 
           $CellContext`toCWPair[
            $CellContext`cnn[$CellContext`n]], ":", $CellContext`m, 
           "\[Times]", 
           $CellContext`fromIndexToPPT[$CellContext`n], "=", 
           $CellContext`fromIndexToPT[$CellContext`i]}]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->144790735,ExpressionUUID->"bef2b8af-fe89-4131-a8fb-8f7e33f15079"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 50, $CellContext`mode$$ = 
    2, $CellContext`zoom$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 50, 
       Style["i", Italic]}, 1, 1000, 1}, {{
       Hold[$CellContext`mode$$], 2}, {1 -> Row[{"graph ", 
          Style["AB", Italic]}], 2 -> Row[{"list {", 
          Style["A", Italic], ", ", 
          Style["B", Italic], ", ", 
          Style["C", Italic], "}"}], 3 -> "Cantor ordering", 4 -> 
       "derivation"}}, {
      Hold[$CellContext`zoom$$], 0, 3}, {
      Hold[
       Grid[{{
          Manipulate`Place[1], 
          Manipulate`Place[2]}, {
          Manipulate`Place[3], 
          Row[{
            Spacer[20], "In the graph, hover over a point to see {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "} and a proportional triangle."}]}}, 
        Alignment -> {{Right, Left}, Automatic}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    540., {163., 184.4953125}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`i$$ = 50, $CellContext`mode$$ = 
        2, $CellContext`zoom$$ = 0}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Switch[$CellContext`mode$$, 1, 
        Panel[
         ListPlot[
          Map[Tooltip[
            Most[
             Part[#, 2]], 
            $CellContext`showTriangle[#]]& , 
           GatherBy[
            Map[$CellContext`assignColor, 
             $CellContext`chopLarge[
              Map[$CellContext`fromIndexToPT, 
               Range[$CellContext`i$$]], $CellContext`zoom$$]], First], {2}], 
          PlotStyle -> {Blue, Red}, AxesLabel -> {
            Style["A", Italic], 
            Style["B", Italic]}, AspectRatio -> 1, ImageSize -> 
          1.2 {450, 275}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}", ", zoom level: ", 
            ToString[$CellContext`zoom$$]}], "Label", Medium], Alignment -> 
         Center], 2, 
        Panel[
         Pane[
          Map[$CellContext`fromIndexToPT, 
           Range[$CellContext`i$$]], ImageSize -> {450, 275}, ImageSizeAction -> 
          "Scrollable", Scrollbars -> {False, Automatic}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}."}], "Label", Medium], ImageSize -> 
         1.2 {450, 275}, Alignment -> Center], 3, 
        Panel[
         Pane[
          Graph[
           Table[
            
            DirectedEdge[$CellContext`k, $CellContext`k + 1], {$CellContext`k,
              1, $CellContext`i$$ - 1}], VertexCoordinates -> 
           Map[# -> {1, -1} $CellContext`unrankCantor[#]& , 
             Range[$CellContext`i$$]], VertexShapeFunction -> $CellContext`vf,
            EdgeShapeFunction -> $CellContext`ef, AspectRatio -> 0.7, 
           ImageSize -> 50 Total[
              $CellContext`unrankCantor[$CellContext`i$$]]], 
          ImageSize -> {450, 275}, ImageSizeAction -> "Scrollable", 
          Scrollbars -> {Automatic, Automatic}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], 
            " Pythagorean triples shown in Cantor diagonalization order."}], 
          "Label", Medium], ImageSize -> 1.2 {450, 275}, Alignment -> Center],
         4, 
        Panel[
         Pane[
          Grid[
           Prepend[
            Map[$CellContext`derivation, 
             Range[$CellContext`i$$]], {
             Style["i", Italic], "", "", 
             Style["m", Italic], "", 
             Style["n", Italic], "", "", 
             Style["cnn(n)", Italic], "", 
             Style["C-W", Italic], "", 
             Style["m", Italic], "", 
             Style["{a,b,c}", Italic], "", 
             Style["{A,B,C}", Italic]}], 
           ItemStyle -> {{
             Black, Black, Black, Red, Black, Blue, Black, Black, Blue, Black,
               Blue, Black, Red, Black, Blue, Black, Purple}, Automatic}, 
           Spacings -> {{
             3, 1, 1, 0, 0, 0.1, 0.3, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1}, 0.5}, 
           Alignment -> {{
             Center, Center, Center, Center, Center, Center, Center, Center, 
              Center, Center, Center, Center, Right, Center, Left, Left, 
              Left}, Automatic}], ImageSize -> 1.2 {450, 275}, 
          Alignment -> {Left, Top}, Scrollbars -> {False, Automatic}], 
         Style[
          Row[{"Derivation of first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}."}], "Label", Medium]]], 
      "Specifications" :> {{{$CellContext`i$$, 50, 
          Style["i", Italic]}, 1, 1000, 1, Appearance -> "Labeled", 
         ControlPlacement -> 1}, {{$CellContext`mode$$, 2}, {
         1 -> Row[{"graph ", 
             Style["AB", Italic]}], 2 -> Row[{"list {", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ", ", 
             Style["C", Italic], "}"}], 3 -> "Cantor ordering", 4 -> 
          "derivation"}, ControlPlacement -> 2}, {$CellContext`zoom$$, 0, 3, 
         Appearance -> "Labeled", Enabled -> 
         Dynamic[$CellContext`mode$$ == 1], ControlPlacement -> 3}, 
        Grid[{{
           Manipulate`Place[1], 
           Manipulate`Place[2]}, {
           Manipulate`Place[3], 
           Row[{
             Spacer[20], "In the graph, hover over a point to see {", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ", ", 
             Style["C", Italic], "} and a proportional triangle."}]}}, 
         Alignment -> {{Right, Left}, Automatic}]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{585., {225.3544921875, 230.6455078125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`showTriangle[{
          Pattern[$CellContext`color, 
           Blank[]], {
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`b, 
            Blank[]], 
           Pattern[$CellContext`c, 
            Blank[]]}}] := Column[{
          Graphics[{
            EdgeForm[Thick], $CellContext`color, 
            SSSTriangle[$CellContext`b, $CellContext`c, $CellContext`a]}, 
           ImageSize -> 
           Tiny], {$CellContext`a, $CellContext`b, $CellContext`c}}, 
         Center], $CellContext`assignColor[{
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}] := {
         If[
         GCD[$CellContext`a, $CellContext`b, $CellContext`c] == 1, Blue, 
          Red], {$CellContext`a, $CellContext`b, $CellContext`c}}, \
$CellContext`chopLarge[
         Pattern[$CellContext`L, 
          Blank[List]], 
         Pattern[$CellContext`zoom, 
          Blank[]]] := Module[{$CellContext`max}, $CellContext`max = Max[
            Flatten[
             Map[Take[#, 2]& , $CellContext`L]]]; 
         Select[$CellContext`L, And[
           Part[#, 1] <= $CellContext`max/10^$CellContext`zoom, 
            Part[#, 2] <= $CellContext`max/
             10^$CellContext`zoom]& ]], $CellContext`fromIndexToPT[
         Pattern[$CellContext`i, 
          Blank[]]] := $CellContext`fromPairToPT[
         $CellContext`unrankCantor[$CellContext`i]], \
$CellContext`fromPairToPT[{
          Pattern[$CellContext`m, 
           Blank[]], 
          Pattern[$CellContext`n, 
           
           Blank[]]}] := $CellContext`m \
$CellContext`fromIndexToPPT[$CellContext`n], $CellContext`fromIndexToPPT[
         Pattern[$CellContext`n, 
          Blank[]]] := $CellContext`toPPT[
         $CellContext`toCWPair[
          $CellContext`cnn[$CellContext`n]]], $CellContext`toPPT[{
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           Blank[]]}] := {$CellContext`v^2 - $CellContext`u^2, 
         2 $CellContext`u $CellContext`v, $CellContext`v^2 + \
$CellContext`u^2}, $CellContext`toCWPair[
         Pattern[$CellContext`i, 
          Blank[Integer]]] := Module[{$CellContext`b = Rest[
            IntegerDigits[$CellContext`i, 2]], $CellContext`t = {1, 1}}, 
         Scan[If[# == 0, $CellContext`t = {
              First[$CellContext`t], 
              Total[$CellContext`t]}, $CellContext`t = {
              Total[$CellContext`t], 
              
              Last[$CellContext`t]}]& , $CellContext`b]; $CellContext`t], \
$CellContext`cnn[
         Pattern[$CellContext`n, 
          Blank[]]] := 
       3 $CellContext`n - (1/2) (
         1 - (-1)^$CellContext`n), $CellContext`unrankCantor[
         Pattern[$CellContext`x, 
          Blank[Integer]]] := 
       Module[{$CellContext`k, $CellContext`m, $CellContext`n}, \
$CellContext`k = $CellContext`invTri[$CellContext`x]; $CellContext`n = \
$CellContext`x - $CellContext`Tri[$CellContext`k - 
            1]; $CellContext`m = $CellContext`k - $CellContext`n + 
           1; {$CellContext`m, $CellContext`n}], $CellContext`invTri[
         Pattern[$CellContext`x, 
          Blank[Integer]]] := 
       Ceiling[(1/2) (-1 + Sqrt[1 + 8 $CellContext`x])], $CellContext`Tri[
         Pattern[$CellContext`n, 
          Blank[]]] := (1/2) $CellContext`n (
         1 + $CellContext`n), $CellContext`vf[{
          Pattern[$CellContext`xc, 
           Blank[]], 
          Pattern[$CellContext`yc, 
           Blank[]]}, 
         Pattern[$CellContext`name, 
          Blank[]], {
          Pattern[$CellContext`w, 
           Blank[]], 
          Pattern[$CellContext`h, 
           Blank[]]}] := 
       Module[{$CellContext`m, $CellContext`n}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`name]; {
           EdgeForm[None], 
           Hue[0.6 + 0.15 ($CellContext`m + $CellContext`n)], 
           
           Rectangle[{$CellContext`xc, $CellContext`yc} - {0.4, 
            0.17}, {$CellContext`xc, $CellContext`yc} + {0.4, 0.17}, 
            RoundingRadius -> 0.11], Black, 
           Text[
            $CellContext`display[$CellContext`name], {$CellContext`xc, \
$CellContext`yc}]}], $CellContext`display[
         Pattern[$CellContext`i, 
          Blank[Integer]]] := 
       Module[{$CellContext`m, $CellContext`n}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`i]; Tooltip[
           Style[
            Row[{$CellContext`m, 
              Subscript[$CellContext`\[ScriptCapitalP], $CellContext`n]}, 
             " "], 16], 
           Style[
            Row[{$CellContext`i, ": ", $CellContext`m, 
              $CellContext`fromIndexToPPT[$CellContext`n], 
              "=", $CellContext`m \
$CellContext`fromIndexToPPT[$CellContext`n]}, " "], 14]]], $CellContext`ef[
         Pattern[$CellContext`lines, 
          BlankSequence[]], 
         Pattern[$CellContext`edge, 
          Blank[]]] := 
       Module[{$CellContext`x1, $CellContext`y1, $CellContext`x2, \
$CellContext`y2}, {$CellContext`x1, $CellContext`y1} = {
            1, -1} $CellContext`unrankCantor[
             
             Part[$CellContext`edge, 
              1]]; {$CellContext`x2, $CellContext`y2} = {
            1, -1} $CellContext`unrankCantor[
             Part[$CellContext`edge, 2]]; {
           If[$CellContext`x1 == 1, Red, Blue], 
           Arrowheads[Medium], 
           
           Arrow[{{$CellContext`x1, $CellContext`y1}, {$CellContext`x2, \
$CellContext`y2}}, 0.35]}], $CellContext`derivation[
         Pattern[$CellContext`i, 
          Blank[]]] := 
       Module[{$CellContext`n, $CellContext`m}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`i]; {$CellContext`i, 
           ":", "{", $CellContext`m, ",", $CellContext`n, "}", ":", 
           $CellContext`cnn[$CellContext`n], ":", 
           $CellContext`toCWPair[
            $CellContext`cnn[$CellContext`n]], ":", $CellContext`m, 
           "\[Times]", 
           $CellContext`fromIndexToPPT[$CellContext`n], "=", 
           $CellContext`fromIndexToPT[$CellContext`i]}]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->225027479,ExpressionUUID->"bae1c668-c55f-4e89-b963-54eabeeeb42d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 50, $CellContext`mode$$ = 
    3, $CellContext`zoom$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 50, 
       Style["i", Italic]}, 1, 1000, 1}, {{
       Hold[$CellContext`mode$$], 3}, {1 -> Row[{"graph ", 
          Style["AB", Italic]}], 2 -> Row[{"list {", 
          Style["A", Italic], ", ", 
          Style["B", Italic], ", ", 
          Style["C", Italic], "}"}], 3 -> "Cantor ordering", 4 -> 
       "derivation"}}, {
      Hold[$CellContext`zoom$$], 0, 3}, {
      Hold[
       Grid[{{
          Manipulate`Place[1], 
          Manipulate`Place[2]}, {
          Manipulate`Place[3], 
          Row[{
            Spacer[20], "In the graph, hover over a point to see {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "} and a proportional triangle."}]}}, 
        Alignment -> {{Right, Left}, Automatic}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    540., {163., 184.454296875}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`i$$ = 50, $CellContext`mode$$ = 
        3, $CellContext`zoom$$ = 0}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Switch[$CellContext`mode$$, 1, 
        Panel[
         ListPlot[
          Map[Tooltip[
            Most[
             Part[#, 2]], 
            $CellContext`showTriangle[#]]& , 
           GatherBy[
            Map[$CellContext`assignColor, 
             $CellContext`chopLarge[
              Map[$CellContext`fromIndexToPT, 
               Range[$CellContext`i$$]], $CellContext`zoom$$]], First], {2}], 
          PlotStyle -> {Blue, Red}, AxesLabel -> {
            Style["A", Italic], 
            Style["B", Italic]}, AspectRatio -> 1, ImageSize -> 
          1.2 {450, 275}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}", ", zoom level: ", 
            ToString[$CellContext`zoom$$]}], "Label", Medium], Alignment -> 
         Center], 2, 
        Panel[
         Pane[
          Map[$CellContext`fromIndexToPT, 
           Range[$CellContext`i$$]], ImageSize -> {450, 275}, ImageSizeAction -> 
          "Scrollable", Scrollbars -> {False, Automatic}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}."}], "Label", Medium], ImageSize -> 
         1.2 {450, 275}, Alignment -> Center], 3, 
        Panel[
         Pane[
          Graph[
           Table[
            
            DirectedEdge[$CellContext`k, $CellContext`k + 1], {$CellContext`k,
              1, $CellContext`i$$ - 1}], VertexCoordinates -> 
           Map[# -> {1, -1} $CellContext`unrankCantor[#]& , 
             Range[$CellContext`i$$]], VertexShapeFunction -> $CellContext`vf,
            EdgeShapeFunction -> $CellContext`ef, AspectRatio -> 0.7, 
           ImageSize -> 50 Total[
              $CellContext`unrankCantor[$CellContext`i$$]]], 
          ImageSize -> {450, 275}, ImageSizeAction -> "Scrollable", 
          Scrollbars -> {Automatic, Automatic}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], 
            " Pythagorean triples shown in Cantor diagonalization order."}], 
          "Label", Medium], ImageSize -> 1.2 {450, 275}, Alignment -> Center],
         4, 
        Panel[
         Pane[
          Grid[
           Prepend[
            Map[$CellContext`derivation, 
             Range[$CellContext`i$$]], {
             Style["i", Italic], "", "", 
             Style["m", Italic], "", 
             Style["n", Italic], "", "", 
             Style["cnn(n)", Italic], "", 
             Style["C-W", Italic], "", 
             Style["m", Italic], "", 
             Style["{a,b,c}", Italic], "", 
             Style["{A,B,C}", Italic]}], 
           ItemStyle -> {{
             Black, Black, Black, Red, Black, Blue, Black, Black, Blue, Black,
               Blue, Black, Red, Black, Blue, Black, Purple}, Automatic}, 
           Spacings -> {{
             3, 1, 1, 0, 0, 0.1, 0.3, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1}, 0.5}, 
           Alignment -> {{
             Center, Center, Center, Center, Center, Center, Center, Center, 
              Center, Center, Center, Center, Right, Center, Left, Left, 
              Left}, Automatic}], ImageSize -> 1.2 {450, 275}, 
          Alignment -> {Left, Top}, Scrollbars -> {False, Automatic}], 
         Style[
          Row[{"Derivation of first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}."}], "Label", Medium]]], 
      "Specifications" :> {{{$CellContext`i$$, 50, 
          Style["i", Italic]}, 1, 1000, 1, Appearance -> "Labeled", 
         ControlPlacement -> 1}, {{$CellContext`mode$$, 3}, {
         1 -> Row[{"graph ", 
             Style["AB", Italic]}], 2 -> Row[{"list {", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ", ", 
             Style["C", Italic], "}"}], 3 -> "Cantor ordering", 4 -> 
          "derivation"}, ControlPlacement -> 2}, {$CellContext`zoom$$, 0, 3, 
         Appearance -> "Labeled", Enabled -> 
         Dynamic[$CellContext`mode$$ == 1], ControlPlacement -> 3}, 
        Grid[{{
           Manipulate`Place[1], 
           Manipulate`Place[2]}, {
           Manipulate`Place[3], 
           Row[{
             Spacer[20], "In the graph, hover over a point to see {", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ", ", 
             Style["C", Italic], "} and a proportional triangle."}]}}, 
         Alignment -> {{Right, Left}, Automatic}]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{585., {225.3544921875, 230.6455078125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`showTriangle[{
          Pattern[$CellContext`color, 
           Blank[]], {
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`b, 
            Blank[]], 
           Pattern[$CellContext`c, 
            Blank[]]}}] := Column[{
          Graphics[{
            EdgeForm[Thick], $CellContext`color, 
            SSSTriangle[$CellContext`b, $CellContext`c, $CellContext`a]}, 
           ImageSize -> 
           Tiny], {$CellContext`a, $CellContext`b, $CellContext`c}}, 
         Center], $CellContext`assignColor[{
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}] := {
         If[
         GCD[$CellContext`a, $CellContext`b, $CellContext`c] == 1, Blue, 
          Red], {$CellContext`a, $CellContext`b, $CellContext`c}}, \
$CellContext`chopLarge[
         Pattern[$CellContext`L, 
          Blank[List]], 
         Pattern[$CellContext`zoom, 
          Blank[]]] := Module[{$CellContext`max}, $CellContext`max = Max[
            Flatten[
             Map[Take[#, 2]& , $CellContext`L]]]; 
         Select[$CellContext`L, And[
           Part[#, 1] <= $CellContext`max/10^$CellContext`zoom, 
            Part[#, 2] <= $CellContext`max/
             10^$CellContext`zoom]& ]], $CellContext`fromIndexToPT[
         Pattern[$CellContext`i, 
          Blank[]]] := $CellContext`fromPairToPT[
         $CellContext`unrankCantor[$CellContext`i]], \
$CellContext`fromPairToPT[{
          Pattern[$CellContext`m, 
           Blank[]], 
          Pattern[$CellContext`n, 
           
           Blank[]]}] := $CellContext`m \
$CellContext`fromIndexToPPT[$CellContext`n], $CellContext`fromIndexToPPT[
         Pattern[$CellContext`n, 
          Blank[]]] := $CellContext`toPPT[
         $CellContext`toCWPair[
          $CellContext`cnn[$CellContext`n]]], $CellContext`toPPT[{
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           Blank[]]}] := {$CellContext`v^2 - $CellContext`u^2, 
         2 $CellContext`u $CellContext`v, $CellContext`v^2 + \
$CellContext`u^2}, $CellContext`toCWPair[
         Pattern[$CellContext`i, 
          Blank[Integer]]] := Module[{$CellContext`b = Rest[
            IntegerDigits[$CellContext`i, 2]], $CellContext`t = {1, 1}}, 
         Scan[If[# == 0, $CellContext`t = {
              First[$CellContext`t], 
              Total[$CellContext`t]}, $CellContext`t = {
              Total[$CellContext`t], 
              
              Last[$CellContext`t]}]& , $CellContext`b]; $CellContext`t], \
$CellContext`cnn[
         Pattern[$CellContext`n, 
          Blank[]]] := 
       3 $CellContext`n - (1/2) (
         1 - (-1)^$CellContext`n), $CellContext`unrankCantor[
         Pattern[$CellContext`x, 
          Blank[Integer]]] := 
       Module[{$CellContext`k, $CellContext`m, $CellContext`n}, \
$CellContext`k = $CellContext`invTri[$CellContext`x]; $CellContext`n = \
$CellContext`x - $CellContext`Tri[$CellContext`k - 
            1]; $CellContext`m = $CellContext`k - $CellContext`n + 
           1; {$CellContext`m, $CellContext`n}], $CellContext`invTri[
         Pattern[$CellContext`x, 
          Blank[Integer]]] := 
       Ceiling[(1/2) (-1 + Sqrt[1 + 8 $CellContext`x])], $CellContext`Tri[
         Pattern[$CellContext`n, 
          Blank[]]] := (1/2) $CellContext`n (
         1 + $CellContext`n), $CellContext`vf[{
          Pattern[$CellContext`xc, 
           Blank[]], 
          Pattern[$CellContext`yc, 
           Blank[]]}, 
         Pattern[$CellContext`name, 
          Blank[]], {
          Pattern[$CellContext`w, 
           Blank[]], 
          Pattern[$CellContext`h, 
           Blank[]]}] := 
       Module[{$CellContext`m, $CellContext`n}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`name]; {
           EdgeForm[None], 
           Hue[0.6 + 0.15 ($CellContext`m + $CellContext`n)], 
           
           Rectangle[{$CellContext`xc, $CellContext`yc} - {0.4, 
            0.17}, {$CellContext`xc, $CellContext`yc} + {0.4, 0.17}, 
            RoundingRadius -> 0.11], Black, 
           Text[
            $CellContext`display[$CellContext`name], {$CellContext`xc, \
$CellContext`yc}]}], $CellContext`display[
         Pattern[$CellContext`i, 
          Blank[Integer]]] := 
       Module[{$CellContext`m, $CellContext`n}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`i]; Tooltip[
           Style[
            Row[{$CellContext`m, 
              Subscript[$CellContext`\[ScriptCapitalP], $CellContext`n]}, 
             " "], 16], 
           Style[
            Row[{$CellContext`i, ": ", $CellContext`m, 
              $CellContext`fromIndexToPPT[$CellContext`n], 
              "=", $CellContext`m \
$CellContext`fromIndexToPPT[$CellContext`n]}, " "], 14]]], $CellContext`ef[
         Pattern[$CellContext`lines, 
          BlankSequence[]], 
         Pattern[$CellContext`edge, 
          Blank[]]] := 
       Module[{$CellContext`x1, $CellContext`y1, $CellContext`x2, \
$CellContext`y2}, {$CellContext`x1, $CellContext`y1} = {
            1, -1} $CellContext`unrankCantor[
             
             Part[$CellContext`edge, 
              1]]; {$CellContext`x2, $CellContext`y2} = {
            1, -1} $CellContext`unrankCantor[
             Part[$CellContext`edge, 2]]; {
           If[$CellContext`x1 == 1, Red, Blue], 
           Arrowheads[Medium], 
           
           Arrow[{{$CellContext`x1, $CellContext`y1}, {$CellContext`x2, \
$CellContext`y2}}, 0.35]}], $CellContext`derivation[
         Pattern[$CellContext`i, 
          Blank[]]] := 
       Module[{$CellContext`n, $CellContext`m}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`i]; {$CellContext`i, 
           ":", "{", $CellContext`m, ",", $CellContext`n, "}", ":", 
           $CellContext`cnn[$CellContext`n], ":", 
           $CellContext`toCWPair[
            $CellContext`cnn[$CellContext`n]], ":", $CellContext`m, 
           "\[Times]", 
           $CellContext`fromIndexToPPT[$CellContext`n], "=", 
           $CellContext`fromIndexToPT[$CellContext`i]}]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->76571813,ExpressionUUID->"5482c806-f3aa-4202-adf7-c00d4597a46a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 50, $CellContext`mode$$ = 
    4, $CellContext`zoom$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 50, 
       Style["i", Italic]}, 1, 1000, 1}, {{
       Hold[$CellContext`mode$$], 4}, {1 -> Row[{"graph ", 
          Style["AB", Italic]}], 2 -> Row[{"list {", 
          Style["A", Italic], ", ", 
          Style["B", Italic], ", ", 
          Style["C", Italic], "}"}], 3 -> "Cantor ordering", 4 -> 
       "derivation"}}, {
      Hold[$CellContext`zoom$$], 0, 3}, {
      Hold[
       Grid[{{
          Manipulate`Place[1], 
          Manipulate`Place[2]}, {
          Manipulate`Place[3], 
          Row[{
            Spacer[20], "In the graph, hover over a point to see {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "} and a proportional triangle."}]}}, 
        Alignment -> {{Right, Left}, Automatic}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    555., {173., 194.4953125}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`i$$ = 50, $CellContext`mode$$ = 
        4, $CellContext`zoom$$ = 0}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Switch[$CellContext`mode$$, 1, 
        Panel[
         ListPlot[
          Map[Tooltip[
            Most[
             Part[#, 2]], 
            $CellContext`showTriangle[#]]& , 
           GatherBy[
            Map[$CellContext`assignColor, 
             $CellContext`chopLarge[
              Map[$CellContext`fromIndexToPT, 
               Range[$CellContext`i$$]], $CellContext`zoom$$]], First], {2}], 
          PlotStyle -> {Blue, Red}, AxesLabel -> {
            Style["A", Italic], 
            Style["B", Italic]}, AspectRatio -> 1, ImageSize -> 
          1.2 {450, 275}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}", ", zoom level: ", 
            ToString[$CellContext`zoom$$]}], "Label", Medium], Alignment -> 
         Center], 2, 
        Panel[
         Pane[
          Map[$CellContext`fromIndexToPT, 
           Range[$CellContext`i$$]], ImageSize -> {450, 275}, ImageSizeAction -> 
          "Scrollable", Scrollbars -> {False, Automatic}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}."}], "Label", Medium], ImageSize -> 
         1.2 {450, 275}, Alignment -> Center], 3, 
        Panel[
         Pane[
          Graph[
           Table[
            
            DirectedEdge[$CellContext`k, $CellContext`k + 1], {$CellContext`k,
              1, $CellContext`i$$ - 1}], VertexCoordinates -> 
           Map[# -> {1, -1} $CellContext`unrankCantor[#]& , 
             Range[$CellContext`i$$]], VertexShapeFunction -> $CellContext`vf,
            EdgeShapeFunction -> $CellContext`ef, AspectRatio -> 0.7, 
           ImageSize -> 50 Total[
              $CellContext`unrankCantor[$CellContext`i$$]]], 
          ImageSize -> {450, 275}, ImageSizeAction -> "Scrollable", 
          Scrollbars -> {Automatic, Automatic}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], 
            " Pythagorean triples shown in Cantor diagonalization order."}], 
          "Label", Medium], ImageSize -> 1.2 {450, 275}, Alignment -> Center],
         4, 
        Panel[
         Pane[
          Grid[
           Prepend[
            Map[$CellContext`derivation, 
             Range[$CellContext`i$$]], {
             Style["i", Italic], "", "", 
             Style["m", Italic], "", 
             Style["n", Italic], "", "", 
             Style["cnn(n)", Italic], "", 
             Style["C-W", Italic], "", 
             Style["m", Italic], "", 
             Style["{a,b,c}", Italic], "", 
             Style["{A,B,C}", Italic]}], 
           ItemStyle -> {{
             Black, Black, Black, Red, Black, Blue, Black, Black, Blue, Black,
               Blue, Black, Red, Black, Blue, Black, Purple}, Automatic}, 
           Spacings -> {{
             3, 1, 1, 0, 0, 0.1, 0.3, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1}, 0.5}, 
           Alignment -> {{
             Center, Center, Center, Center, Center, Center, Center, Center, 
              Center, Center, Center, Center, Right, Center, Left, Left, 
              Left}, Automatic}], ImageSize -> 1.2 {450, 275}, 
          Alignment -> {Left, Top}, Scrollbars -> {False, Automatic}], 
         Style[
          Row[{"Derivation of first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}."}], "Label", Medium]]], 
      "Specifications" :> {{{$CellContext`i$$, 50, 
          Style["i", Italic]}, 1, 1000, 1, Appearance -> "Labeled", 
         ControlPlacement -> 1}, {{$CellContext`mode$$, 4}, {
         1 -> Row[{"graph ", 
             Style["AB", Italic]}], 2 -> Row[{"list {", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ", ", 
             Style["C", Italic], "}"}], 3 -> "Cantor ordering", 4 -> 
          "derivation"}, ControlPlacement -> 2}, {$CellContext`zoom$$, 0, 3, 
         Appearance -> "Labeled", Enabled -> 
         Dynamic[$CellContext`mode$$ == 1], ControlPlacement -> 3}, 
        Grid[{{
           Manipulate`Place[1], 
           Manipulate`Place[2]}, {
           Manipulate`Place[3], 
           Row[{
             Spacer[20], "In the graph, hover over a point to see {", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ", ", 
             Style["C", Italic], "} and a proportional triangle."}]}}, 
         Alignment -> {{Right, Left}, Automatic}]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{600., {235.3544921875, 240.6455078125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`showTriangle[{
          Pattern[$CellContext`color, 
           Blank[]], {
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`b, 
            Blank[]], 
           Pattern[$CellContext`c, 
            Blank[]]}}] := Column[{
          Graphics[{
            EdgeForm[Thick], $CellContext`color, 
            SSSTriangle[$CellContext`b, $CellContext`c, $CellContext`a]}, 
           ImageSize -> 
           Tiny], {$CellContext`a, $CellContext`b, $CellContext`c}}, 
         Center], $CellContext`assignColor[{
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}] := {
         If[
         GCD[$CellContext`a, $CellContext`b, $CellContext`c] == 1, Blue, 
          Red], {$CellContext`a, $CellContext`b, $CellContext`c}}, \
$CellContext`chopLarge[
         Pattern[$CellContext`L, 
          Blank[List]], 
         Pattern[$CellContext`zoom, 
          Blank[]]] := Module[{$CellContext`max}, $CellContext`max = Max[
            Flatten[
             Map[Take[#, 2]& , $CellContext`L]]]; 
         Select[$CellContext`L, And[
           Part[#, 1] <= $CellContext`max/10^$CellContext`zoom, 
            Part[#, 2] <= $CellContext`max/
             10^$CellContext`zoom]& ]], $CellContext`fromIndexToPT[
         Pattern[$CellContext`i, 
          Blank[]]] := $CellContext`fromPairToPT[
         $CellContext`unrankCantor[$CellContext`i]], \
$CellContext`fromPairToPT[{
          Pattern[$CellContext`m, 
           Blank[]], 
          Pattern[$CellContext`n, 
           
           Blank[]]}] := $CellContext`m \
$CellContext`fromIndexToPPT[$CellContext`n], $CellContext`fromIndexToPPT[
         Pattern[$CellContext`n, 
          Blank[]]] := $CellContext`toPPT[
         $CellContext`toCWPair[
          $CellContext`cnn[$CellContext`n]]], $CellContext`toPPT[{
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           Blank[]]}] := {$CellContext`v^2 - $CellContext`u^2, 
         2 $CellContext`u $CellContext`v, $CellContext`v^2 + \
$CellContext`u^2}, $CellContext`toCWPair[
         Pattern[$CellContext`i, 
          Blank[Integer]]] := Module[{$CellContext`b = Rest[
            IntegerDigits[$CellContext`i, 2]], $CellContext`t = {1, 1}}, 
         Scan[If[# == 0, $CellContext`t = {
              First[$CellContext`t], 
              Total[$CellContext`t]}, $CellContext`t = {
              Total[$CellContext`t], 
              
              Last[$CellContext`t]}]& , $CellContext`b]; $CellContext`t], \
$CellContext`cnn[
         Pattern[$CellContext`n, 
          Blank[]]] := 
       3 $CellContext`n - (1/2) (
         1 - (-1)^$CellContext`n), $CellContext`unrankCantor[
         Pattern[$CellContext`x, 
          Blank[Integer]]] := 
       Module[{$CellContext`k, $CellContext`m, $CellContext`n}, \
$CellContext`k = $CellContext`invTri[$CellContext`x]; $CellContext`n = \
$CellContext`x - $CellContext`Tri[$CellContext`k - 
            1]; $CellContext`m = $CellContext`k - $CellContext`n + 
           1; {$CellContext`m, $CellContext`n}], $CellContext`invTri[
         Pattern[$CellContext`x, 
          Blank[Integer]]] := 
       Ceiling[(1/2) (-1 + Sqrt[1 + 8 $CellContext`x])], $CellContext`Tri[
         Pattern[$CellContext`n, 
          Blank[]]] := (1/2) $CellContext`n (
         1 + $CellContext`n), $CellContext`vf[{
          Pattern[$CellContext`xc, 
           Blank[]], 
          Pattern[$CellContext`yc, 
           Blank[]]}, 
         Pattern[$CellContext`name, 
          Blank[]], {
          Pattern[$CellContext`w, 
           Blank[]], 
          Pattern[$CellContext`h, 
           Blank[]]}] := 
       Module[{$CellContext`m, $CellContext`n}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`name]; {
           EdgeForm[None], 
           Hue[0.6 + 0.15 ($CellContext`m + $CellContext`n)], 
           
           Rectangle[{$CellContext`xc, $CellContext`yc} - {0.4, 
            0.17}, {$CellContext`xc, $CellContext`yc} + {0.4, 0.17}, 
            RoundingRadius -> 0.11], Black, 
           Text[
            $CellContext`display[$CellContext`name], {$CellContext`xc, \
$CellContext`yc}]}], $CellContext`display[
         Pattern[$CellContext`i, 
          Blank[Integer]]] := 
       Module[{$CellContext`m, $CellContext`n}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`i]; Tooltip[
           Style[
            Row[{$CellContext`m, 
              Subscript[$CellContext`\[ScriptCapitalP], $CellContext`n]}, 
             " "], 16], 
           Style[
            Row[{$CellContext`i, ": ", $CellContext`m, 
              $CellContext`fromIndexToPPT[$CellContext`n], 
              "=", $CellContext`m \
$CellContext`fromIndexToPPT[$CellContext`n]}, " "], 14]]], $CellContext`ef[
         Pattern[$CellContext`lines, 
          BlankSequence[]], 
         Pattern[$CellContext`edge, 
          Blank[]]] := 
       Module[{$CellContext`x1, $CellContext`y1, $CellContext`x2, \
$CellContext`y2}, {$CellContext`x1, $CellContext`y1} = {
            1, -1} $CellContext`unrankCantor[
             
             Part[$CellContext`edge, 
              1]]; {$CellContext`x2, $CellContext`y2} = {
            1, -1} $CellContext`unrankCantor[
             Part[$CellContext`edge, 2]]; {
           If[$CellContext`x1 == 1, Red, Blue], 
           Arrowheads[Medium], 
           
           Arrow[{{$CellContext`x1, $CellContext`y1}, {$CellContext`x2, \
$CellContext`y2}}, 0.35]}], $CellContext`derivation[
         Pattern[$CellContext`i, 
          Blank[]]] := 
       Module[{$CellContext`n, $CellContext`m}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`i]; {$CellContext`i, 
           ":", "{", $CellContext`m, ",", $CellContext`n, "}", ":", 
           $CellContext`cnn[$CellContext`n], ":", 
           $CellContext`toCWPair[
            $CellContext`cnn[$CellContext`n]], ":", $CellContext`m, 
           "\[Times]", 
           $CellContext`fromIndexToPPT[$CellContext`n], "=", 
           $CellContext`fromIndexToPT[$CellContext`i]}]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->326868680,ExpressionUUID->"876bffd8-123f-4c64-b8ea-ec96661c27ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details",
 StyleBox[" (optional) ", "SectionGloss"],
 Cell[BoxData[
  TemplateBox[{"Details", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{
         "This optional section is for a more detailed description of the \
Demonstration than the caption, but it should still be as concise as \
possible. This section may also include numbered snapshot captions (e.g., \
Snapshot 1: phrase or sentence without an initial capital and without a \
period, unless more than one sentence is used) and explanations of the ", 
          StyleBox["Manipulate", "MRbig"], 
          " control labels. Define any symbols undefined so far. Include only \
text in this section \[LongDash] no code, graphics, etc. Do not change the \
cell style or copy cells from other sections. \n\nA book reference uses this \
format: \n    L. D. Schmidt, ", 
          StyleBox[
          "The Engineering of Chemical Reactions", FontSlant -> "Italic"], 
          ", New York: Oxford University Press, 1998. \n\nAn article \
reference uses this format: \n    D. Pearson, \"A Polynomial-Time Algorithm \
for the Change-Making Problem,\" ", 
          StyleBox["Operations Research Letters", FontSlant -> "Italic"], 
          ", ", 
          StyleBox["33", FontWeight -> "Bold"], 
          "(3), 2005 pp. 231\[Dash]234."}], "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "b42cafa3-93cc-45b2-9bce-00512b05ae14"]
}], "DetailsSection",
 CellTags->"Details",ExpressionUUID->"b9971572-9357-4ce2-a011-62ff9eede7fa"],

Cell[TextData[{
 "This enumeration of all Pythagorean triples (PTs) generates exactly one PT \
from every natural number, thus creating a comprehensive ordered list of all \
PTs, indexed by the natural numbers. This is done by first creating a \
two-dimensional table, inspired by Cantor's demonstration of the countability \
of the rational numbers, of ordered pairs of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"m", ",", "n"}], "}"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"ce0732f3-81cc-48c5-95b0-408e4ae63252"],
 ", to be traversed in diagonal stripes. The integers ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]], "InlineMath",ExpressionUUID->
  "70fa7fad-183a-4835-b854-d71b8aab5a6a"],
 " and ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]], "InlineMath",ExpressionUUID->
  "d277bb90-5a5b-4adf-9a15-ec74af9dbbb7"],
 " are then used as the multiplier and the index of the primitive PT (PPT), \
for which the precise algorithm is explained more fully in a previous \
Demonstration.  In brief, the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"cnn", "(", "n", ")"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"3", "n"}], " ", "-", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "n"]}], ")"}], "/", "2"}]}]}], 
   TraditionalForm]], "InlineMath",ExpressionUUID->
  "4e017aa6-5acc-456b-bfc0-d5f5e868fc6a"],
 " allows production of only those Calkin-Wilf (C-W) pairs of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"u", ",", "v"}], "}"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"5d496f63-e05b-46f6-9d8f-1bddc9791859"],
 " that comply with the conditions that ",
 Cell[BoxData[
  FormBox["u", TraditionalForm]], "InlineMath",ExpressionUUID->
  "c00f2417-2abe-4c6b-9d82-aa5c09fc0f54"],
 " and ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]], "InlineMath",ExpressionUUID->
  "969a81f7-0a29-4eea-bff1-26742830e385"],
 " be relatively prime and have opposite parity and that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "<", "v"}], TraditionalForm]], "InlineMath",ExpressionUUID->
  "113a5623-690d-40de-b942-49f292dc6b22"],
 ". These pairs are then used to generate PPTs of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["v", "2"], "-", 
      SuperscriptBox["u", "2"]}], ",", " ", 
     RowBox[{"2", "u", " ", "v"}], ",", " ", 
     RowBox[{
      SuperscriptBox["v", "2"], "+", 
      SuperscriptBox["u", "2"]}]}], "}"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"60eccf40-9137-4e16-a601-af2b1dea7969"],
 ". Multiplying these PPTs by\[NonBreakingSpace]",
 Cell[BoxData[
  FormBox["m", TraditionalForm]], "InlineMath",ExpressionUUID->
  "883c5129-70bd-4be6-89c1-e8a3f8791cb7"],
 "\[NonBreakingSpace]thus gives a one-to-one mapping between the set of all \
natural numbers and the set of all PTs."
}], "DetailNotes",
 CellChangeTimes->{{3.906563478803333*^9, 3.9065635151530967`*^9}, {
  3.906563645637946*^9, 3.9065637166393466`*^9}, {3.906564178060875*^9, 
  3.9065642121645145`*^9}, {3.906564397687998*^9, 3.9065644607742324`*^9}, {
  3.906564492677269*^9, 3.90656468825441*^9}, {3.906564727105623*^9, 
  3.9065650047294083`*^9}, {3.906565068557267*^9, 3.9065651250668755`*^9}, {
  3.9065651837679987`*^9, 3.906565311189451*^9}, {3.906565347501978*^9, 
  3.906565361654678*^9}, {3.906565404971857*^9, 3.9065654586558986`*^9}, {
  3.9066468393079333`*^9, 3.906646858682765*^9}, {3.906646908437312*^9, 
  3.906646909244627*^9}},
 CellID->88952248,ExpressionUUID->"40b061fb-9abe-4da1-9f36-664fdec1e28a"],

Cell[TextData[{
 "One slider controls how many PTs are calculated, and in graph mode a second \
slider determines how much to zoom in on those points close to the origin. \
Use the \[OpenCurlyDoubleQuote]mode\[CloseCurlyDoubleQuote] toggle bar to \
change the display: graphing PTs, generating a simple list of PTs, displaying \
the Cantor diagonal ordering of\[NonBreakingSpace]",
 Cell[BoxData[
  FormBox["m", TraditionalForm]], "InlineMath",ExpressionUUID->
  "e3592fc8-9793-4ddb-a6c2-1be46d3122c1"],
 "\[NonBreakingSpace]and\[NonBreakingSpace]the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "1f3a14c7-9934-498e-8228-b20b546119d6"],
 " PPT,\[NonBreakingSpace]or generating a commented table showing the \
derivation of the PTs."
}], "DetailNotes",
 CellChangeTimes->{{3.906563478803333*^9, 3.9065635196395903`*^9}, {
  3.906565495598194*^9, 3.9065655340224447`*^9}, {3.9066469510762644`*^9, 
  3.9066470068656006`*^9}, {3.906647039300691*^9, 3.9066470629466715`*^9}},
 CellID->321819228,ExpressionUUID->"31d762c9-b66f-4dde-abef-a7cd79139e58"],

Cell[TextData[{
 "Snapshot 1: the scatter plot graph of the enumerated PTs as given in the\
\[NonBreakingSpace]",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[VeryThinSpace]", "B"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"1323817e-68d5-46dc-9e9e-ffeefd622159"],
 "-plane, where\[NonBreakingSpace]",
 Cell[BoxData[
  FormBox["A", TraditionalForm]], "InlineMath",ExpressionUUID->
  "0b5b4213-b30d-4460-add2-c08f85b11ce5"],
 "\[NonBreakingSpace]is the odd leg and\[NonBreakingSpace]",
 Cell[BoxData[
  FormBox["B", TraditionalForm]], "InlineMath",ExpressionUUID->
  "41c1fab2-b19c-42fc-97ec-ae971bc80509"],
 "\[NonBreakingSpace]the even leg of the triangle represented by the PT, \
zoomed in to show only ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", 
    SuperscriptBox["10", "2"]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"3de7476a-5e6d-4b49-b75f-3bc5f8316c8d"],
 " of the largest value, with all side lengths and a proportional triangle \
shown on mouseover"
}], "DetailNotes",
 CellChangeTimes->{{3.906563478803333*^9, 3.9065635215586414`*^9}, {
  3.906565551636716*^9, 3.9065655773681316`*^9}, {3.906565667581348*^9, 
  3.906565692144547*^9}},
 CellID->312701227,ExpressionUUID->"ae464fc6-8f51-4be9-a406-16a12140107b"],

Cell["\<\
Snapshot 2: a simple list of the first 50 PTs generated by the enumeration\
\>", "DetailNotes",
 CellChangeTimes->{{3.906563478803333*^9, 3.906563523201154*^9}, {
  3.906565771565419*^9, 3.906565773514488*^9}},
 CellID->24278483,ExpressionUUID->"887904bf-a5dd-47e0-85fe-9b91585d1641"],

Cell[TextData[{
 "Snapshot 3: a Cantor diagonal ordering of\[NonBreakingSpace]the first 50 \
PTs, showing multiplier ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]], "InlineMath",
  FormatType->TraditionalForm,ExpressionUUID->
  "22587570-2b5f-489f-8839-61d8609ef636"],
 "\[NonBreakingSpace]and the PPT indexed by\[NonBreakingSpace]",
 Cell[BoxData[
  FormBox["n", TraditionalForm]], "InlineMath",
  FormatType->TraditionalForm,ExpressionUUID->
  "002ebf5c-bd23-4117-b07f-8de753ae6cf3"],
 ",\[NonBreakingSpace]with values and resultant PTs shown on mouseover"
}], "DetailNotes",
 CellChangeTimes->{{3.906563478803333*^9, 3.9065635250810356`*^9}, {
   3.906565782635166*^9, 3.906565797915371*^9}, {3.9065658296762714`*^9, 
   3.9065658306488223`*^9}, 3.906645408930231*^9, {3.906645681434097*^9, 
   3.90664576797686*^9}},
 CellID->12311402,ExpressionUUID->"8574c86c-d090-42a2-a11a-3a8ac59bf2a0"],

Cell[TextData[{
 "Note: overlaying diagonal stripes on a doubly-infinite table was a clever \
idea proposed by Georg Cantor to demonstrate the countability of the set of \
all rationals, which led in turn to a whole class of countability proofs. The \
image shown on tab 3 is a modification of one in ",
 ButtonBox["Indexing Strings and Rulesets: An Exploration Leading to an \
Enumeration",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.mathematica-journal.com/2011/05/11/indexing-strings-and-\
rulesets/"], None},
  ButtonNote->
   "https://www.mathematica-journal.com/2011/05/11/indexing-strings-and-\
rulesets/"],
 ", an article that appeared in ",
 StyleBox["The Mathematica Journal",
  FontSlant->"Italic"],
 ", in which various enumerations are considered. One significant difference \
from Cantor's scheme, where the enumeration includes an infinite number of \
duplicate entries, and the present enumeration of all PTs, is that here all ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"m", ",", "n"}], "}"}], TraditionalForm]], "InlineMath",
  FormatType->TraditionalForm,ExpressionUUID->
  "d98a30ef-d294-456b-adcf-82551697f8d9"],
 " pairs generate distinct Pythagorean Triples, so the algorithm defines a \
1-1 and onto function."
}], "DetailNotes",
 CellChangeTimes->{{3.906563478803333*^9, 3.9065635060029974`*^9}, {
  3.9065658387124*^9, 3.906565867570896*^9}, {3.9066454131210036`*^9, 
  3.9066456334580154`*^9}, {3.9066457902337084`*^9, 3.9066458916970954`*^9}, {
  3.9066459434091463`*^9, 3.9066459948406873`*^9}, {3.9066460498750067`*^9, 
  3.906646246875704*^9}, {3.906646278018573*^9, 3.906646331781576*^9}, {
  3.90664711427794*^9, 3.9066471219789143`*^9}, {3.90664716492421*^9, 
  3.906647200083537*^9}, {3.9066472308378963`*^9, 3.906647238181682*^9}},
 CellID->214824282,ExpressionUUID->"6ccb4da9-2949-4766-bef8-11b5fb69dc48"],

Cell[TextData[{
 "Snapshot 4: an explanatory table giving all steps of the process: natural \
numbers,\[NonBreakingSpace]",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"m", ",", "n"}], ")"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"915fece6-8ade-4a9b-b644-78a2df88fa1e"],
 "\[NonBreakingSpace]pairs, compliant natural numbers, compliant Calkin-Wilf \
pairs, PPTs with multipliers, and finally PTs generated by the enumeration \
algorithm"
}], "DetailNotes",
 CellChangeTimes->{{3.906563478803333*^9, 3.9065635060029974`*^9}, {
  3.9065658387124*^9, 3.906565867570896*^9}, {3.90664763088041*^9, 
  3.906647631293131*^9}},
 CellID->118792980,ExpressionUUID->"1b067f70-0046-49bd-a651-54a1c9be17cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Control Suggestions",
 StyleBox[" (optional) ", "SectionGloss"],
 Cell[BoxData[
  TemplateBox[{"Control Suggestions", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{
         "Check the boxes beside items that are appropriate control \
suggestions for this Demonstration. For more information, see the ", 
          ButtonBox[
          "guidelines", 
           BaseStyle -> {"Hyperlink", FontColor -> RGBColor[0.4, 0.45, 0.5]}, 
           ButtonData -> {
             URL["http://demonstrations.wolfram.com/guidelines.php"], None}], 
          " page.", 
          StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "f1fe398c-f37e-4aca-9161-633bae63965a"]
}], "ControlSuggestionsSection",
 CellTags->
  "Control Suggestions",ExpressionUUID->"af8a4061-fdd4-44d0-82cc-\
9fec786547ab"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Resize Images",ExpressionUUID->"fcee1195-e255-4dbd-8863-4af840debdbd"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\""]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "ResizeImages",ExpressionUUID->"ac542041-3d26-42bf-920d-b54a74785eef"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Rotate and Zoom in 3D",ExpressionUUID->
    "df0b52c8-7325-4803-bb1e-958545cedfd1"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" on Mac) and drag up and down to zoom.\""}]]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "RotateAndZoomIn3D",ExpressionUUID->"e14e98ed-7514-4081-99ea-c2ffb624df9b"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Drag Locators",ExpressionUUID->"61b2b2a8-69c4-4012-b6da-8923112012e2"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}]]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "DragLocators",ExpressionUUID->"384b79dc-c11a-492d-87e1-2c4b84403891"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Create and Delete Locators",ExpressionUUID->
    "8e06b60e-3149-4a23-ab31-0a8ab2f5ceaf"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}]]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "CreateAndDeleteLocators",ExpressionUUID->"98a81657-e34e-4dab-ac86-\
717d7eff050a"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[
   " Slider Zoom",ExpressionUUID->"c8d377e3-56fc-4adc-88e3-cf7642fb3181"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" to make ever finer adjustments.\""}]]], "ControlSuggestions",
 CellChangeTimes->{{3.9066476552333107`*^9, 3.906647655335209*^9}},
 FontFamily->"Verdana",
 CellTags->
  "SliderZoom",ExpressionUUID->"b84ac2ce-e422-4d4d-953e-073d63c15a9e"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Gamepad Controls",ExpressionUUID->
    "1fbb5ded-9a1c-4ba0-a087-0d1c0be219ce"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\""]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9},
 FontFamily->"Verdana",
 CellTags->
  "GamepadControls",ExpressionUUID->"b4dbde82-29d9-4853-88cd-e053ae8d181c"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Automatic Animation",ExpressionUUID->
    "ec8a5240-77b9-42a0-8b9e-365efb47dfeb"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}]]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "AutomaticAnimation",ExpressionUUID->"6e84bbe0-7d8e-44ab-aac1-048973c18d4f"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Bookmark Animation",ExpressionUUID->
    "5bdb2812-7da3-4bb1-a7fc-436054c40542"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}]]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "BookmarkAnimation",ExpressionUUID->"0cf5a50d-6c0e-4089-a29f-941bc4ca8891"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Search Terms",
 StyleBox[" (optional) ", "SectionGloss"],
 Cell[BoxData[
  TemplateBox[{"Search Terms", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{
         "Provide words and phrases that people might search for, with each \
one in a separate cell. Categories are added after the Demonstration is \
submitted, so the best things to enter here are terms (including any \
synonyms) that refer to specific parts of the Demonstration. Do not \
capitalize words unless they are proper names or proper adjectives.", 
          StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "b8b4550c-a7c1-4c5e-acf4-64f68ac8ea51"]
}], "SearchTermsSection",
 CellTags->
  "Search Terms",ExpressionUUID->"a3a3a6a7-7876-4115-a51a-6d092bee139b"],

Cell["Pythagorean triple", "SearchTerms",
 CellChangeTimes->{{3.8849650461328335`*^9, 3.8849650568447137`*^9}, 
   3.8867801531635895`*^9, 3.886866019460513*^9},
 CellID->255407013,ExpressionUUID->"31cfe350-d509-47f3-81ba-f5b8a410cf8f"],

Cell["primitive Pythagorean triple", "SearchTerms",
 CellChangeTimes->{{3.8849650461328335`*^9, 3.8849650568447137`*^9}, {
  3.8868660229047456`*^9, 3.8868660271910453`*^9}},
 CellID->229228147,ExpressionUUID->"99ba1c84-8879-4945-847c-35614ce69d2a"],

Cell["PPT", "SearchTerms",
 CellChangeTimes->{{3.884965062961128*^9, 3.884965064016287*^9}},
 CellID->31959842,ExpressionUUID->"abf148cb-9af2-4360-9345-7b5d23745c07"],

Cell["Calkin-Wilf", "SearchTerms",
 CellChangeTimes->{{3.8849650678884907`*^9, 3.88496507154396*^9}},
 CellID->1008738870,ExpressionUUID->"bcae581c-8249-43dc-bd42-a8f6d06f5615"],

Cell["enumeration", "SearchTerms",
 CellChangeTimes->{{3.8849650820725822`*^9, 3.884965084161371*^9}, 
   3.906565903483102*^9},
 CellID->45880641,ExpressionUUID->"95334262-48c3-4847-98f5-d9dc3c4b832f"],

Cell["Cantor", "SearchTerms",
 CellChangeTimes->{{3.8849650820725822`*^9, 3.884965084161371*^9}, {
  3.9065659045740323`*^9, 3.9065659061656313`*^9}},
 CellID->73164115,ExpressionUUID->"3fbc105c-0aed-4294-81e7-f054af87d1d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Links",
 StyleBox[" (optional) ", "SectionGloss"],
 Cell[BoxData[
  TemplateBox[{"Related Links", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{
         "Provide hyperlinks (not just bare URLs) to any relevant wolfram.com \
pages, with the page title as the linked text. Links to ", 
          ButtonBox[
          "NKS | Online", 
           BaseStyle -> {"Hyperlink", FontColor -> RGBColor[0.4, 0.45, 0.5]}, 
           ButtonData -> {
             URL["http://www.wolframscience.com/nks"], None}], 
          " should use the section title, not a page number. Links to \
non-Wolfram sites go in the Details section.", 
          StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "d5b26c0d-c135-41cd-9d97-dc9003b05c57"]
}], "RelatedLinksSection",
 CellTags->
  "Related Links",ExpressionUUID->"83b0243b-b7e3-4afb-8a4e-185fec8161fe"],

Cell[TextData[ButtonBox["Pythagorean Triple",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://mathworld.wolfram.com/PythagoreanTriple.html"], None},
 ButtonNote->
  "https://mathworld.wolfram.com/PythagoreanTriple.html"]], "RelatedLinks",
 CellID->178191176,ExpressionUUID->"fe0b6b01-41eb-4008-8bd4-3b0cafa4fedd"],

Cell[TextData[ButtonBox["Primitive Pythagorean Triple",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://mathworld.wolfram.com/PrimitivePythagoreanTriple.html"], None},
 ButtonNote->
  "https://mathworld.wolfram.com/PrimitivePythagoreanTriple.html"]], \
"RelatedLinks",
 CellID->152099771,ExpressionUUID->"4e627bb2-4e07-4955-bc56-19600f9dd9b8"],

Cell[TextData[ButtonBox["A Binary-Based Enumeration of the Primitive \
Pythagorean Triples",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/\
ABinaryBasedEnumerationOfThePrimitivePythagoreanTriples/"], None},
 ButtonNote->
  "http://demonstrations.wolfram.com/\
ABinaryBasedEnumerationOfThePrimitivePythagoreanTriples/"]], "RelatedLinks",
 CellID->323277821,ExpressionUUID->"89b7094e-cafa-4ab1-bd0f-e7232bdfea01"],

Cell[TextData[ButtonBox["CalkinWilf",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
CalkinWilf/"], None},
 ButtonNote->
  "https://resources.wolframcloud.com/FunctionRepository/resources/CalkinWilf/\
"]], "RelatedLinks",
 CellChangeTimes->{{3.8873893764581547`*^9, 3.8873893880821753`*^9}},
 CellID->334034107,ExpressionUUID->"31569125-afa7-497e-8374-17c1b78c0af8"],

Cell[TextData[ButtonBox["Indexing Strings and Rulesets: An Exploration \
Leading to an Enumeration",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://www.mathematica-journal.com/2011/05/11/indexing-strings-and-\
rulesets/"], None},
 ButtonNote->
  "https://www.mathematica-journal.com/2011/05/11/indexing-strings-and-\
rulesets/"]], "RelatedLinks",
 CellID->18342369,ExpressionUUID->"a79c3938-c95b-44e1-aeb7-0d8de68bc968"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Authoring Information",
 Cell[BoxData[
  TemplateBox[{"Authoring Information", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{
         "'Contributed by: John Smith' for single authors; 'Contributed by: \
John Smith, Robert Ford, and Jane Doe' for multiple authors. To credit people \
other than Demonstrations authors, please see the detailed ", 
          ButtonBox[
          "guidelines", 
           BaseStyle -> {"Hyperlink", FontColor -> RGBColor[0.4, 0.45, 0.5]}, 
           ButtonData -> {
             URL["http://demonstrations.wolfram.com/guidelines.php"], None}], 
          ".", 
          StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "990970f3-a922-4bea-919a-d6fa2da1f6d5"]
}], "AuthorSection",
 CellTags->
  "Authoring \
Information",ExpressionUUID->"c2736cdb-c24c-4dd4-9a22-5bbef1a7a20a"],

Cell[TextData[{
 "Contributed by: ",
 ButtonBox["Colton H. Davis",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://demonstrations.wolfram.com/author.html?author=Colton+H.+\
Davis"], None},
  ButtonNote->
   "https://demonstrations.wolfram.com/author.html?author=Colton+H.+Davis"],
 " and ",
 ButtonBox["Kenneth E. Caviness",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://demonstrations.wolfram.com/author.html?author=Kenneth+E.+\
Caviness"], None},
  ButtonNote->
   "https://demonstrations.wolfram.com/author.html?author=Kenneth+E.+Caviness"]
}], "Author",
 CellChangeTimes->{
  3.35696210375764*^9, {3.432333043774981*^9, 3.432333045441087*^9}, 
   3.9066477397873535`*^9},ExpressionUUID->"e6a077c9-f528-4852-97e7-\
764f2f3a1895"]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"DemonstrationSource",
WindowSize->{700, Automatic},
WindowMargins->{{10, Automatic}, {0, 0}},
TaggingRules->{
 "Terminated" -> True, "QuestionState" -> "Timeup", 
  "AttachedCells" -> {
   "Initialization Code" -> None, "Manipulate" -> None, "Caption" -> None, 
    "Snapshots" -> None, "Details" -> None, "Related Links" -> None, 
    "Search Terms" -> None, "Control Suggestions" -> None, "Thumbnail" -> 
    None, "Authoring Information" -> None}},
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (June 3, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"3520f34b-4726-4b84-89c5-abc8caf079b7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Initialization Code"->{
  Cell[765, 29, 1833, 39, 67, "InitializationSection",ExpressionUUID->"1d34a731-8c48-4189-8b6f-89ef5777db9f",
   CellTags->"Initialization Code"]},
 "Manipulate"->{
  Cell[15185, 446, 1524, 30, 67, "ManipulateSection",ExpressionUUID->"b7acceb9-ca4b-4965-b319-bd8a6214a587",
   CellTags->"Manipulate"]},
 "Caption"->{
  Cell[45560, 1141, 1138, 24, 67, "ManipulateCaptionSection",ExpressionUUID->"3ed78bfd-4459-4d2a-906f-3e9e6aba33a4",
   CellTags->"Caption"]},
 "Thumbnail"->{
  Cell[48874, 1222, 1005, 22, 67, "ThumbnailSection",ExpressionUUID->"401cc3c4-8319-4e19-82e7-df5fcb711a42",
   CellTags->"Thumbnail"]},
 "Snapshots"->{
  Cell[63308, 1554, 1018, 22, 67, "SnapshotsSection",ExpressionUUID->"96bb7a68-4496-4362-86d3-c2a0812907f2",
   CellTags->"Snapshots"]},
 "Details"->{
  Cell[117955, 2801, 1796, 36, 67, "DetailsSection",ExpressionUUID->"b9971572-9357-4ce2-a011-62ff9eede7fa",
   CellTags->"Details"]},
 "Control Suggestions"->{
  Cell[129620, 3062, 1131, 28, 67, "ControlSuggestionsSection",ExpressionUUID->"af8a4061-fdd4-44d0-82cc-9fec786547ab",
   CellTags->"Control Suggestions"]},
 "ResizeImages"->{
  Cell[130754, 3092, 407, 9, 25, "ControlSuggestions",ExpressionUUID->"ac542041-3d26-42bf-920d-b54a74785eef",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[131164, 3103, 783, 19, 25, "ControlSuggestions",ExpressionUUID->"e14e98ed-7514-4081-99ea-c2ffb624df9b",
   CellTags->"RotateAndZoomIn3D"]},
 "DragLocators"->{
  Cell[131950, 3124, 435, 12, 25, "ControlSuggestions",ExpressionUUID->"384b79dc-c11a-492d-87e1-2c4b84403891",
   CellTags->"DragLocators"]},
 "CreateAndDeleteLocators"->{
  Cell[132388, 3138, 739, 18, 25, "ControlSuggestions",ExpressionUUID->"98a81657-e34e-4dab-ac86-717d7eff050a",
   CellTags->"CreateAndDeleteLocators"]},
 "SliderZoom"->{
  Cell[133130, 3158, 1011, 24, 25, "ControlSuggestions",ExpressionUUID->"b84ac2ce-e422-4d4d-953e-073d63c15a9e",
   CellTags->"SliderZoom"]},
 "GamepadControls"->{
  Cell[134144, 3184, 469, 11, 25, "ControlSuggestions",ExpressionUUID->"b4dbde82-29d9-4853-88cd-e053ae8d181c",
   CellTags->"GamepadControls"]},
 "AutomaticAnimation"->{
  Cell[134616, 3197, 1564, 33, 25, "ControlSuggestions",ExpressionUUID->"6e84bbe0-7d8e-44ab-aac1-048973c18d4f",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[136183, 3232, 1008, 23, 25, "ControlSuggestions",ExpressionUUID->"0cf5a50d-6c0e-4089-a29f-941bc4ca8891",
   CellTags->"BookmarkAnimation"]},
 "Search Terms"->{
  Cell[137228, 3260, 1073, 24, 67, "SearchTermsSection",ExpressionUUID->"a3a3a6a7-7876-4115-a51a-6d092bee139b",
   CellTags->"Search Terms"]},
 "Related Links"->{
  Cell[139610, 3317, 1191, 28, 67, "RelatedLinksSection",ExpressionUUID->"83b0243b-b7e3-4afb-8a4e-185fec8161fe",
   CellTags->"Related Links"]},
 "Authoring Information"->{
  Cell[142835, 3400, 1158, 28, 67, "AuthorSection",ExpressionUUID->"c2736cdb-c24c-4dd4-9a22-5bbef1a7a20a",
   CellTags->"Authoring Information"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Initialization Code", 145611, 3475},
 {"Manipulate", 145776, 3478},
 {"Caption", 145928, 3481},
 {"Thumbnail", 146087, 3484},
 {"Snapshots", 146240, 3487},
 {"Details", 146391, 3490},
 {"Control Suggestions", 146551, 3493},
 {"ResizeImages", 146727, 3496},
 {"RotateAndZoomIn3D", 146892, 3499},
 {"DragLocators", 147058, 3502},
 {"CreateAndDeleteLocators", 147230, 3505},
 {"SliderZoom", 147400, 3508},
 {"GamepadControls", 147563, 3511},
 {"AutomaticAnimation", 147733, 3514},
 {"BookmarkAnimation", 147906, 3517},
 {"Search Terms", 148073, 3520},
 {"Related Links", 148236, 3523},
 {"Authoring Information", 148409, 3526}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 160, 3, 160, "Title",ExpressionUUID->"b9e6fe14-67c5-4f7d-9ec0-13c361826e91"],
Cell[CellGroupData[{
Cell[765, 29, 1833, 39, 67, "InitializationSection",ExpressionUUID->"1d34a731-8c48-4189-8b6f-89ef5777db9f",
 CellTags->"Initialization Code"],
Cell[2601, 70, 12547, 371, 1083, "Input",ExpressionUUID->"4de4e2ba-4774-43ef-a3bd-947a9068643e",
 InitializationCell->True,
 CellID->53610471]
}, Open  ]],
Cell[CellGroupData[{
Cell[15185, 446, 1524, 30, 67, "ManipulateSection",ExpressionUUID->"b7acceb9-ca4b-4965-b319-bd8a6214a587",
 CellTags->"Manipulate"],
Cell[CellGroupData[{
Cell[16734, 480, 15384, 350, 1303, "Input",ExpressionUUID->"1c8a51fe-61b3-446f-b3f3-b27c622b6763"],
Cell[32121, 832, 13390, 303, 486, "Output",ExpressionUUID->"ba2ff809-34af-42d4-a80b-d1e8ed62d590",
 CellID->510509920]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45560, 1141, 1138, 24, 67, "ManipulateCaptionSection",ExpressionUUID->"3ed78bfd-4459-4d2a-906f-3e9e6aba33a4",
 CellTags->"Caption"],
Cell[46701, 1167, 2136, 50, 167, "ManipulateCaption",ExpressionUUID->"71921e4e-c8c2-4f05-96e3-4e3047349e9a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48874, 1222, 1005, 22, 67, "ThumbnailSection",ExpressionUUID->"401cc3c4-8319-4e19-82e7-df5fcb711a42",
 CellTags->"Thumbnail"],
Cell[49882, 1246, 13389, 303, 486, "Output",ExpressionUUID->"15ff67df-35d8-4594-8ef5-1272d482ebf1",
 CellID->33067823]
}, Open  ]],
Cell[CellGroupData[{
Cell[63308, 1554, 1018, 22, 67, "SnapshotsSection",ExpressionUUID->"96bb7a68-4496-4362-86d3-c2a0812907f2",
 CellTags->"Snapshots"],
Cell[64329, 1578, 13409, 303, 486, "Output",ExpressionUUID->"bef2b8af-fe89-4131-a8fb-8f7e33f15079",
 CellID->144790735],
Cell[77741, 1883, 13390, 303, 468, "Output",ExpressionUUID->"bae1c668-c55f-4e89-b963-54eabeeeb42d",
 CellID->225027479],
Cell[91134, 2188, 13391, 303, 468, "Output",ExpressionUUID->"5482c806-f3aa-4202-adf7-c00d4597a46a",
 CellID->76571813],
Cell[104528, 2493, 13390, 303, 488, "Output",ExpressionUUID->"876bffd8-123f-4c64-b8ea-ec96661c27ec",
 CellID->326868680]
}, Open  ]],
Cell[CellGroupData[{
Cell[117955, 2801, 1796, 36, 67, "DetailsSection",ExpressionUUID->"b9971572-9357-4ce2-a011-62ff9eede7fa",
 CellTags->"Details"],
Cell[119754, 2839, 3665, 84, 185, "DetailNotes",ExpressionUUID->"40b061fb-9abe-4da1-9f36-664fdec1e28a",
 CellID->88952248],
Cell[123422, 2925, 1111, 20, 71, "DetailNotes",ExpressionUUID->"31d762c9-b66f-4dde-abef-a7cd79139e58",
 CellID->321819228],
Cell[124536, 2947, 1249, 28, 57, "DetailNotes",ExpressionUUID->"ae464fc6-8f51-4be9-a406-16a12140107b",
 CellID->312701227],
Cell[125788, 2977, 294, 5, 23, "DetailNotes",ExpressionUUID->"887904bf-a5dd-47e0-85fe-9b91585d1641",
 CellID->24278483],
Cell[126085, 2984, 898, 18, 39, "DetailNotes",ExpressionUUID->"8574c86c-d090-42a2-a11a-3a8ac59bf2a0",
 CellID->12311402],
Cell[126986, 3004, 1876, 36, 135, "DetailNotes",ExpressionUUID->"6ccb4da9-2949-4766-bef8-11b5fb69dc48",
 CellID->214824282],
Cell[128865, 3042, 718, 15, 55, "DetailNotes",ExpressionUUID->"1b067f70-0046-49bd-a651-54a1c9be17cf",
 CellID->118792980]
}, Open  ]],
Cell[CellGroupData[{
Cell[129620, 3062, 1131, 28, 67, "ControlSuggestionsSection",ExpressionUUID->"af8a4061-fdd4-44d0-82cc-9fec786547ab",
 CellTags->"Control Suggestions"],
Cell[130754, 3092, 407, 9, 25, "ControlSuggestions",ExpressionUUID->"ac542041-3d26-42bf-920d-b54a74785eef",
 CellTags->"ResizeImages"],
Cell[131164, 3103, 783, 19, 25, "ControlSuggestions",ExpressionUUID->"e14e98ed-7514-4081-99ea-c2ffb624df9b",
 CellTags->"RotateAndZoomIn3D"],
Cell[131950, 3124, 435, 12, 25, "ControlSuggestions",ExpressionUUID->"384b79dc-c11a-492d-87e1-2c4b84403891",
 CellTags->"DragLocators"],
Cell[132388, 3138, 739, 18, 25, "ControlSuggestions",ExpressionUUID->"98a81657-e34e-4dab-ac86-717d7eff050a",
 CellTags->"CreateAndDeleteLocators"],
Cell[133130, 3158, 1011, 24, 25, "ControlSuggestions",ExpressionUUID->"b84ac2ce-e422-4d4d-953e-073d63c15a9e",
 CellTags->"SliderZoom"],
Cell[134144, 3184, 469, 11, 25, "ControlSuggestions",ExpressionUUID->"b4dbde82-29d9-4853-88cd-e053ae8d181c",
 CellTags->"GamepadControls"],
Cell[134616, 3197, 1564, 33, 25, "ControlSuggestions",ExpressionUUID->"6e84bbe0-7d8e-44ab-aac1-048973c18d4f",
 CellTags->"AutomaticAnimation"],
Cell[136183, 3232, 1008, 23, 25, "ControlSuggestions",ExpressionUUID->"0cf5a50d-6c0e-4089-a29f-941bc4ca8891",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137228, 3260, 1073, 24, 67, "SearchTermsSection",ExpressionUUID->"a3a3a6a7-7876-4115-a51a-6d092bee139b",
 CellTags->"Search Terms"],
Cell[138304, 3286, 236, 3, 23, "SearchTerms",ExpressionUUID->"31cfe350-d509-47f3-81ba-f5b8a410cf8f",
 CellID->255407013],
Cell[138543, 3291, 249, 3, 23, "SearchTerms",ExpressionUUID->"99ba1c84-8879-4945-847c-35614ce69d2a",
 CellID->229228147],
Cell[138795, 3296, 166, 2, 23, "SearchTerms",ExpressionUUID->"abf148cb-9af2-4360-9345-7b5d23745c07",
 CellID->31959842],
Cell[138964, 3300, 177, 2, 23, "SearchTerms",ExpressionUUID->"bcae581c-8249-43dc-bd42-a8f6d06f5615",
 CellID->1008738870],
Cell[139144, 3304, 202, 3, 23, "SearchTerms",ExpressionUUID->"95334262-48c3-4847-98f5-d9dc3c4b832f",
 CellID->45880641],
Cell[139349, 3309, 224, 3, 23, "SearchTerms",ExpressionUUID->"3fbc105c-0aed-4294-81e7-f054af87d1d3",
 CellID->73164115]
}, Open  ]],
Cell[CellGroupData[{
Cell[139610, 3317, 1191, 28, 67, "RelatedLinksSection",ExpressionUUID->"83b0243b-b7e3-4afb-8a4e-185fec8161fe",
 CellTags->"Related Links"],
Cell[140804, 3347, 321, 6, 23, "RelatedLinks",ExpressionUUID->"fe0b6b01-41eb-4008-8bd4-3b0cafa4fedd",
 CellID->178191176],
Cell[141128, 3355, 351, 7, 23, "RelatedLinks",ExpressionUUID->"4e627bb2-4e07-4955-bc56-19600f9dd9b8",
 CellID->152099771],
Cell[141482, 3364, 448, 9, 23, "RelatedLinks",ExpressionUUID->"89b7094e-cafa-4ab1-bd0f-e7232bdfea01",
 CellID->323277821],
Cell[141933, 3375, 433, 9, 23, "RelatedLinks",ExpressionUUID->"31569125-afa7-497e-8374-17c1b78c0af8",
 CellID->334034107],
Cell[142369, 3386, 429, 9, 23, "RelatedLinks",ExpressionUUID->"a79c3938-c95b-44e1-aeb7-0d8de68bc968",
 CellID->18342369]
}, Open  ]],
Cell[CellGroupData[{
Cell[142835, 3400, 1158, 28, 67, "AuthorSection",ExpressionUUID->"c2736cdb-c24c-4dd4-9a22-5bbef1a7a20a",
 CellTags->"Authoring Information"],
Cell[143996, 3430, 756, 21, 23, "Author",ExpressionUUID->"e6a077c9-f528-4852-97e7-764f2f3a1895"]
}, Open  ]]
}, Open  ]]
}
]
*)

