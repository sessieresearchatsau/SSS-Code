(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     98430,       2099]
NotebookOptionsPosition[     93702,       2021]
NotebookOutlinePosition[     94114,       2037]
CellTagsIndexPosition[     94071,       2034]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<SSS`\>\"", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8159227950159807`*^9, 3.815922857230071*^9}, {
  3.832959623222167*^9, 3.832959624634735*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b6bbff18-57b4-4e86-88dc-01e882848b61"],

Cell[CellGroupData[{

Cell["\<\
Functions that generate lists of integer \"clues\", and function to ID sessie \
network \
\>", "Section",
 CellChangeTimes->{{3.816763145424294*^9, 3.816763165064762*^9}, {
   3.8171592145740027`*^9, 3.8171592716718097`*^9}, {3.817160239438961*^9, 
   3.8171602632474217`*^9}, 3.8172050135470867`*^9, 3.817206152951545*^9, {
   3.817242294859186*^9, 3.817242335132217*^9}, {3.817589997544291*^9, 
   3.81759003445246*^9}, 3.831744534065015*^9, {3.8329545628566246`*^9, 
   3.832954574589426*^9}},ExpressionUUID->"196bea6f-fe95-45fc-8eed-\
5b7cd0861ec2"],

Cell[CellGroupData[{

Cell["Explanations", "Subsection",
 CellChangeTimes->{{3.816763145424294*^9, 3.816763165064762*^9}, {
   3.8171592145740027`*^9, 3.8171592716718097`*^9}, {3.817160239438961*^9, 
   3.8171602632474217`*^9}, 3.8172050135470867`*^9, 3.817206152951545*^9, {
   3.817242294859186*^9, 3.817242335132217*^9}, {3.817589997544291*^9, 
   3.81759003445246*^9}, {3.831744542315957*^9, 
   3.8317445464030237`*^9}},ExpressionUUID->"8b0f692b-968c-49a3-a5c3-\
1c112b49a2c9"],

Cell[TextData[{
 StyleBox["MaxStateLengthPositions",
  FontWeight->"Bold"],
 ", ",
 StyleBox["LeastUsedRulePositions, DistanceTally, DistanceLastPositions",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.817936650400851*^9, 
  3.8179366722015095`*^9}},ExpressionUUID->"3c3aac88-aa64-4430-9282-\
54b27c8fe6eb"],

Cell[TextData[{
 StyleBox["MaxStateLengthPositions",
  FontWeight->"Bold"],
 ":  positions in \"Evolution\" where a new maximum state string length is \
reached for the first time"
}], "Subsubsection",
 CellChangeTimes->{{3.816763145424294*^9, 3.816763165064762*^9}, {
  3.8171592145740027`*^9, 3.8171592716718097`*^9}, {3.817160239438961*^9, 
  3.8171602632474217`*^9}, {3.8172050731407046`*^9, 3.817205168756998*^9}, {
  3.8172052104753838`*^9, 
  3.817205216134245*^9}},ExpressionUUID->"9cfd189d-1b81-4f36-a67b-\
db8d2df5bac1"],

Cell[TextData[{
 StyleBox["LeastUsedRulePositions",
  FontWeight->"Bold"],
 ":  positions where the least-used rule was used"
}], "Subsubsection",
 CellChangeTimes->{{3.816763145424294*^9, 3.816763165064762*^9}, {
   3.8171592145740027`*^9, 3.8171592716718097`*^9}, {3.817160239438961*^9, 
   3.8171602632474217`*^9}, {3.8172050731407046`*^9, 
   3.8172050924989305`*^9}, {3.81720517839218*^9, 3.817205234399387*^9}, 
   3.817205442832885*^9, 
   3.817245526972459*^9},ExpressionUUID->"53551ae2-6cd5-482d-b699-\
6742f0eaf1ed"],

Cell["\<\
Note:  both of these functions call a filtering function, \
MergeIntervalsByRulesUsed, which verifies that the same rules are used in \
each interval between positions in the list, and may discard unimportant \
positions.\
\>", "Subsubsection",
 CellChangeTimes->{{3.816763145424294*^9, 3.816763165064762*^9}, {
  3.8171592145740027`*^9, 3.8171592716718097`*^9}, {3.817160239438961*^9, 
  3.8171602632474217`*^9}, {3.8172050731407046`*^9, 3.8172050924989305`*^9}, {
  3.81720517839218*^9, 3.817205401436621*^9}, {3.817239194841259*^9, 
  3.81723919526864*^9}},ExpressionUUID->"b0112165-6728-4ee0-bec3-\
d77ad6441ba4"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["DistanceLastPositions",
  FontWeight->"Bold"],
 ":  a list containing, for each positive integer ",
 StyleBox["n",
  FontSlant->"Italic"],
 ", the position of the last nodes that is ",
 StyleBox["n ",
  FontSlant->"Italic"],
 "steps from origin on the undirected graph of \"Net\"."
}], "Subsubsection",
 CellChangeTimes->{{3.816763145424294*^9, 3.816763165064762*^9}, {
   3.8171592145740027`*^9, 3.8171592716718097`*^9}, {3.817160239438961*^9, 
   3.8171602632474217`*^9}, {3.8172050731407046`*^9, 3.817205168756998*^9}, {
   3.8172052104753838`*^9, 3.817205216134245*^9}, {3.817239210936268*^9, 
   3.81723933383206*^9}, {3.817239364810912*^9, 3.81723937329584*^9}, 
   3.817239459474269*^9, {3.817239491963266*^9, 3.817239677782529*^9}, 
   3.817915419133413*^9},ExpressionUUID->"e799c799-be3f-481d-85be-\
47a34d933a4d"],

Cell["\<\
Note: these first three provide lists of numbers based sessie events / \
network nodes, so as soon as a \"Verdict\" has been assigned, the \
CheckDimensions summaries can be used by GuessDimension and \
TestForUnusedRules.\
\>", "Text",
 CellChangeTimes->{{3.819192978578134*^9, 3.819192988573694*^9}, {
   3.819193671370622*^9, 3.819193704627847*^9}, 3.8191937773551807`*^9, {
   3.819193812258749*^9, 3.8191938432322226`*^9}, {3.819194177344958*^9, 
   3.819194199721708*^9}, {3.8191948316729817`*^9, 3.8191949229542303`*^9}, {
   3.8191949703876953`*^9, 3.819194970635444*^9}, {3.819195378333156*^9, 
   3.819195381061594*^9}, {3.819195481653165*^9, 3.819195486220643*^9}, {
   3.819195540252198*^9, 3.8191955922175717`*^9}, {3.819313954424433*^9, 
   3.819313985605834*^9}},ExpressionUUID->"e470d74b-e5b9-41cd-8e87-\
aef3c72d2eb0"]
}, Open  ]],

Cell[TextData[{
 StyleBox["DistanceTally:  ",
  FontWeight->"Bold"],
 "number of nodes in the undirected graph of \"Net\" that are no more than 1, \
2, 3, ... steps from origin.  (SSSAnimate[sss, VertexLabels \[Rule] \
\"VertexWeight\"] gives a related, helpful visualization.)"
}], "Subsubsection",
 CellChangeTimes->{{3.816763145424294*^9, 3.816763165064762*^9}, {
   3.8171592145740027`*^9, 3.8171592716718097`*^9}, {3.817160239438961*^9, 
   3.8171602632474217`*^9}, {3.8172050731407046`*^9, 
   3.8172050924989305`*^9}, {3.81720517839218*^9, 3.817205234399387*^9}, 
   3.817205442832885*^9, {3.8172393801307344`*^9, 3.81723944421952*^9}, {
   3.8172396950147324`*^9, 3.817239760500037*^9}, {3.8172415201253915`*^9, 
   3.8172415884130244`*^9}, {3.817419350163289*^9, 
   3.8174193758249817`*^9}},ExpressionUUID->"f8c27d3d-8a09-449a-ade1-\
cd40d8752ed9"],

Cell[TextData[{
 StyleBox["CheckDimensions",
  FontWeight->"Bold"],
 ":  accepts a list of \"significant\" positive integers, returns \
{\"1D\"|\"2D\"|...|\"exp\", ",
 StyleBox["n",
  FontSlant->"Italic"],
 ", {",
 StyleBox["k",
  FontSlant->"Italic"],
 ", ",
 StyleBox["delay",
  FontSlant->"Italic"],
 ", ",
 StyleBox["matchlen",
  FontSlant->"Italic"],
 ", ",
 StyleBox["match",
  FontSlant->"Italic"],
 "}, ",
 StyleBox["dt",
  FontSlant->"Italic"],
 "}, indicating an ",
 StyleBox["n",
  FontSlant->"Italic"],
 "-dimensional or exponential  network.  Pattern detection required ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-averaging, and a ",
 StyleBox["delay",
  FontSlant->"Italic"],
 " before the pattern was established and a difference or ratio ",
 StyleBox["match",
  FontSlant->"Italic"],
 " of length ",
 StyleBox["matchlen",
  FontSlant->"Italic"],
 " was detected.  The difference table ",
 StyleBox["dt",
  FontSlant->"Italic"],
 " is provided for human inspection, but in theory it (but ",
 StyleBox["not",
  FontSlant->"Italic"],
 " the network) could be summarized as {",
 StyleBox["n",
  FontSlant->"Italic"],
 ", ",
 StyleBox["dt",
  FontSlant->"Italic"],
 "\[LeftDoubleBracket]All, ",
 StyleBox["delay",
  FontSlant->"Italic"],
 ";;",
 StyleBox["delay",
  FontSlant->"Italic"],
 "+",
 StyleBox["k",
  FontSlant->"Italic"],
 "\[RightDoubleBracket]} or {\"exp\", ",
 StyleBox["dt",
  FontSlant->"Italic"],
 "\[LeftDoubleBracket]All, ",
 StyleBox["delay",
  FontSlant->"Italic"],
 ";;",
 StyleBox["delay",
  FontSlant->"Italic"],
 "+",
 StyleBox["k",
  FontSlant->"Italic"],
 "\[RightDoubleBracket]}, respectively.  (In fact, only the first element of \
each row is needed, until the final row.)  It is not currently clear whether ",
 StyleBox["k",
  FontSlant->"Italic"],
 " and ",
 StyleBox["match",
  FontSlant->"Italic"],
 " have any useful meaning in the exponential summary, but both can be \
reconstructed from the difference table summary.  The function GuessDimension \
collects IDs (\"1D\", \"2D\", etc.) returned for any of the 4 significant \
number generator functions, and considers ",
 StyleBox["matchlen",
  FontSlant->"Italic"],
 " as a measure of reliability."
}], "Subsubsection",
 CellChangeTimes->{{3.816763145424294*^9, 3.816763165064762*^9}, {
   3.8171592145740027`*^9, 3.8171592716718097`*^9}, {3.817160239438961*^9, 
   3.8171602632474217`*^9}, {3.8172050731407046`*^9, 3.817205168756998*^9}, {
   3.8172052104753838`*^9, 3.817205216134245*^9}, {3.817239210936268*^9, 
   3.81723933383206*^9}, {3.817239364810912*^9, 3.81723937329584*^9}, 
   3.817239459474269*^9, {3.817239491963266*^9, 3.817239677782529*^9}, {
   3.817586696311371*^9, 3.817587013669505*^9}, 3.817588170343399*^9, {
   3.817588218063672*^9, 3.8175882731911354`*^9}, {3.817588322117176*^9, 
   3.817588681753651*^9}, {3.817588727599912*^9, 3.817588741720734*^9}, {
   3.8175887723058805`*^9, 3.81758885741912*^9}, {3.8176398008776617`*^9, 
   3.8176398758800087`*^9}, {3.817639906031347*^9, 3.8176399168454375`*^9}, {
   3.8176399650793505`*^9, 3.817640041974665*^9}, {3.8176400757094126`*^9, 
   3.817640175984705*^9}, {3.8176402322541037`*^9, 3.817640232837594*^9}, {
   3.817640266300605*^9, 3.817640267690881*^9}, {3.8176606510405345`*^9, 
   3.817660793598028*^9}, {3.817660878967486*^9, 3.8176608825547643`*^9}, {
   3.819436986695893*^9, 3.8194369934378643`*^9}, {3.81943704218047*^9, 
   3.8194370770052953`*^9}, {3.819437142433275*^9, 3.819437196962034*^9}, {
   3.8194372400712194`*^9, 3.819437240235727*^9}, {3.819437298354257*^9, 
   3.8194374574576874`*^9}, {3.8194374916132746`*^9, 
   3.8194375599106064`*^9}},ExpressionUUID->"866882c0-dbe5-41a0-8b2d-\
e2f9658139c4"],

Cell[TextData[{
 StyleBox["GuessDimension",
  FontWeight->"Bold"],
 ":  with appropriate checks, tries all 4 approximative tests by applying \
CheckDimensions to the lists described above.  Sessie is auto-extended to try \
to reach agreement.  Changes \"Verdict\" if the combined ",
 StyleBox["matchlen",
  FontSlant->"Italic"],
 " values returned indicate satisfactory reliability.  "
}], "Subsubsection",
 CellChangeTimes->{{3.816763145424294*^9, 3.816763165064762*^9}, {
   3.8171592145740027`*^9, 3.8171592716718097`*^9}, {3.817160239438961*^9, 
   3.8171602632474217`*^9}, {3.8172050731407046`*^9, 3.817205168756998*^9}, {
   3.8172052104753838`*^9, 3.817205216134245*^9}, {3.817239210936268*^9, 
   3.81723933383206*^9}, {3.817239364810912*^9, 3.81723937329584*^9}, 
   3.817239459474269*^9, {3.817239491963266*^9, 3.817239677782529*^9}, 
   3.8172403089065084`*^9, {3.819143799439518*^9, 3.819143907469008*^9}, {
   3.8191441605121975`*^9, 3.8191442639966593`*^9}, {3.819144325403349*^9, 
   3.819144335829201*^9}, 3.819314015185621*^9, {3.8194376162897797`*^9, 
   3.819437660572319*^9}},ExpressionUUID->"23a2863c-cc73-44d1-a1cf-\
ee1b4de51ea6"],

Cell[TextData[{
 StyleBox["TestForUnusedRules",
  FontWeight->"Bold"],
 ":  decides whether to skip this case, and whether a long-jump is possible, \
once the sessie or the net has been identified (as \"Repeating\" or otherwise \
by GuessDimension)."
}], "Subsubsection",
 CellChangeTimes->{{3.816763145424294*^9, 3.816763165064762*^9}, {
   3.8171592145740027`*^9, 3.8171592716718097`*^9}, {3.817160239438961*^9, 
   3.8171602632474217`*^9}, {3.8172050731407046`*^9, 3.817205168756998*^9}, {
   3.8172052104753838`*^9, 3.817205216134245*^9}, {3.817239210936268*^9, 
   3.81723933383206*^9}, {3.817239364810912*^9, 3.81723937329584*^9}, 
   3.817239459474269*^9, {3.817239491963266*^9, 3.817239677782529*^9}, 
   3.8172403089065084`*^9, {3.819143799439518*^9, 3.819143907469008*^9}, {
   3.8191441605121975`*^9, 3.8191442639966593`*^9}, {3.819144325403349*^9, 
   3.819144335829201*^9}, 3.8193140387135277`*^9, {3.819315425627448*^9, 
   3.819315435320032*^9}, {3.819437696440364*^9, 
   3.819437720271695*^9}},ExpressionUUID->"db482108-b23a-4f90-92ec-\
aaa3de01e082"],

Cell[CellGroupData[{

Cell["Possible issues & notes:  ", "Subsubsection",
 CellChangeTimes->{{3.816763145424294*^9, 3.816763165064762*^9}, {
   3.8171592145740027`*^9, 3.8171592716718097`*^9}, {3.817160239438961*^9, 
   3.8171602632474217`*^9}, {3.8172050731407046`*^9, 3.817205168756998*^9}, {
   3.8172052104753838`*^9, 3.817205216134245*^9}, {3.817239210936268*^9, 
   3.81723933383206*^9}, {3.817239364810912*^9, 3.81723937329584*^9}, 
   3.817239459474269*^9, {3.817239491963266*^9, 3.817239677782529*^9}, {
   3.817586696311371*^9, 3.817587013669505*^9}, 3.817588170343399*^9, {
   3.817588218063672*^9, 3.8175882731911354`*^9}, {3.817588322117176*^9, 
   3.817588681753651*^9}, {3.817588727599912*^9, 3.817588741720734*^9}, {
   3.8175887723058805`*^9, 3.817588945238103*^9}, {3.8175889770550175`*^9, 
   3.817589044890327*^9}, 3.817589075758733*^9, {3.817589136585676*^9, 
   3.81758923219448*^9}, {3.817590101582676*^9, 
   3.817590103410774*^9}},ExpressionUUID->"eded41b4-d1b4-4bb7-a4b7-\
1d55605b1a21"],

Cell["\<\
(1) If dt\[LeftDoubleBracket]1,1\[RightDoubleBracket] \[Equal] j \[NotEqual] \
1, there was some initial stuff before the pattern set in.  \
\>", "Text",
 CellChangeTimes->{{3.816763145424294*^9, 3.816763165064762*^9}, {
   3.8171592145740027`*^9, 3.8171592716718097`*^9}, {3.817160239438961*^9, 
   3.8171602632474217`*^9}, {3.8172050731407046`*^9, 3.817205168756998*^9}, {
   3.8172052104753838`*^9, 3.817205216134245*^9}, {3.817239210936268*^9, 
   3.81723933383206*^9}, {3.817239364810912*^9, 3.81723937329584*^9}, 
   3.817239459474269*^9, {3.817239491963266*^9, 3.817239677782529*^9}, {
   3.817586696311371*^9, 3.817587013669505*^9}, 3.817588170343399*^9, {
   3.817588218063672*^9, 3.8175882731911354`*^9}, {3.817588322117176*^9, 
   3.817588681753651*^9}, {3.817588727599912*^9, 3.817588741720734*^9}, {
   3.8175887723058805`*^9, 3.817588945238103*^9}, {3.8175889770550175`*^9, 
   3.817589044890327*^9}, 3.817589075758733*^9, {3.817589136585676*^9, 
   3.817589235369008*^9}},ExpressionUUID->"1c000c1b-2444-4676-9b44-\
5dc2260db2f5"],

Cell["\<\
Solution: If the numbers were provided by either MaxStateLengthPositions or \
LeastUsedRulePositions, toss out the first j-1 steps of the sessie to \
generate a network with a difference table in which the first j-1 columns are \
dropped, and the first row entries are all reduced by subtracting j-1.  If \
the numbers were produced from the \"Net\", it's unclear how much of the \
sessie state strings should be skipped.\
\>", "Text",
 CellChangeTimes->{{3.816763145424294*^9, 3.816763165064762*^9}, {
   3.8171592145740027`*^9, 3.8171592716718097`*^9}, {3.817160239438961*^9, 
   3.8171602632474217`*^9}, {3.8172050731407046`*^9, 3.817205168756998*^9}, {
   3.8172052104753838`*^9, 3.817205216134245*^9}, {3.817239210936268*^9, 
   3.81723933383206*^9}, {3.817239364810912*^9, 3.81723937329584*^9}, 
   3.817239459474269*^9, {3.817239491963266*^9, 3.817239677782529*^9}, {
   3.817586696311371*^9, 3.817587013669505*^9}, 3.817588170343399*^9, {
   3.817588218063672*^9, 3.8175882731911354`*^9}, {3.817588322117176*^9, 
   3.817588681753651*^9}, {3.817588727599912*^9, 3.817588741720734*^9}, {
   3.8175887723058805`*^9, 3.817588945238103*^9}, {3.8175889770550175`*^9, 
   3.817589044890327*^9}, 3.817589075758733*^9, {3.817589136585676*^9, 
   3.817589237483347*^9}, {3.817660808352578*^9, 3.817660855488728*^9}, {
   3.817660897124009*^9, 3.8176609828399887`*^9}, 
   3.817661034871634*^9},ExpressionUUID->"7044f20e-82b6-4d65-8d30-\
ed53f311932f"],

Cell["\<\
(2) Once reliable ID has been made, call TestForUnusedRules to decide whether \
to skip this case, and whether a long-jump is possible:  affects \
acceleration.  Later call ImproveInitialState (not yet written), to discard \
initial or final tagged cells unchanged by the evolution:  only affects \
sessie display, not the network.  Think carefully about unchanged interior \
tagged cells:  removing an inert cell might allow a different evolution.\
\>", "Text",
 CellChangeTimes->{{3.816763145424294*^9, 3.816763165064762*^9}, {
   3.8171592145740027`*^9, 3.8171592716718097`*^9}, {3.817160239438961*^9, 
   3.8171602632474217`*^9}, {3.8172050731407046`*^9, 3.817205168756998*^9}, {
   3.8172052104753838`*^9, 3.817205216134245*^9}, {3.817239210936268*^9, 
   3.81723933383206*^9}, {3.817239364810912*^9, 3.81723937329584*^9}, 
   3.817239459474269*^9, {3.817239491963266*^9, 3.817239677782529*^9}, {
   3.817586696311371*^9, 3.817587013669505*^9}, 3.817588170343399*^9, {
   3.817588218063672*^9, 3.8175882731911354`*^9}, {3.817588322117176*^9, 
   3.817588681753651*^9}, {3.817588727599912*^9, 3.817588741720734*^9}, {
   3.8175887723058805`*^9, 3.817588945238103*^9}, {3.8175889770550175`*^9, 
   3.817589044890327*^9}, 3.817589075758733*^9, {3.817589136585676*^9, 
   3.817589237483347*^9}, {3.817660808352578*^9, 3.817660855488728*^9}, {
   3.817660897124009*^9, 3.8176609828399887`*^9}, {3.817661035814371*^9, 
   3.8176610677575436`*^9}, {3.8176611027945595`*^9, 3.817661216674119*^9}, {
   3.817661251353593*^9, 3.817661396920125*^9}, {3.817661438564845*^9, 
   3.817661483662029*^9}, {3.819437741120923*^9, 
   3.819437785339573*^9}},ExpressionUUID->"1d6e6366-31aa-4660-9057-\
0cc5c912cf83"],

Cell["\<\
(*) Once we have a network summary...:  Depending on the initial state \
string, a different network summary might be generated:  how to recognize \
their equivalence?\
\>", "Text",
 CellChangeTimes->{{3.816763145424294*^9, 3.816763165064762*^9}, {
   3.8171592145740027`*^9, 3.8171592716718097`*^9}, {3.817160239438961*^9, 
   3.8171602632474217`*^9}, {3.8172050731407046`*^9, 3.817205168756998*^9}, {
   3.8172052104753838`*^9, 3.817205216134245*^9}, {3.817239210936268*^9, 
   3.81723933383206*^9}, {3.817239364810912*^9, 3.81723937329584*^9}, 
   3.817239459474269*^9, {3.817239491963266*^9, 3.817239677782529*^9}, {
   3.817586696311371*^9, 3.817587013669505*^9}, 3.817588170343399*^9, {
   3.817588218063672*^9, 3.8175882731911354`*^9}, {3.817588322117176*^9, 
   3.817588681753651*^9}, {3.817588727599912*^9, 3.817588741720734*^9}, {
   3.8175887723058805`*^9, 3.817588945238103*^9}, {3.8175889770550175`*^9, 
   3.817589044890327*^9}, 3.817589075758733*^9, {3.817589136585676*^9, 
   3.817589239149884*^9}, {3.81766101944107*^9, 
   3.817661032379875*^9}},ExpressionUUID->"64ae8af7-610f-45bb-bab7-\
7b88243e1a3a"],

Cell["\<\
Possible solution: Make k alternative summaries, treating by dropping 0, 1, \
\[Ellipsis], k-1 states [as in (1)], sort them (perhaps by last row, then \
next-to-last, etc.), treat as \"canonical\" the first in the sorted list.\
\>", "Text",
 CellChangeTimes->{{3.816763145424294*^9, 3.816763165064762*^9}, {
   3.8171592145740027`*^9, 3.8171592716718097`*^9}, {3.817160239438961*^9, 
   3.8171602632474217`*^9}, {3.8172050731407046`*^9, 3.817205168756998*^9}, {
   3.8172052104753838`*^9, 3.817205216134245*^9}, {3.817239210936268*^9, 
   3.81723933383206*^9}, {3.817239364810912*^9, 3.81723937329584*^9}, 
   3.817239459474269*^9, {3.817239491963266*^9, 3.817239677782529*^9}, {
   3.817586696311371*^9, 3.817587013669505*^9}, 3.817588170343399*^9, {
   3.817588218063672*^9, 3.8175882731911354`*^9}, {3.817588322117176*^9, 
   3.817588681753651*^9}, {3.817588727599912*^9, 3.817588741720734*^9}, {
   3.8175887723058805`*^9, 3.817588945238103*^9}, {3.8175889770550175`*^9, 
   3.817589044890327*^9}, 3.817589075758733*^9, {3.817589136585676*^9, 
   3.817589437539273*^9}, 
   3.8175896080814295`*^9},ExpressionUUID->"7057a6d6-1bc1-405c-944d-\
6f875c8706d6"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Code", "Subsection",
 CellChangeTimes->{{3.816763145424294*^9, 3.816763165064762*^9}, {
   3.8171592145740027`*^9, 3.8171592716718097`*^9}, {3.817160239438961*^9, 
   3.8171602632474217`*^9}, {3.8172050731407046`*^9, 3.81720509581106*^9}, {
   3.81720527664141*^9, 3.8172052767701025`*^9}, {3.819143996126746*^9, 
   3.819143997402409*^9}, {3.831744614675545*^9, 3.831744614922815*^9}, 
   3.83174550710957*^9},ExpressionUUID->"f907e537-c7ea-4037-856c-\
d86ae717feed"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LeastUsedRulePositions", "[", 
    RowBox[{"sss_Association", " ", "/;", " ", 
     RowBox[{"KeyExistsQ", "[", 
      RowBox[{"sss", ",", "\"\<RulesUsed\>\""}], "]"}]}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ru", "=", 
        RowBox[{"sss", "[", "\"\<RulesUsed\>\"", "]"}]}], ",", "len", ",", 
       "ruletally", ",", "least"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"len", "=", 
       RowBox[{"Length", "[", "ru", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ruletally", "=", 
       RowBox[{"Tally", "[", 
        RowBox[{"ru", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{".1", "len"}], "]"}], ";;", "len"}], 
         "\[RightDoubleBracket]"}], "]"}]}], ";", "      ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"skip", " ", "10", 
         RowBox[{"%", " ", "--"}], " ", 
         RowBox[{
          RowBox[{"ARBITRARY", "!"}], " ", "--"}], " ", "of", " ", "rules", 
         " ", "used"}], ",", " ", 
        RowBox[{"tally", " ", "the", " ", "rest"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"least", "=", 
       RowBox[{"First", "@", 
        RowBox[{"First", "@", 
         RowBox[{"SortBy", "[", 
          RowBox[{"ruletally", ",", "Last"}], "]"}]}]}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "identify", " ", "the", " ", "least", " ", "used", " ", "rule"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"MergeIntervalsByRulesUsed", "[", 
       RowBox[{
        RowBox[{"Flatten", "@", 
         RowBox[{"Position", "[", 
          RowBox[{"ru", ",", "least"}], "]"}]}], ",", "ru"}], "]"}]}]}], "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"find", " ", "its", " ", "occurrences", " ", "anywhere"}], ",", 
      " ", 
      RowBox[{"merge", " ", 
       RowBox[{"intervals", " ", "--"}], " ", "IS", " ", "THIS", " ", 
       RowBox[{"NECESSARY", "?", 
        RowBox[{"!", " ", 
         RowBox[{
          RowBox[{"--", " ", "and"}], " ", "return"}]}]}]}]}], " ", "*)"}], 
    " ", "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.665066266574467*^9, 3.665066267636515*^9}, {
   3.665066346779855*^9, 3.665066625265805*^9}, {3.6650668938961344`*^9, 
   3.665066914878886*^9}, {3.665066978026431*^9, 3.6650669988475127`*^9}, {
   3.665067033349392*^9, 3.6650670525438776`*^9}, {3.665067137833008*^9, 
   3.665067139734271*^9}, {3.665067878576657*^9, 3.6650679526787505`*^9}, {
   3.665067998617792*^9, 3.665068035373611*^9}, {3.665072189678142*^9, 
   3.6650721922513647`*^9}, 3.665083021896529*^9, {3.81687076904301*^9, 
   3.81687083863687*^9}, 3.816871093089243*^9, {3.816871433395104*^9, 
   3.8168715084605775`*^9}, 3.816871767290663*^9, {3.8168718955002337`*^9, 
   3.816871907976754*^9}, {3.816871988012114*^9, 3.8168720313749022`*^9}, {
   3.816931579543195*^9, 3.816931608274395*^9}, {3.8169316701957407`*^9, 
   3.81693175837089*^9}, {3.816931831544155*^9, 3.816931881142087*^9}, {
   3.816932072640893*^9, 3.8169321484541154`*^9}, {3.8169322212095237`*^9, 
   3.8169322562527866`*^9}, {3.8169350700774465`*^9, 3.816935077879571*^9}, 
   3.817159358647176*^9, {3.8192967019448957`*^9, 3.819296761286154*^9}, 
   3.81931313572915*^9, {3.8320838975670033`*^9, 3.832083907477315*^9}, {
   3.832084033839086*^9, 3.8320840604057307`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"9469550a-ad2c-4651-88c5-d9a1dd74cbe0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LeastUsedRulePositions", "::", "usage"}], " ", "=", " ", 
   "\"\<Takes sss, an already generated sessie object, and returns the list \
of positions where the least-used rule was applied (least-used in the last \
90% of the evolution).  This list is modified by the function \
MergeIntervalsByRulesUsed before being returned.\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.665066266574467*^9, 3.665066267636515*^9}, {
   3.665066346779855*^9, 3.665066625265805*^9}, {3.6650668938961344`*^9, 
   3.665066914878886*^9}, {3.665066978026431*^9, 3.6650669988475127`*^9}, {
   3.665067033349392*^9, 3.6650670525438776`*^9}, {3.665067137833008*^9, 
   3.665067139734271*^9}, {3.665067878576657*^9, 3.6650679526787505`*^9}, {
   3.665067998617792*^9, 3.665068035373611*^9}, {3.665072189678142*^9, 
   3.6650721922513647`*^9}, 3.665083021896529*^9, {3.81687076904301*^9, 
   3.81687083863687*^9}, 3.816871093089243*^9, {3.816871433395104*^9, 
   3.8168715084605775`*^9}, 3.816871767290663*^9, {3.8168718955002337`*^9, 
   3.816871907976754*^9}, {3.816871988012114*^9, 3.8168720313749022`*^9}, {
   3.816931579543195*^9, 3.816931608274395*^9}, {3.8169316701957407`*^9, 
   3.81693175837089*^9}, {3.816931831544155*^9, 3.816931881142087*^9}, {
   3.816932072640893*^9, 3.8169321484541154`*^9}, {3.8169322212095237`*^9, 
   3.8169322562527866`*^9}, {3.8169350700774465`*^9, 3.816935077879571*^9}, {
   3.817159358647176*^9, 3.817159451487363*^9}, {3.81715956545065*^9, 
   3.817159572189647*^9}, {3.819279769676989*^9, 3.819279780206827*^9}, {
   3.819296781404333*^9, 3.8192967962127533`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"8a183104-2a66-4dec-832a-5ad6e30ab96f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MaxStateLengthPositions", "[", 
    RowBox[{"sss_Association", " ", "/;", " ", 
     RowBox[{"KeyExistsQ", "[", 
      RowBox[{"sss", ",", "\"\<Evolution\>\""}], "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "currmaxlenstringlen", ",", "strlens", ",", "strt", ",", "evollen", ",", 
       RowBox[{"evol", "=", 
        RowBox[{"sss", "[", "\"\<Evolution\>\"", "]"}]}], ",", 
       RowBox[{"b", "=", 
        RowBox[{"Boole", "[", 
         RowBox[{
          RowBox[{"sss", "[", "\"\<Verdict\>\"", "]"}], "===", 
          "\"\<Repeating\>\""}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"evollen", "=", 
       RowBox[{"Length", "[", "evol", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"strlens", "=", 
       RowBox[{"StringLength", " ", "/@", " ", "evol"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"currmaxlenstringlen", "=", 
       RowBox[{"Min", "[", "strlens", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"strt", "=", 
       RowBox[{"First", "@", 
        RowBox[{"First", "[", 
         RowBox[{"Position", "[", 
          RowBox[{"strlens", ",", "currmaxlenstringlen", ",", "1"}], "]"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Most", "@", "\[IndentingNewLine]", 
       RowBox[{"MergeIntervalsByRulesUsed", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Last", "@", 
          RowBox[{"Last", "@", 
           RowBox[{"Reap", "[", "\[IndentingNewLine]", 
            RowBox[{"Do", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"StringLength", "[", 
                  RowBox[{
                  "evol", "\[LeftDoubleBracket]", "n", 
                   "\[RightDoubleBracket]"}], "]"}], ">", 
                 RowBox[{"currmaxlenstringlen", "-", "b"}]}], ",", 
                RowBox[{"(*", " ", 
                 RowBox[{
                  RowBox[{"if", " ", "repeating"}], ",", " ", 
                  "\"\<\[GreaterEqual]\>\""}], " ", "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Sow", "[", "n", "]"}], ";", " ", 
                 RowBox[{"currmaxlenstringlen", "=", 
                  RowBox[{"StringLength", "[", 
                   RowBox[{
                   "evol", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "]"}]}]}]}], 
               "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"n", ",", "strt", ",", "evollen"}], "}"}]}], "]"}], 
            "\[IndentingNewLine]", "]"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"sss", "[", "\"\<RulesUsed\>\"", "]"}]}], 
        "\[IndentingNewLine]", "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.665066266574467*^9, 3.665066267636515*^9}, {
   3.665066346779855*^9, 3.665066625265805*^9}, {3.6650668938961344`*^9, 
   3.665066914878886*^9}, {3.665066978026431*^9, 3.6650669988475127`*^9}, {
   3.665067033349392*^9, 3.6650670525438776`*^9}, {3.665067137833008*^9, 
   3.665067139734271*^9}, {3.665067878576657*^9, 3.6650679526787505`*^9}, {
   3.665067998617792*^9, 3.665068035373611*^9}, {3.665072189678142*^9, 
   3.6650721922513647`*^9}, 3.665083021896529*^9, {3.81687076904301*^9, 
   3.81687083863687*^9}, 3.816871093089243*^9, {3.816871433395104*^9, 
   3.8168715084605775`*^9}, 3.816871767290663*^9, {3.8168718955002337`*^9, 
   3.816871907976754*^9}, {3.816871988012114*^9, 3.8168720313749022`*^9}, 
   3.816931579543195*^9, {3.816933732256903*^9, 3.8169337383316536`*^9}, {
   3.816944466138459*^9, 3.81694449851022*^9}, {3.816944612544923*^9, 
   3.8169446639428844`*^9}, {3.817159459983603*^9, 3.817159460822533*^9}, {
   3.817244285757779*^9, 3.817244288382211*^9}, {3.817244380084729*^9, 
   3.817244450659894*^9}, {3.817316838319513*^9, 3.817316838812195*^9}, {
   3.819222345066432*^9, 3.8192223519489717`*^9}, {3.819222452109127*^9, 
   3.819222452748419*^9}, {3.819279632419151*^9, 3.819279703818171*^9}, 
   3.81928019514554*^9, {3.819296829563264*^9, 3.819297040811534*^9}, {
   3.81929708843515*^9, 3.819297198483164*^9}, {3.819297421918477*^9, 
   3.819297465801609*^9}, {3.819297576051897*^9, 3.819297601756189*^9}, {
   3.819297636549296*^9, 3.8192976369153185`*^9}, {3.8192978126277914`*^9, 
   3.819297870179219*^9}, {3.8192979237252865`*^9, 3.8192979853033886`*^9}, {
   3.819313119031833*^9, 3.819313124638782*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"71228cc3-c7ff-4efa-b57b-f7b530265fdf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MaxStateLengthPositions", "::", "usage"}], " ", "=", " ", 
   "\"\<Takes sss, an already generated sessie object, and returns the list \
of positions where the sessie state string reached a new maximum length, \
starting with the minimum length string -- which hopefully eliminates some \
initial non-pattern stuff.  This list is modified by the function \
MergeIntervalsByRulesUsed before being returned.\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.665066266574467*^9, 3.665066267636515*^9}, {
   3.665066346779855*^9, 3.665066625265805*^9}, {3.6650668938961344`*^9, 
   3.665066914878886*^9}, {3.665066978026431*^9, 3.6650669988475127`*^9}, {
   3.665067033349392*^9, 3.6650670525438776`*^9}, {3.665067137833008*^9, 
   3.665067139734271*^9}, {3.665067878576657*^9, 3.6650679526787505`*^9}, {
   3.665067998617792*^9, 3.665068035373611*^9}, {3.665072189678142*^9, 
   3.6650721922513647`*^9}, 3.665083021896529*^9, {3.81687076904301*^9, 
   3.81687083863687*^9}, 3.816871093089243*^9, {3.816871433395104*^9, 
   3.8168715084605775`*^9}, 3.816871767290663*^9, {3.8168718955002337`*^9, 
   3.816871907976754*^9}, {3.816871988012114*^9, 3.8168720313749022`*^9}, 
   3.816931579543195*^9, {3.816933732256903*^9, 3.8169337383316536`*^9}, {
   3.816944466138459*^9, 3.81694449851022*^9}, {3.816944612544923*^9, 
   3.8169446639428844`*^9}, {3.817159459983603*^9, 3.817159575210185*^9}, {
   3.819279739243373*^9, 3.8192797607967153`*^9}, {3.819313010619229*^9, 
   3.8193130664756603`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"2cd4f368-1636-4242-aa64-3fbb2f57647f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MergeIntervalsByRulesUsed", "[", 
   RowBox[{"l0_List", ",", "ru_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"l", "=", "l0"}], ",", 
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "l0", "]"}]}], ",", "rulesused1", ",", 
      "rulesused2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Expects", " ", "a", " ", "list", " ", "of", " ", "interesting", " ", 
       "integers", " ", 
       RowBox[{"(", 
        RowBox[{"l0", ",", " ", 
         RowBox[{"defining", " ", "intervals"}]}], ")"}], " ", "and", " ", 
       "the", " ", "\"\<RulesUsed\>\"", " ", "list", " ", "of", " ", "some", 
       " ", 
       RowBox[{"SSS", ".", "  ", "Merges"}], " ", "any", " ", "intervals", 
       " ", "in", " ", "which", " ", "fewer", " ", "different", " ", "rules", 
       " ", "were", " ", "used", " ", "than", " ", "in", " ", "neighboring", 
       " ", 
       RowBox[{"intervals", ".", "\[IndentingNewLine]", "Returns"}], " ", 
       "the", " ", "resulting", " ", "list"}], ",", " ", 
      RowBox[{
       RowBox[{
       "which", " ", "should", " ", "be", " ", "more", " ", "meaningful", " ",
         "than", " ", "the", " ", "original", " ", 
        RowBox[{"one", ".", " ", "Give"}], " ", "up", " ", "if", " ", 
        "length"}], " ", "\[LessEqual]", " ", "2"}]}], " ", "*)"}], " ", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"n", ">", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"rulesused1", "=", 
         RowBox[{"Union", "[", 
          RowBox[{"ru", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"l", "\[LeftDoubleBracket]", 
             RowBox[{"n", "-", "2"}], "\[RightDoubleBracket]"}], ";;", 
            RowBox[{
             RowBox[{"l", "\[LeftDoubleBracket]", 
              RowBox[{"n", "-", "1"}], "\[RightDoubleBracket]"}], "-", 
             "1"}]}], "\[RightDoubleBracket]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rulesused2", "=", 
         RowBox[{"Union", "[", 
          RowBox[{"ru", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"l", "\[LeftDoubleBracket]", 
             RowBox[{"n", "-", "1"}], "\[RightDoubleBracket]"}], ";;", 
            RowBox[{
             RowBox[{
             "l", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], "-",
              "1"}]}], "\[RightDoubleBracket]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"$debug", ",", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<rules used:\>\"", ",", " ", "rulesused1", ",", "\"\<, \>\"",
               ",", "rulesused2"}], "]"}]}], "]"}], ";"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Which", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"rulesused1", "\[Equal]", "rulesused2"}], ",", " ", 
          RowBox[{"n", "--"}], ",", "\[IndentingNewLine]", 
          RowBox[{"SubsetQ", "[", 
           RowBox[{"rulesused1", ",", "rulesused2"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"l", "=", 
            RowBox[{"Drop", "[", 
             RowBox[{"l", ",", 
              RowBox[{"{", "n", "}"}]}], "]"}]}], ";", 
           RowBox[{"n", "=", 
            RowBox[{"Length", "[", "l", "]"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"SubsetQ", "[", 
           RowBox[{"rulesused2", ",", "rulesused1"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"l", "=", 
            RowBox[{"Drop", "[", 
             RowBox[{"l", ",", 
              RowBox[{"{", 
               RowBox[{"n", "-", "2"}], "}"}]}], "]"}]}], ";", 
           RowBox[{"n", "=", 
            RowBox[{"Length", "[", "l", "]"}]}]}], ",", "\[IndentingNewLine]",
           "True", ",", 
          RowBox[{
           RowBox[{"l", "=", 
            RowBox[{"Drop", "[", 
             RowBox[{"l", ",", 
              RowBox[{"{", 
               RowBox[{"n", "-", "1"}], "}"}]}], "]"}]}], ";", 
           RowBox[{"n", "=", 
            RowBox[{"Length", "[", "l", "]"}]}]}]}], "\[IndentingNewLine]", 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "l"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.665170156333381*^9, 3.665170180067949*^9}, {
   3.665170297093176*^9, 3.665170308226226*^9}, {3.665170412594085*^9, 
   3.6651704302781568`*^9}, {3.6651705373382673`*^9, 3.665170554073662*^9}, {
   3.665170786815389*^9, 3.665170872010668*^9}, {3.665171084028084*^9, 
   3.665171106235079*^9}, {3.665171163587143*^9, 3.665171202027388*^9}, {
   3.665171251849078*^9, 3.6651712762696114`*^9}, {3.665171352981283*^9, 
   3.665171393290799*^9}, {3.665171700637777*^9, 3.6651717170549*^9}, {
   3.665171866148512*^9, 3.665171955930114*^9}, {3.665172018811911*^9, 
   3.665172020436982*^9}, {3.665172881112489*^9, 3.6651728834251003`*^9}, {
   3.665172940440215*^9, 3.6651729550576177`*^9}, {3.665172996706653*^9, 
   3.66517302949358*^9}, 3.6651730625039473`*^9, {3.665173370575476*^9, 
   3.665173373950664*^9}, {3.668089031125873*^9, 3.6680890373520055`*^9}, {
   3.81693496365808*^9, 3.816935022558541*^9}, {3.816944050928848*^9, 
   3.816944377179193*^9}, {3.816944416315724*^9, 3.81694443594584*^9}, {
   3.81783222577482*^9, 3.817832255295932*^9}, {3.819190533697134*^9, 
   3.819190536992586*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"40d8c022-e733-448f-97c5-9d177dc47b04"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "ReliableDistances", "]"}], ";", 
  RowBox[{
   RowBox[{"ReliableDistances", "[", 
    RowBox[{"sss_Association", " ", "/;", " ", 
     RowBox[{"KeyExistsQ", "[", 
      RowBox[{"sss", ",", "\"\<OutDegreeRemaining\>\""}], "]"}]}], "]"}], " ",
    ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"len", ",", 
       RowBox[{"net", "=", 
        RowBox[{"sss", "[", "\"\<Net\>\"", "]"}]}], ",", "odr", ",", "z", ",",
        "eins", ",", "pos", ",", "distances", ",", "maxdistance"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "net", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "}"}], "]"}]}], "]"}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"no", " ", "network"}], ",", " ", 
        RowBox[{"no", " ", 
         RowBox[{"distances", "!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"eins", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"net", "/.", 
          RowBox[{"Rule", "\[Rule]", "List"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"$debug", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<smallest node in net: \>\"", ",", "eins"}], "]"}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "Find", " ", "the", " ", "end", " ", "of", " ", "last", " ", "case", 
         " ", "of", " ", "the", " ", "longest", " ", "run", " ", "of", " ", 
         "0", "s", " ", 
         RowBox[{"(", 
          RowBox[{"or", " ", "least", " ", "entry"}], ")"}], " ", "in", " ", 
         "the", " ", "list", " ", "of", " ", "remaining", " ", "outdegrees"}],
         ",", " ", 
        RowBox[{"after", " ", "skipping", " ", "first", " ", "10", "%"}]}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"len", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"sss", "[", "\"\<OutDegreeRemaining\>\"", "]"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"odr", "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{
         RowBox[{"sss", "[", "\"\<OutDegreeRemaining\>\"", "]"}], ",", 
         RowBox[{
          RowBox[{"_", "?", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "<", 
              RowBox[{".1", "len"}]}], "&"}], ")"}]}], "\[Rule]", 
          "\[Infinity]"}]}], "]"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"set", " ", "first", " ", "10", "%"}], " ", "=", " ", 
         "\[Infinity]"}], ",", " ", 
        RowBox[{"these", " ", "will", " ", "be", " ", "ignored"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"$debug", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<OutDegreeRemaining (massaged): \>\"", ",", " ", "odr"}],
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"z", " ", "=", " ", 
       RowBox[{"Min", "[", "odr", "]"}]}], ";", "  ", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"$debug", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<treating as zero (in odr): \>\"", ",", " ", "z"}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"for", " ", "our", " ", "purposes"}], ",", " ", 
        RowBox[{
        "z", " ", "will", " ", "be", " ", "treated", " ", "as", " ", "0"}], 
        ",", " ", 
        RowBox[{
         RowBox[{
         "nodes", " ", "that", " ", "are", " ", "as", " ", "complete", " ", 
          "as", " ", "possible", " ", "have", " ", "outdegree", " ", 
          "remaining"}], " ", "=", " ", "z"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"$debug", ",", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<using \\\"OutDegreeRemaining\\\" to find end of reliable data: \
\>\"", ",", "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{"odr", " ", "/.", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Longest", "[", 
                RowBox[{"g___", ",", "1"}], "]"}], ",", 
               RowBox[{"f", ":", 
                RowBox[{"Longest", "[", 
                 RowBox[{
                  RowBox[{"z", ".."}], ",", "2"}], "]"}]}], ",", "h___"}], 
              "}"}], "\[RuleDelayed]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", "g", "}"}], ",", 
               RowBox[{"{", "f", "}"}], ",", 
               RowBox[{"{", "h", "}"}]}], "}"}]}]}], ")"}]}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"pos", "=", 
       RowBox[{"(", 
        RowBox[{"odr", " ", "/.", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Longest", "[", 
             RowBox[{"g___", ",", "1"}], "]"}], ",", 
            RowBox[{"f", ":", 
             RowBox[{"Longest", "[", 
              RowBox[{
               RowBox[{"z", ".."}], ",", "2"}], "]"}]}], ",", "h___"}], "}"}],
           "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"{", 
             RowBox[{"g", ",", "f"}], "}"}], "]"}], "+", 
           RowBox[{"Flatten", "@", 
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"{", "h", "}"}], ",", 
              RowBox[{"_", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", "\[NotEqual]", "0"}], "&"}], ")"}]}]}], 
             "]"}]}]}]}]}], ")"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{"$debug", ",", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Position of first untrustworthy node: \>\"", ",", " ", "pos"}], 
         "]"}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"distances", " ", "=", " ", 
         RowBox[{"sss", "[", "\"\<Distance\>\"", "]"}]}], ";"}], " ", "*)"}], 
      "   ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "now", " ", "using", " ", "undirected", " ", "graph", " ", 
         "distances"}], "..."}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"distances", " ", "=", " ", 
       RowBox[{"GraphDistance", "[", 
        RowBox[{
         RowBox[{"UndirectedGraph", "[", 
          RowBox[{"sss", "[", "\"\<Net\>\"", "]"}], "]"}], ",", "eins"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"$debug", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<distances (uncut): \>\"", ",", "distances"}], "]"}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxdistance", "=", 
       RowBox[{"Min", "[", 
        RowBox[{
        "distances", "\[LeftDoubleBracket]", "pos", "\[RightDoubleBracket]"}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"$debug", ",", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<last distance we'll trust: \>\"", ",", " ", "maxdistance"}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"distances", " ", "/.", " ", 
       RowBox[{
        RowBox[{"_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#", ">", "maxdistance"}], "&"}], ")"}]}], "\[Rule]", 
        RowBox[{"-", "1"}]}]}]}]}], "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"replace", " ", "unreliable", " ", "distances", " ", "by"}], 
      " ", "-", "1"}], " ", "*)"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.817228159138603*^9, 3.817228173077298*^9}, {
   3.8172282190373178`*^9, 3.817228232130264*^9}, {3.817228264933549*^9, 
   3.81722828518436*^9}, {3.817228324182994*^9, 3.8172283686530004`*^9}, {
   3.817228412541567*^9, 3.8172284568121*^9}, {3.817228537947013*^9, 
   3.817228609343017*^9}, {3.817228765829294*^9, 3.81722878984062*^9}, {
   3.817228821117978*^9, 3.817228942206961*^9}, {3.817230368381919*^9, 
   3.817230423839056*^9}, {3.817230477074119*^9, 3.8172304995488243`*^9}, {
   3.81723197162913*^9, 3.8172320558038588`*^9}, {3.817232294082149*^9, 
   3.817232346445027*^9}, {3.817232379866581*^9, 3.817232419104626*^9}, 
   3.817232629727014*^9, {3.8172326872570767`*^9, 3.8172327860956593`*^9}, {
   3.817232817491658*^9, 3.817232932168081*^9}, {3.817233814339041*^9, 
   3.817233920039836*^9}, {3.817233950783433*^9, 3.817233980721273*^9}, {
   3.817234029966288*^9, 3.8172340976958957`*^9}, {3.817234177686614*^9, 
   3.817234187343755*^9}, {3.8172342464723997`*^9, 3.817234319990099*^9}, {
   3.8172344317806983`*^9, 3.817234454243561*^9}, {3.817234912269824*^9, 
   3.817234917588294*^9}, {3.8172349609134607`*^9, 3.817234993630997*^9}, {
   3.8172351067817173`*^9, 3.817235159442348*^9}, 3.817235224426127*^9, {
   3.817235269655778*^9, 3.817235311540285*^9}, {3.8172353494287863`*^9, 
   3.817235368639255*^9}, {3.817235412446875*^9, 3.8172354452953105`*^9}, 
   3.81723552257732*^9, {3.8172355653447447`*^9, 3.81723563254233*^9}, {
   3.8172356761146774`*^9, 3.8172357305769386`*^9}, {3.817235767316089*^9, 
   3.817235957555154*^9}, {3.817236355217019*^9, 3.817236357577386*^9}, {
   3.817236422482133*^9, 3.817236484183578*^9}, {3.817236537418891*^9, 
   3.817236548524276*^9}, {3.8172366081116066`*^9, 3.817236668521332*^9}, {
   3.817237097163015*^9, 3.817237188949583*^9}, {3.817237240592721*^9, 
   3.817237252417554*^9}, {3.8172378642123237`*^9, 3.8172378761757536`*^9}, {
   3.817237992102885*^9, 3.8172380009349203`*^9}, {3.817238859592778*^9, 
   3.817238929189248*^9}, {3.8172389603102202`*^9, 3.817239141111286*^9}, {
   3.817240150165779*^9, 3.8172401673687186`*^9}, {3.817240451602898*^9, 
   3.817240459244499*^9}, {3.817241863856079*^9, 3.817241872936414*^9}, {
   3.817316866461234*^9, 3.8173168677537756`*^9}, {3.817592017842403*^9, 
   3.81759203332751*^9}, {3.817592176751378*^9, 3.8175921815136366`*^9}, {
   3.817832462299978*^9, 3.817832465133403*^9}, {3.817832531167544*^9, 
   3.81783259971927*^9}, {3.817832681778271*^9, 3.817832786043445*^9}, {
   3.817834118198187*^9, 3.8178341710609035`*^9}, {3.8178344053006105`*^9, 
   3.817834550198396*^9}, {3.8178345919242783`*^9, 3.8178346717902765`*^9}, {
   3.817834767760476*^9, 3.817834768799697*^9}, {3.8191905630947237`*^9, 
   3.8191905679145746`*^9}, 3.819477094849415*^9, {3.8196655913462048`*^9, 
   3.81966559549958*^9}, {3.819665745052121*^9, 3.819665764095297*^9}, {
   3.8196657957202425`*^9, 3.8196660122654133`*^9}, 3.819838078067459*^9, {
   3.819838138659191*^9, 3.819838164633638*^9}, {3.819838214018406*^9, 
   3.8198382931951833`*^9}, {3.819838325581995*^9, 3.819838382793808*^9}, {
   3.8198384782627525`*^9, 3.819838492876627*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"6d0217e7-9672-4e88-a0ad-dd1bf9208242"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DistanceLastPositions", "[", 
    RowBox[{"sss_Association", " ", "/;", " ", 
     RowBox[{"KeyExistsQ", "[", 
      RowBox[{"sss", ",", "\"\<OutDegreeRemaining\>\""}], "]"}]}], "]"}], " ",
    ":=", " ", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "find", " ", "the", " ", "position", " ", "of", " ", "the", " ", "last", 
      " ", "node", " ", "with", " ", 
      RowBox[{"(", "reliable", ")"}], " ", "distance", " ", "1"}], ",", " ", 
     "2", ",", " ", "..."}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rd", "=", 
       RowBox[{"ReliableDistances", "[", "sss", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "rd", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"MergeIntervalsByRulesUsed", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"Last", "[", 
             RowBox[{"Position", "[", 
              RowBox[{"rd", ",", "#", ",", 
               RowBox[{"{", "1", "}"}]}], "]"}], "]"}], "]"}], "&"}], " ", "/@",
           " ", 
          RowBox[{"Range", "[", 
           RowBox[{"Max", "[", 
            RowBox[{"Complement", "[", 
             RowBox[{"rd", ",", 
              RowBox[{"{", "\[Infinity]", "}"}]}], "]"}], "]"}], "]"}]}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"sss", "[", "\"\<RulesUsed\>\"", "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DistanceLastPositions", "::", "usage"}], " ", "=", " ", 
   "\"\<Takes sss, an already generated sessie object, and returns the list \
of positions {\!\(\*SubscriptBox[\(n\), \(1\)]\), \!\(\*SubscriptBox[\(n\), \
\(2\)]\), \[Ellipsis], \!\(\*SubscriptBox[\(n\), \(k\)]\)} in its causal \
network, each of which is the last node at the indicated distance from the \
origin.  Thus \!\(\*SubscriptBox[\(n\), \(1\)]\) is the node of maximum index \
which is 1 step away, \!\(\*SubscriptBox[\(n\), \(2\)]\) the largest that is \
2 steps away, etc. But only the final 90% of the network is considered. This \
list is modified by the function MergeIntervalsByRulesUsed before being \
returned.\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.817228159138603*^9, 3.817228173077298*^9}, {
   3.8172282190373178`*^9, 3.817228232130264*^9}, {3.817228264933549*^9, 
   3.81722828518436*^9}, {3.817228324182994*^9, 3.8172283686530004`*^9}, {
   3.817228412541567*^9, 3.8172284568121*^9}, {3.817228537947013*^9, 
   3.817228609343017*^9}, {3.817228765829294*^9, 3.81722878984062*^9}, {
   3.817228821117978*^9, 3.817228942206961*^9}, {3.817230368381919*^9, 
   3.817230423839056*^9}, {3.817230477074119*^9, 3.8172304995488243`*^9}, {
   3.81723197162913*^9, 3.8172320558038588`*^9}, {3.817232294082149*^9, 
   3.817232346445027*^9}, {3.817232379866581*^9, 3.817232419104626*^9}, 
   3.817232629727014*^9, {3.8172326872570767`*^9, 3.8172327860956593`*^9}, {
   3.817232817491658*^9, 3.817232932168081*^9}, {3.817233814339041*^9, 
   3.817233920039836*^9}, {3.817233950783433*^9, 3.817233980721273*^9}, {
   3.817234029966288*^9, 3.8172340976958957`*^9}, {3.817234177686614*^9, 
   3.817234187343755*^9}, {3.8172342464723997`*^9, 3.817234319990099*^9}, {
   3.8172344317806983`*^9, 3.817234454243561*^9}, {3.817234912269824*^9, 
   3.817234917588294*^9}, {3.8172349609134607`*^9, 3.817234993630997*^9}, {
   3.8172351067817173`*^9, 3.817235159442348*^9}, 3.817235224426127*^9, {
   3.817235269655778*^9, 3.817235311540285*^9}, {3.8172353494287863`*^9, 
   3.817235368639255*^9}, {3.817235412446875*^9, 3.8172354452953105`*^9}, 
   3.81723552257732*^9, {3.8172355653447447`*^9, 3.81723563254233*^9}, {
   3.8172356761146774`*^9, 3.8172357305769386`*^9}, {3.817235767316089*^9, 
   3.817235957555154*^9}, {3.817236355217019*^9, 3.817236357577386*^9}, {
   3.817236422482133*^9, 3.817236484183578*^9}, {3.817236537418891*^9, 
   3.817236548524276*^9}, {3.8172366081116066`*^9, 3.817236668521332*^9}, {
   3.817237097163015*^9, 3.817237188949583*^9}, {3.817237240592721*^9, 
   3.817237252417554*^9}, {3.8172378642123237`*^9, 3.817237890504012*^9}, {
   3.817241632433546*^9, 3.817241633699465*^9}, {3.817316875736427*^9, 
   3.817317124666675*^9}, {3.817725630397557*^9, 3.817725691688063*^9}, {
   3.817835122955846*^9, 3.81783515310819*^9}, 3.8178354519192524`*^9, {
   3.817837609710298*^9, 3.817837611659088*^9}, {3.817837657491592*^9, 
   3.8178376761666145`*^9}, {3.819280051973794*^9, 3.8192800521443357`*^9}, {
   3.819280088047293*^9, 3.8192801260805483`*^9}, {3.819312890059765*^9, 
   3.819312933915417*^9}, {3.819313256637319*^9, 3.819313274457589*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"6cec58c6-ff4b-4977-af6e-df52e0bbe039"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DistanceTally", "[", 
    RowBox[{"sss_Association", " ", "/;", " ", 
     RowBox[{"KeyExistsQ", "[", 
      RowBox[{"sss", ",", "\"\<OutDegreeRemaining\>\""}], "]"}]}], "]"}], " ",
    ":=", "   ", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"tally", " ", "reliable", " ", "distances"}], ",", " ", "sort", 
     ",", " ", 
     RowBox[{"drop", " ", "the", " ", "unreliable", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], " ", "&"}], " ", "\[Infinity]"}], ")"}], " ", 
      "tally"}], ",", " ", 
     RowBox[{"keep", " ", "numbers", " ", "only"}]}], " ", "*)"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rd", "=", 
       RowBox[{"ReliableDistances", "[", "sss", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "rd", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Accumulate", "[", 
        RowBox[{"Last", " ", "/@", " ", 
         RowBox[{"Rest", "@", 
          RowBox[{"Sort", "@", 
           RowBox[{"DeleteCases", "[", 
            RowBox[{
             RowBox[{"Tally", "[", "rd", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Infinity]", ",", "_"}], "}"}]}], "]"}]}]}]}], 
        "]"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DistanceTally", "::", "usage"}], " ", "=", " ", 
   "\"\<Takes sss, an already generated sessie object, and returns the list \
of how many nodes are 0 steps from the origin, how many 1 step away, how many \
2 steps away, \[Ellipsis]. But only the final 90% of the network is \
considered.\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.817228159138603*^9, 3.817228173077298*^9}, {
   3.8172282190373178`*^9, 3.817228232130264*^9}, {3.817228264933549*^9, 
   3.81722828518436*^9}, {3.817228324182994*^9, 3.8172283686530004`*^9}, {
   3.817228412541567*^9, 3.8172284568121*^9}, {3.817228537947013*^9, 
   3.817228609343017*^9}, {3.817228765829294*^9, 3.81722878984062*^9}, {
   3.817228821117978*^9, 3.817228942206961*^9}, {3.817230368381919*^9, 
   3.817230423839056*^9}, {3.817230477074119*^9, 3.8172304995488243`*^9}, {
   3.81723197162913*^9, 3.8172320558038588`*^9}, {3.817232294082149*^9, 
   3.817232346445027*^9}, {3.817232379866581*^9, 3.817232419104626*^9}, 
   3.817232629727014*^9, {3.8172326872570767`*^9, 3.8172327860956593`*^9}, {
   3.817232817491658*^9, 3.817232932168081*^9}, {3.817233814339041*^9, 
   3.817233920039836*^9}, {3.817233950783433*^9, 3.817233980721273*^9}, {
   3.817234029966288*^9, 3.8172340976958957`*^9}, {3.817234177686614*^9, 
   3.817234187343755*^9}, {3.8172342464723997`*^9, 3.817234319990099*^9}, {
   3.8172344317806983`*^9, 3.817234454243561*^9}, {3.817234912269824*^9, 
   3.817234917588294*^9}, {3.8172349609134607`*^9, 3.817234993630997*^9}, {
   3.8172351067817173`*^9, 3.817235159442348*^9}, 3.817235224426127*^9, {
   3.817235269655778*^9, 3.817235311540285*^9}, {3.8172353494287863`*^9, 
   3.817235368639255*^9}, {3.817235412446875*^9, 3.8172354452953105`*^9}, 
   3.81723552257732*^9, {3.8172355653447447`*^9, 3.81723563254233*^9}, {
   3.8172356761146774`*^9, 3.8172357305769386`*^9}, {3.817235767316089*^9, 
   3.817235957555154*^9}, {3.817236355217019*^9, 3.817236357577386*^9}, {
   3.817236422482133*^9, 3.817236484183578*^9}, {3.817236537418891*^9, 
   3.817236548524276*^9}, {3.8172366081116066`*^9, 3.817236668521332*^9}, {
   3.817237097163015*^9, 3.817237188949583*^9}, {3.817237240592721*^9, 
   3.817237252417554*^9}, {3.8172378642123237`*^9, 3.8172379549277444`*^9}, {
   3.817241611316729*^9, 3.8172416286444693`*^9}, {3.8173171318394613`*^9, 
   3.817317223802497*^9}, {3.817835197717925*^9, 3.817835247894753*^9}, 
   3.817835438499156*^9, {3.817837885010988*^9, 3.8178379194000473`*^9}, {
   3.8178379846367*^9, 3.817837995302885*^9}, {3.817838242457844*^9, 
   3.817838265474035*^9}, {3.8192801425983553`*^9, 3.819280144256917*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"0f6761ad-a481-4e2a-93f0-d6a368dfd7ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LongestPositiveSubsequence", "[", "l_List", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"mx", ",", "spl"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"spl", "=", 
      RowBox[{"SplitBy", "[", 
       RowBox[{
        RowBox[{"l", "/.", 
         RowBox[{"ComplexInfinity", "\[Rule]", "\[Infinity]"}]}], ",", 
        RowBox[{
         RowBox[{"0", "\[LessEqual]", "#", "<", "\[Infinity]"}], "&"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"mx", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"Length", "/@", "spl"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"First", "[", 
      RowBox[{"Select", "[", 
       RowBox[{"spl", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "mx"}], "&"}]}], 
       "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6654235058488026`*^9, 3.665423526778179*^9}, {
  3.665423637686016*^9, 3.665423867176663*^9}, {3.665440961150327*^9, 
  3.665440963884815*^9}, {3.665441100767234*^9, 3.665441109252045*^9}, {
  3.665469406744076*^9, 3.665469415822606*^9}, {3.665525399743689*^9, 
  3.665525418204111*^9}, {3.665698201104963*^9, 3.6656982108014956`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"b2eebb71-9534-4d77-afef-87a6c703b44c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "RecognizeDifferenceRow", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RecognizeDifferenceRow", "[", "l_List", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"len", "=", 
       RowBox[{"Length", "[", "l", "]"}]}], ",", "ptrn", ",", "dlay", ",", 
      "mtch", ",", "mtchlen", ",", "k", ",", "rats"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"len", "/", "2"}]}], ",", 
       RowBox[{"k", "++"}], ",", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "for", " ", "each", " ", "possible", " ", "size", " ", "moving", " ", 
         "average", " ", "run", " ", "k"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ptrn", "=", 
         RowBox[{"MovingAverage", "[", 
          RowBox[{"l", ",", "k"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<ptrn: \>\"", ",", "ptrn"}], "]"}], ";"}], " ", "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{"ptrn", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Repeated", "[", 
               RowBox[{"_", ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "5"}], "}"}]}], "]"}], ",", 
              RowBox[{"Repeated", "[", 
               RowBox[{"b_", ",", 
                RowBox[{"{", 
                 RowBox[{"5", ",", "\[Infinity]"}], "}"}]}], "]"}], ",", 
              RowBox[{"Repeated", "[", 
               RowBox[{"_", ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "3"}], "}"}]}], "]"}]}], "}"}]}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{
            "accept", " ", "no", " ", "more", " ", "than", " ", "5", " ", 
             "junk", " ", "items", " ", "at", " ", "the", " ", "start"}], ",",
             " ", 
            RowBox[{
            "no", " ", "more", " ", "than", " ", "3", " ", "at", " ", "the", 
             " ", "end"}], ",", " ", 
            RowBox[{
            "need", " ", "at", " ", "least", " ", "5", " ", "repeated", " ", 
             "items", " ", "between"}]}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"dlay", ",", "mtchlen", ",", "mtch"}], "}"}], "=", 
            RowBox[{"(", 
             RowBox[{"ptrn", "/.", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"a", ":", 
                  RowBox[{"Repeated", "[", 
                   RowBox[{"_", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "5"}], "}"}]}], "]"}]}], ",", 
                 RowBox[{"brun", ":", 
                  RowBox[{"Longest", "[", 
                   RowBox[{"Repeated", "[", 
                    RowBox[{"b_", ",", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "\[Infinity]"}], "}"}]}], "]"}], 
                   "]"}]}], ",", 
                 RowBox[{"Repeated", "[", 
                  RowBox[{"_", ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "3"}], "}"}]}], "]"}]}], "}"}], 
               "\[RuleDelayed]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"{", "a", "}"}], "]"}], ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"{", "brun", "}"}], "]"}], ",", "b"}], "}"}]}]}], 
             ")"}]}], ";", " ", "\[IndentingNewLine]", 
           RowBox[{"Return", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<dim\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "dlay", ",", "mtchlen", ",", "mtch"}], 
               "}"}]}], "}"}], "]"}]}]}], "  ", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"constant", " ", "row", " ", "found"}], ",", " ", 
           RowBox[{
            RowBox[{"needed", " ", "k"}], "-", "averaging"}], ",", " ", 
           RowBox[{"after", " ", "dlay"}], ",", " ", 
           RowBox[{
           "including", " ", "a", " ", "mtch", " ", "of", " ", "length", " ", 
            "mtchlen"}]}], " ", "*)"}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Off", "[", 
         RowBox[{
          RowBox[{"Divide", "::", "infy"}], ",", 
          RowBox[{"Divide", "::", "indet"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rats", "=", 
         RowBox[{"LongestPositiveSubsequence", "[", 
          RowBox[{"Ratios", "[", "ptrn", "]"}], "]"}]}], ";", "  ", 
        RowBox[{"(*", " ", 
         RowBox[{"try", " ", "ratios", " ", "instead"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<rats: \>\"", ",", "rats"}], "]"}], ";"}], " ", "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{"rats", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Repeated", "[", 
               RowBox[{"_", ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "5"}], "}"}]}], "]"}], ",", 
              RowBox[{"Repeated", "[", 
               RowBox[{
                RowBox[{"b_", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"#", ">", "1"}], "&"}], ")"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"3", ",", "\[Infinity]"}], "}"}]}], "]"}], ",", 
              RowBox[{"Repeated", "[", 
               RowBox[{"_", ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "3"}], "}"}]}], "]"}]}], "}"}]}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{
            "accept", " ", "no", " ", "more", " ", "than", " ", "5", " ", 
             "junk", " ", "items", " ", "at", " ", "the", " ", "start"}], ",",
             " ", 
            RowBox[{
            "no", " ", "more", " ", "than", " ", "3", " ", "at", " ", "the", 
             " ", "end"}], ",", " ", 
            RowBox[{
            "need", " ", "at", " ", "least", " ", "3", " ", "repeated", " ", 
             "positive", " ", "ratios", " ", "between"}]}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"dlay", ",", "mtchlen", ",", "mtch"}], "}"}], "=", 
            RowBox[{"(", 
             RowBox[{"rats", "/.", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"a", ":", 
                  RowBox[{"Repeated", "[", 
                   RowBox[{"_", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "5"}], "}"}]}], "]"}]}], ",", 
                 RowBox[{"brun", ":", 
                  RowBox[{"Longest", "[", 
                   RowBox[{"Repeated", "[", 
                    RowBox[{
                    RowBox[{"b_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", ">", "1"}], "&"}], ")"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "\[Infinity]"}], "}"}]}], "]"}], 
                   "]"}]}], ",", 
                 RowBox[{"Repeated", "[", 
                  RowBox[{"_", ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "3"}], "}"}]}], "]"}]}], "}"}], 
               "\[RuleDelayed]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"{", "a", "}"}], "]"}], ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"{", "brun", "}"}], "]"}], ",", "b"}], "}"}]}]}], 
             ")"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"On", "[", 
            RowBox[{
             RowBox[{"Divide", "::", "infy"}], ",", 
             RowBox[{"Divide", "::", "indet"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Return", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<exp\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "dlay", ",", "mtchlen", ",", "mtch"}], 
               "}"}]}], "}"}], "]"}]}]}], " ", 
         RowBox[{"(*", " ", 
          RowBox[{"exponential", ",", " ", 
           RowBox[{
            RowBox[{"needed", " ", "k"}], "-", "averaging"}], ",", " ", 
           RowBox[{"after", " ", "dlay"}], ",", " ", 
           RowBox[{
           "including", " ", "a", " ", "mtch", " ", "of", " ", "length", " ", 
            "mtchlen"}]}], " ", "*)"}], "\[IndentingNewLine]", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", "}"}]}]}], "]"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"{", "}"}], " ", "=", " ", "failure"}], ",", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<dim\>\"", "|", "\"\<exp\>\""}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"k", ",", " ", "dlay", ",", " ", 
         RowBox[{
          RowBox[{"(", "max", ")"}], " ", "match", " ", "length"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"diff", "|", "ratio"}], ")"}], "mtch"}]}], "}"}]}], "}"}], 
     " ", "=", " ", 
     RowBox[{"success", "!"}]}]}], " ", "*)"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.817281534167098*^9, 3.817281566477665*^9}, {
   3.817577088446924*^9, 3.817577132684613*^9}, {3.817577370035394*^9, 
   3.817577370475181*^9}, {3.817577400805055*^9, 3.8175774982204895`*^9}, {
   3.8175779219780526`*^9, 3.817577932271521*^9}, {3.8175780525915008`*^9, 
   3.817578217387238*^9}, {3.8175783016567607`*^9, 3.817578453894936*^9}, {
   3.817578557159973*^9, 3.817578558114415*^9}, {3.817578865989998*^9, 
   3.817578966659878*^9}, {3.81757971684986*^9, 3.817579733748114*^9}, 
   3.817579967212099*^9, {3.817580811283479*^9, 3.817580818851216*^9}, {
   3.8175903318797703`*^9, 3.817590398559235*^9}, {3.8175904919302397`*^9, 
   3.817590507045764*^9}, {3.817628121935873*^9, 3.817628266876809*^9}, {
   3.81762831238813*^9, 3.817628405959817*^9}, {3.81763804809811*^9, 
   3.817638238610485*^9}, {3.817638277409704*^9, 3.8176382961945114`*^9}, 
   3.817638471976999*^9, {3.8176385202110157`*^9, 3.8176386392314267`*^9}, {
   3.8176387102333217`*^9, 3.817638773551376*^9}, {3.817638838124235*^9, 
   3.81763886422726*^9}, {3.817639065701151*^9, 3.817639113718567*^9}, {
   3.81763956094055*^9, 3.8176395620994453`*^9}, {3.817639669153744*^9, 
   3.8176397218427916`*^9}, {3.818356636097847*^9, 3.8183566695353765`*^9}, {
   3.819028811639488*^9, 3.8190288433625183`*^9}, {3.819028921740009*^9, 
   3.819028938832059*^9}, {3.819028985189252*^9, 3.819029022991463*^9}, {
   3.819029097475377*^9, 3.819029107808042*^9}, 3.8191436678995504`*^9, {
   3.819406482950311*^9, 3.8194066867929883`*^9}, {3.819406819085345*^9, 
   3.819406829851543*^9}, {3.8194364298782268`*^9, 3.8194364951925507`*^9}, {
   3.81943653138772*^9, 3.8194365530268292`*^9}, {3.819436600564807*^9, 
   3.819436637004322*^9}, {3.819436913402924*^9, 3.819436923629572*^9}, {
   3.81945604558294*^9, 3.8194560822194967`*^9}, {3.819456165212448*^9, 
   3.819456167571146*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"84a20f7c-7990-4cd1-bf60-04e8aff94deb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CheckDimension", "[", "l_List", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"diffsTable", "=", 
       RowBox[{"{", 
        RowBox[{"l", ",", 
         RowBox[{"Differences", "[", "l", "]"}]}], "}"}]}], ",", "lastrow", 
      ",", "ans", ",", "k", ",", "dlay", ",", "mtchlen", ",", "mtch"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"lastrow", "=", 
          RowBox[{"Last", "[", "diffsTable", "]"}]}], "]"}], 
        "\[GreaterEqual]", "5"}], ",", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "stop", " ", "when", " ", "rows", " ", "become", " ", "too", " ", 
         "short"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ans", "=", 
         RowBox[{"RecognizeDifferenceRow", "[", "lastrow", "]"}]}], ";", "  ", 
        RowBox[{"(*", " ", 
         RowBox[{"try", " ", "to", " ", "ID", " ", "this", " ", "row"}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "ans", "]"}], ">", "0"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"success", ",", " ", 
            RowBox[{"get", " ", 
             RowBox[{"details", ":", " ", 
              RowBox[{"k", "-", "averaging"}]}]}], ",", " ", 
            RowBox[{"after", " ", "dlay"}], ",", " ", 
            RowBox[{"match", " ", "of", " ", "length", " ", "mtchlen"}]}], 
           " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"k", ",", "dlay", ",", "mtchlen", ",", "mtch"}], "}"}], 
            "=", 
            RowBox[{
            "ans", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"Return", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Switch", "[", 
               RowBox[{
                RowBox[{
                "ans", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                 ",", "\[IndentingNewLine]", "\"\<exp\>\"", ",", 
                "\"\<exp\>\"", " ", 
                RowBox[{"(*", " ", 
                 RowBox[{"<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{
                    RowBox[{"Length", "[", "diffsTable", "]"}], "-", "1"}], 
                   "]"}]}], " ", "*)"}], ",", "\[IndentingNewLine]", 
                "\"\<dim\>\"", ",", 
                RowBox[{
                 RowBox[{"ToString", "[", 
                  RowBox[{
                   RowBox[{"Length", "[", "diffsTable", "]"}], "-", "1"}], 
                  "]"}], "<>", "\"\<D\>\""}]}], "\[IndentingNewLine]", "]"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{
              "ans", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"Framed", "@", 
               RowBox[{"Grid", "[", 
                RowBox[{"diffsTable", "\[LeftDoubleBracket]", 
                 RowBox[{"All", ",", 
                  RowBox[{
                   RowBox[{"dlay", "+", "1"}], ";;", 
                   RowBox[{"dlay", "+", "k"}]}]}], "\[RightDoubleBracket]"}], 
                "]"}]}], ",", 
              RowBox[{"Grid", "[", "diffsTable", "]"}]}], "}"}], "]"}]}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"failure", ",", " ", 
            RowBox[{"add", " ", "another", " ", "row"}], ",", " ", 
            RowBox[{"try", " ", "again"}]}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"diffsTable", ",", 
            RowBox[{"Differences", "[", 
             RowBox[{"Last", "[", "diffsTable", "]"}], "]"}]}], "]"}]}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<failed\>\"", ",", 
       RowBox[{"Grid", "[", "diffsTable", "]"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.817581113671153*^9, 3.8175812715488157`*^9}, {
   3.817581355852237*^9, 3.817581377825376*^9}, {3.817581430429591*^9, 
   3.817581510600331*^9}, {3.817584996452912*^9, 3.817585253847217*^9}, {
   3.817585364718678*^9, 3.817585368449691*^9}, {3.817585415881807*^9, 
   3.81758543788583*^9}, {3.817585674934391*^9, 3.8175856905425386`*^9}, {
   3.817585760944796*^9, 3.817585761673837*^9}, {3.817585791737403*^9, 
   3.817585791959796*^9}, {3.817586106048936*^9, 3.817586113285544*^9}, {
   3.817586357778194*^9, 3.817586381019913*^9}, {3.817590415155799*^9, 
   3.8175904596227913`*^9}, {3.81759056257716*^9, 3.8175906391729555`*^9}, {
   3.8176389367319603`*^9, 3.8176389513267913`*^9}, {3.817639132345683*^9, 
   3.81763915831822*^9}, {3.8176403423449936`*^9, 3.817640578557607*^9}, 
   3.817640640728295*^9, {3.817640774632078*^9, 3.817640776307608*^9}, {
   3.817915915149565*^9, 3.817916089105213*^9}, {3.817916148067499*^9, 
   3.817916164817695*^9}, {3.817916261142344*^9, 3.817916263694517*^9}, {
   3.818693304405927*^9, 3.8186933099553194`*^9}, {3.819405443812222*^9, 
   3.819405457319079*^9}, {3.819405549725878*^9, 3.8194057189563255`*^9}, {
   3.819405829387901*^9, 3.819405829921486*^9}, 3.819405907073075*^9, {
   3.819406229161484*^9, 3.819406252489075*^9}, {3.819406750791015*^9, 
   3.8194067633464265`*^9}, {3.819406799715131*^9, 3.819406811903527*^9}, 
   3.819406850717728*^9, {3.819436675009712*^9, 3.819436691299091*^9}, {
   3.819436781001137*^9, 3.819436825585852*^9}, {3.8194381298597555`*^9, 
   3.819438130508019*^9}, 3.819438547251187*^9, {3.819438831615006*^9, 
   3.819438849517109*^9}, {3.8194389553303576`*^9, 3.819438963842581*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"ffc9aaef-33ee-40c8-8c53-608d48d53a2f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "GuessDimension", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"GuessDimension", ",", "HoldFirst"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GuessDimension", "[", "sss0_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"len", ",", "sss", ",", "ans", ",", "anssum", ",", "vdct", ",", 
       RowBox[{"chngd", "=", "False"}], ",", "RC"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "may", " ", "change", " ", "the", " ", "\"\<Verdict\>\"", " ", "field", 
       " ", "of", " ", "the", " ", "SSS", " ", "object", " ", "passed", " ", 
       "as", " ", "an", " ", "argument"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sss", "=", 
       RowBox[{"Evaluate", "[", "sss0", "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"local", " ", "copy", " ", "to", " ", "use"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"KeyExistsQ", "[", 
          RowBox[{"sss", ",", "\"\<Evolution\>\""}], "]"}]}], ",", 
        RowBox[{"Return", "[", "\"\<Invalid input\>\"", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MatchQ", "[", 
         RowBox[{
          RowBox[{"vdct", "=", 
           RowBox[{"sss", "[", "\"\<Verdict\>\"", "]"}]}], ",", 
          RowBox[{"\"\<Repeating\>\"", "|", "\"\<Dead\>\""}]}], "]"}], ",", 
        " ", 
        RowBox[{"Return", "[", "vdct", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"len", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"sss", "[", "\"\<RulesUsed\>\"", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"$debug", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<evol len: \>\"", ",", " ", "len"}], "]"}]}], "]"}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"ans", "=", 
       RowBox[{"DeleteCases", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"CheckDimension", " ", "/@", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"MaxStateLengthPositions", "[", "sss", "]"}], ",", 
            RowBox[{"LeastUsedRulePositions", "[", "sss", "]"}], ",", 
            RowBox[{"DistanceLastPositions", "[", "sss", "]"}], ",", 
            RowBox[{"DistanceTally", "[", "sss", "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"\"\<failed\>\"", ",", "___"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"extract", " ", "dim"}], " ", "&"}], " ", "mtchlen"}], ",", 
        " ", 
        RowBox[{
        "then", " ", "sort", " ", "in", " ", "decreasing", " ", "order", " ", 
         "by", " ", "matchlen"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"anssum", "=", 
       RowBox[{"ReverseSortBy", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
             RowBox[{"#", "\[LeftDoubleBracket]", 
              RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
           "&"}], " ", "/@", " ", "ans"}], ",", "Last"}], "]"}]}], ";", "  ", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"gather", " ", "by", " ", "dim"}], ",", " ", 
        RowBox[{"total", " ", "all", " ", "matchlens"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"anssum", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"Total", "[", 
            RowBox[{"Last", "/@", "#"}], "]"}]}], "}"}], "&"}], " ", "/@", 
        " ", 
        RowBox[{"GatherBy", "[", 
         RowBox[{"anssum", ",", "First"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"$debug", ",", 
        RowBox[{"Print", "[", "anssum", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"len", "<", "5000"}], " ", "&&", " ", 
         RowBox[{
          RowBox[{"anssum", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "<", 
          RowBox[{"10", "+", 
           RowBox[{"5", "*", 
            RowBox[{"Length", "[", "anssum", "]"}]}]}]}]}], ",", 
        RowBox[{"(*", " ", 
         RowBox[{"try", " ", "for", " ", "agreement"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"chngd", "=", "True"}], ";", "\[IndentingNewLine]", 
         RowBox[{"sss", "=", 
          RowBox[{"SSSEvolve", "[", 
           RowBox[{"sss", ",", 
            RowBox[{"len", "*", 
             RowBox[{"Round", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"10", "+", 
                 RowBox[{"5", "*", 
                  RowBox[{"Length", "[", "anssum", "]"}]}], "-", 
                 RowBox[{"anssum", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", 
                   RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], ")"}], 
               "/", "5"}], "]"}]}]}], "]"}]}], ";", "  ", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "extend", " ", "the", " ", "sss", " ", "evolution", " ", "a", " ", 
            "bit"}], ",", " ", "depending"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"len", "=", 
          RowBox[{"Length", "[", 
           RowBox[{"sss", "[", "\"\<RulesUsed\>\"", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"$debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<evol len: \>\"", ",", " ", "len"}], "]"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"ans", "=", 
          RowBox[{"DeleteCases", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"CheckDimension", " ", "/@", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"MaxStateLengthPositions", "[", "sss", "]"}], ",", 
               RowBox[{"LeastUsedRulePositions", "[", "sss", "]"}], ",", 
               RowBox[{"DistanceLastPositions", "[", "sss", "]"}], ",", 
               RowBox[{"DistanceTally", "[", "sss", "]"}]}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\"\<failed\>\"", ",", "___"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"extract", " ", "dim"}], " ", "&"}], " ", "mtchlen"}], 
           ",", " ", 
           RowBox[{
           "then", " ", "sort", " ", "in", " ", "decreasing", " ", "order", 
            " ", "by", " ", "matchlen"}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"anssum", "=", 
          RowBox[{"ReverseSortBy", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                ",", 
                RowBox[{"#", "\[LeftDoubleBracket]", 
                 RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
              "&"}], " ", "/@", " ", "ans"}], ",", "Last"}], "]"}]}], ";", 
         "  ", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"gather", " ", "by", " ", "dim"}], ",", " ", 
           RowBox[{"total", " ", "all", " ", "matchlens"}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"anssum", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"Total", "[", 
               RowBox[{"Last", "/@", "#"}], "]"}]}], "}"}], "&"}], " ", "/@", 
           " ", 
           RowBox[{"GatherBy", "[", 
            RowBox[{"anssum", ",", "First"}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"$debug", ",", 
           RowBox[{"Print", "[", "anssum", "]"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"vdct", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "anssum", "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{"anssum", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
         RowBox[{"(*", " ", 
          RowBox[{"agree", "!"}], " ", "*)"}], ",", " ", "anssum"}], " ", 
        RowBox[{"(*", " ", "disagree", " ", "*)"}], "]"}]}], ";", "  ", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"len", "<", "5000"}], " ", ",", " ", 
        RowBox[{
         RowBox[{"chngd", "=", "True"}], ";", " ", 
         RowBox[{
          RowBox[{"sss", "[", "\"\<Verdict\>\"", "]"}], "=", "vdct"}]}]}], 
       "]"}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"trust", " ", "it"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"chngd", ",", 
        RowBox[{"sss0", "=", "sss"}]}], "]"}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"update", " ", "it", " ", "if", " ", "changed"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "vdct", "]"}], ";", "\[IndentingNewLine]", 
      "ans"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.817281534167098*^9, 3.817281566477665*^9}, {
   3.817577088446924*^9, 3.817577132684613*^9}, {3.817577370035394*^9, 
   3.817577370475181*^9}, {3.817577400805055*^9, 3.8175774982204895`*^9}, {
   3.8175779219780526`*^9, 3.817577932271521*^9}, {3.8175780525915008`*^9, 
   3.817578217387238*^9}, {3.8175783016567607`*^9, 3.817578453894936*^9}, {
   3.817578557159973*^9, 3.817578558114415*^9}, {3.817578865989998*^9, 
   3.817578966659878*^9}, {3.81757971684986*^9, 3.817579733748114*^9}, 
   3.817579967212099*^9, {3.817580811283479*^9, 3.817580818851216*^9}, {
   3.8175903318797703`*^9, 3.817590398559235*^9}, {3.8175904919302397`*^9, 
   3.817590507045764*^9}, {3.817628121935873*^9, 3.817628266876809*^9}, {
   3.81762831238813*^9, 3.817628405959817*^9}, {3.81763804809811*^9, 
   3.817638238610485*^9}, {3.817638277409704*^9, 3.8176382961945114`*^9}, 
   3.817638471976999*^9, {3.8176385202110157`*^9, 3.8176386392314267`*^9}, {
   3.8176387102333217`*^9, 3.817638773551376*^9}, {3.817638838124235*^9, 
   3.81763886422726*^9}, {3.817639065701151*^9, 3.817639113718567*^9}, {
   3.81763956094055*^9, 3.8176395620994453`*^9}, {3.817639669153744*^9, 
   3.8176397218427916`*^9}, {3.818356636097847*^9, 3.8183566695353765`*^9}, {
   3.819028811639488*^9, 3.8190288433625183`*^9}, {3.819028921740009*^9, 
   3.819028938832059*^9}, {3.819028985189252*^9, 3.819029022991463*^9}, {
   3.819029097475377*^9, 3.819029107808042*^9}, {3.8191436678995504`*^9, 
   3.819143669125274*^9}, {3.819184375090829*^9, 3.8191844175183306`*^9}, 
   3.8191845629774*^9, {3.819184770204981*^9, 3.819184803355345*^9}, 
   3.819185356268685*^9, {3.819190108652956*^9, 3.819190114791792*^9}, {
   3.819404725282871*^9, 3.8194047382990513`*^9}, {3.819405380283165*^9, 
   3.8194053804397435`*^9}, {3.81940592851772*^9, 3.819405930779705*^9}, {
   3.819406169161999*^9, 3.819406169381411*^9}, 3.81940621865559*^9, {
   3.819438613445116*^9, 3.81943864309413*^9}, {3.8194386790299826`*^9, 
   3.819438718781649*^9}, {3.8194387565860615`*^9, 3.8194387592249937`*^9}, {
   3.8194391069965568`*^9, 3.819439143814062*^9}, {3.8194393178419085`*^9, 
   3.8194393364969983`*^9}, {3.8194393671749835`*^9, 3.819439429967965*^9}, {
   3.8194395087622113`*^9, 3.819439596450575*^9}, {3.8194396619770813`*^9, 
   3.8194397885678425`*^9}, {3.819455407280513*^9, 3.819455438053074*^9}, {
   3.819455469435105*^9, 3.8194556185812545`*^9}, {3.819455675243584*^9, 
   3.8194558341964836`*^9}, {3.8194558660691953`*^9, 3.819455976684304*^9}, {
   3.8194561843492327`*^9, 3.819456185402422*^9}, {3.819456221285385*^9, 
   3.819456333246764*^9}, {3.819456373485071*^9, 3.819456389948015*^9}, {
   3.819456423936072*^9, 3.81945651751664*^9}, {3.819456558495987*^9, 
   3.819456576071995*^9}, {3.8194566159702396`*^9, 3.8194566515759087`*^9}, {
   3.819456685101754*^9, 3.8194567759336863`*^9}, {3.819456807917844*^9, 
   3.819456902440899*^9}, {3.8194569809647455`*^9, 3.819457059389923*^9}, {
   3.819457091390299*^9, 3.819457200567772*^9}, {3.819457261132728*^9, 
   3.819457261699249*^9}, {3.819458212790285*^9, 3.8194582136639385`*^9}, {
   3.819469962530023*^9, 3.819469970061877*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"318ccf82-990a-43a1-8a1f-b0344bf46071"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Sandbox", "Section",
 CellChangeTimes->{{3.6116084382291594`*^9, 3.611608442135588*^9}, {
  3.816438489811798*^9, 3.816438540206995*^9}, {3.81676249484643*^9, 
  3.816762519638118*^9}, {3.816762705802061*^9, 
  3.8167627077688003`*^9}},ExpressionUUID->"0a3621f2-4fd5-4187-8124-\
40f5d8007737"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sssTemp", "=", 
   RowBox[{"SSS", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<AAB\>\"", "->", "\"\<AA\>\""}], ",", 
       RowBox[{"\"\<AA\>\"", "->", "\"\<ABA\>\""}], ",", 
       RowBox[{"\"\<B\>\"", "->", "\"\<A\>\""}]}], "}"}], ",", "\"\<AA\>\"", 
     ",", "49"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.83174347531627*^9, 3.831743584988504*^9}, {
  3.831743615000244*^9, 3.831743644520815*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"53e21723-8545-4e64-894f-50359f2e6021"],

Cell[BoxData[
 RowBox[{"sssTemp", "[", "\"\<Net\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.831743723739498*^9, 
  3.8317437439715023`*^9}},ExpressionUUID->"22500617-aab0-44aa-8f3d-\
b7f651716317"],

Cell[BoxData[
 RowBox[{"sssTemp", "[", "\"\<RulesUsed\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.831743906273563*^9, 3.831743916082653*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"6130e175-67a5-4379-a0de-95d2a3b0e767"],

Cell[BoxData[
 RowBox[{"StringLength", "/@", 
  RowBox[{"sssTemp", "[", "\"\<Evolution\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.8317439224615965`*^9, 3.831743945796194*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"d3f50d38-dc7a-46b1-8e0c-85d8e7791b3e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SSS", "[", 
   RowBox[{"50372395", ",", "50"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.832271202800429*^9, 3.832271210682397*^9}, 
   3.832271269954802*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"2a61d9e6-f6a0-4a20-ae46-3c8c642d4796"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SSS", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<AB\>\"", "->", "\"\<AA\>\""}], ",", 
      RowBox[{"\"\<A\>\"", "->", "\"\<B\>\""}], ",", 
      RowBox[{"\"\<B\>\"", "->", "\"\<AA\>\""}]}], "}"}], ",", "\"\<A\>\"", 
    ",", "50"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.832271202800429*^9, 3.832271210682397*^9}, {
  3.832271298475479*^9, 3.832271308859857*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"210eabc9-439c-43cb-865d-d04155391c2a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FromReducedRankIndex", "/@", 
   RowBox[{"Range", "[", "31", "]"}]}], " ", "//", "Column"}]], "Input",
 CellChangeTimes->{{3.833476581143248*^9, 3.833476605179655*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"166bef62-9826-4ac0-b0fe-f0faf8319f54"]
}, Open  ]]
},
WindowSize->{1423.5, 709.5},
WindowMargins->{{-15, Automatic}, {560.25, Automatic}},
FrontEndVersion->"14.0 for Microsoft Windows (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"51906b74-7f97-4080-8c71-b15bd392b13f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 438, 10, 64, "Input",ExpressionUUID->"b6bbff18-57b4-4e86-88dc-01e882848b61",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1021, 34, 563, 10, 67, "Section",ExpressionUUID->"196bea6f-fe95-45fc-8eed-5b7cd0861ec2"],
Cell[CellGroupData[{
Cell[1609, 48, 460, 7, 54, "Subsection",ExpressionUUID->"8b0f692b-968c-49a3-a5c3-1c112b49a2c9"],
Cell[2072, 57, 318, 9, 35, "Text",ExpressionUUID->"3c3aac88-aa64-4430-9282-54b27c8fe6eb"],
Cell[2393, 68, 530, 11, 45, "Subsubsection",ExpressionUUID->"9cfd189d-1b81-4f36-a67b-db8d2df5bac1"],
Cell[2926, 81, 526, 11, 37, "Subsubsection",ExpressionUUID->"53551ae2-6cd5-482d-b699-6742f0eaf1ed"],
Cell[3455, 94, 627, 11, 63, "Subsubsection",ExpressionUUID->"b0112165-6728-4ee0-bec3-d77ad6441ba4"],
Cell[CellGroupData[{
Cell[4107, 109, 850, 18, 37, "Subsubsection",ExpressionUUID->"e799c799-be3f-481d-85be-47a34d933a4d"],
Cell[4960, 129, 845, 14, 58, "Text",ExpressionUUID->"e470d74b-e5b9-41cd-8e87-aef3c72d2eb0"]
}, Open  ]],
Cell[5820, 146, 858, 15, 71, "Subsubsection",ExpressionUUID->"f8c27d3d-8a09-449a-ade1-cd40d8752ed9"],
Cell[6681, 163, 3695, 105, 167, "Subsubsection",ExpressionUUID->"866882c0-dbe5-41a0-8b2d-e2f9658139c4"],
Cell[10379, 270, 1153, 20, 63, "Subsubsection",ExpressionUUID->"23a2863c-cc73-44d1-a1cf-ee1b4de51ea6"],
Cell[11535, 292, 1068, 18, 63, "Subsubsection",ExpressionUUID->"db482108-b23a-4f90-92ec-aaa3de01e082"],
Cell[CellGroupData[{
Cell[12628, 314, 991, 14, 37, "Subsubsection",ExpressionUUID->"eded41b4-d1b4-4bb7-a4b7-1d55605b1a21"],
Cell[13622, 330, 1054, 16, 44, "Text",ExpressionUUID->"1c000c1b-2444-4676-9b44-5dc2260db2f5"],
Cell[14679, 348, 1460, 22, 102, "Text",ExpressionUUID->"7044f20e-82b6-4d65-8d30-ed53f311932f"],
Cell[16142, 372, 1711, 25, 102, "Text",ExpressionUUID->"1d6e6366-31aa-4660-9057-0cc5c912cf83"],
Cell[17856, 399, 1131, 18, 44, "Text",ExpressionUUID->"64ae8af7-610f-45bb-bab7-7b88243e1a3a"],
Cell[18990, 419, 1170, 18, 73, "Text",ExpressionUUID->"7057a6d6-1bc1-405c-944d-6f875c8706d6"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[20209, 443, 474, 7, 38, "Subsection",ExpressionUUID->"f907e537-c7ea-4037-856c-d86ae717feed"],
Cell[20686, 452, 3583, 77, 140, "Input",ExpressionUUID->"9469550a-ad2c-4651-88c5-d9a1dd74cbe0",
 InitializationCell->True],
Cell[24272, 531, 1734, 26, 83, "Input",ExpressionUUID->"8a183104-2a66-4dec-832a-5ad6e30ab96f",
 InitializationCell->True],
Cell[26009, 559, 4732, 92, 368, "Input",ExpressionUUID->"71228cc3-c7ff-4efa-b57b-f7b530265fdf",
 InitializationCell->True],
Cell[30744, 653, 1641, 25, 102, "Input",ExpressionUUID->"2cd4f368-1636-4242-aa64-3fbb2f57647f",
 InitializationCell->True],
Cell[32388, 680, 5637, 122, 330, "Input",ExpressionUUID->"40d8c022-e733-448f-97c5-9d177dc47b04",
 InitializationCell->True],
Cell[38028, 804, 11020, 242, 463, "Input",ExpressionUUID->"6d0217e7-9672-4e88-a0ad-dd1bf9208242",
 InitializationCell->True],
Cell[49051, 1048, 5063, 91, 292, "Input",ExpressionUUID->"6cec58c6-ff4b-4977-af6e-df52e0bbe039",
 InitializationCell->True],
Cell[54117, 1141, 4293, 81, 216, "Input",ExpressionUUID->"0f6761ad-a481-4e2a-93f0-d6a368dfd7ce",
 InitializationCell->True],
Cell[58413, 1224, 1407, 32, 121, "Input",ExpressionUUID->"b2eebb71-9534-4d77-afef-87a6c703b44c",
 InitializationCell->True],
Cell[59823, 1258, 11758, 269, 426, "Input",ExpressionUUID->"84a20f7c-7990-4cd1-bf60-04e8aff94deb",
 InitializationCell->True],
Cell[71584, 1529, 6058, 126, 368, "Input",ExpressionUUID->"ffc9aaef-33ee-40c8-8c53-608d48d53a2f",
 InitializationCell->True],
Cell[77645, 1657, 13375, 289, 970, "Input",ExpressionUUID->"318ccf82-990a-43a1-8a1f-b0344bf46071",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[91069, 1952, 299, 5, 53, "Section",ExpressionUUID->"0a3621f2-4fd5-4187-8124-40f5d8007737"],
Cell[91371, 1959, 551, 13, 28, "Input",ExpressionUUID->"53e21723-8545-4e64-894f-50359f2e6021"],
Cell[91925, 1974, 198, 4, 28, "Input",ExpressionUUID->"22500617-aab0-44aa-8f3d-b7f651716317"],
Cell[92126, 1980, 221, 3, 28, "Input",ExpressionUUID->"6130e175-67a5-4379-a0de-95d2a3b0e767"],
Cell[92350, 1985, 258, 4, 28, "Input",ExpressionUUID->"d3f50d38-dc7a-46b1-8e0c-85d8e7791b3e"],
Cell[92611, 1991, 276, 6, 28, "Input",ExpressionUUID->"2a61d9e6-f6a0-4a20-ae46-3c8c642d4796"],
Cell[92890, 1999, 511, 12, 28, "Input",ExpressionUUID->"210eabc9-439c-43cb-865d-d04155391c2a"],
Cell[93404, 2013, 282, 5, 28, "Input",ExpressionUUID->"166bef62-9826-4ac0-b0fe-f0faf8319f54"]
}, Open  ]]
}
]
*)

