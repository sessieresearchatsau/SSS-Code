(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     80095,       1781]
NotebookOptionsPosition[     77800,       1736]
NotebookOutlinePosition[     78201,       1752]
CellTagsIndexPosition[     78158,       1749]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"<<", " ", "Main`"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.812402879160028*^9, 3.8124028891528172`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"dd2009ee-0a7f-4db1-b0ba-6e9958338c38"],

Cell[BoxData["\<\"C:\\\\Users\\\\miroi\\\\SSS-Code\\\\Main\"\>"], "Output",
 CellChangeTimes->{
  3.8141090953334427`*^9, 3.8141092696323547`*^9, 3.8141096613236322`*^9, {
   3.8141097336030397`*^9, 3.8141097349483433`*^9}},
 CellLabel->"Out[3]=",ExpressionUUID->"fb04a5b9-8e0b-48b3-8f76-1214e3f810a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SSS Generation", "Title",
 CellChangeTimes->{{3.812402795173587*^9, 
  3.8124027968209596`*^9}},ExpressionUUID->"8082accd-718c-4a86-ad70-\
2d43e046f1bb"],

Cell["\<\
This file is the primary file from which you can generate and experiment with \
SSS objects.\
\>", "Text",
 CellChangeTimes->{{3.8124028038937736`*^9, 3.8124028076617765`*^9}, {
  3.8124029351300316`*^9, 3.8124029449466953`*^9}, {3.814109081895263*^9, 
  3.814109084775214*^9}},ExpressionUUID->"642929eb-ea4c-4f63-be0a-\
15e55333cb17"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"SSS", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<ABA\>\"", "\[Rule]", "\"\<AAB\>\""}], ",", 
      RowBox[{"\"\<A\>\"", "\[Rule]", "\"\<ABA\>\""}]}], "}"}], ",", " ", 
    "\"\<A\>\"", ",", "44", ",", 
    RowBox[{"SSSMax", "\[Rule]", "15"}], ",", 
    RowBox[{"NetMethod", "\[Rule]", "GraphPlot"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.814109087839899*^9, 3.8141091185481987`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"5e9ec938-dc67-4f80-a5b6-37bde4bc5fc1"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.814109095653516*^9, 3.814109122293056*^9}, 
   3.8141092759017663`*^9, 3.814109772686529*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"8f9a4fa6-2ee0-4371-8206-9df68d2ae110"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.814109383454524*^9, 
  3.814109415458626*^9}},ExpressionUUID->"b000b563-d58e-48a6-9251-\
a5b2690328fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "SSSDisplay"}]], "Input",
 CellChangeTimes->{{3.81410976541588*^9, 3.8141097799583*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"3fd5d132-46e6-4788-90c4-06b0b2841c01"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Main`SSSDisplay\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SSSDisplay", "[", 
                    RowBox[{"opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "HlM", ",", "mesh", ",", "IcS", ",", "ImS", ",", "SS", 
                    ",", "NS", ",", "RP", ",", "NM", ",", "doGP", ",", 
                    "doLGP", ",", "doTP", ",", "doGP3D", ",", "doSSS", ",", 
                    "myNet", ",", "ans", ",", "cellsToHighlight", ",", 
                    "rulesApplied", ",", "mx", ",", "netmx", ",", "sssmx", 
                    ",", "mn", ",", "netmn", ",", "sssmn", ",", "hs", ",", 
                    "start", ",", "ev", ",", "vrtxs", ",", "net", ",", "grph",
                     ",", "DE"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"HlM", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#1", "===", "True"}], ",", "Number", ",", "#1"}],
                     "]"}], "&"}], ")"}], "[", 
                    RowBox[{"OptionValue", "[", "HighlightMethod", "]"}], 
                    "]"}]}], ";", 
                    RowBox[{"RP", "=", 
                    RowBox[{"OptionValue", "[", "RulePlacement", "]"}]}], ";", 
                    RowBox[{"mesh", "=", 
                    RowBox[{"OptionValue", "[", "Mesh", "]"}]}], ";", 
                    RowBox[{"SS", "=", 
                    RowBox[{"OptionValue", "[", "SSSSize", "]"}]}], ";", 
                    RowBox[{"IcS", "=", 
                    RowBox[{"OptionValue", "[", "IconSize", "]"}]}], ";", 
                    RowBox[{"ImS", "=", 
                    RowBox[{"OptionValue", "[", "ImageSize", "]"}]}], ";", 
                    RowBox[{"NS", "=", 
                    RowBox[{"OptionValue", "[", "NetSize", "]"}]}], ";", 
                    RowBox[{"NM", "=", 
                    RowBox[{"OptionValue", "[", "NetMethod", "]"}]}], ";", 
                    RowBox[{"DE", "=", 
                    RowBox[{"OptionValue", "[", "DirectedEdges", "]"}]}], ";", 
                    RowBox[{"mx", "=", 
                    RowBox[{"OptionValue", "[", "Max", "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"mx", "===", "Automatic"}], ",", 
                    RowBox[{"mx", "=", "\[Infinity]"}]}], "]"}], ";", 
                    RowBox[{"sssmx", "=", 
                    RowBox[{"OptionValue", "[", "SSSMax", "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"sssmx", "===", "Automatic"}], ",", 
                    RowBox[{"sssmx", "=", "mx"}]}], "]"}], ";", 
                    RowBox[{"netmx", "=", 
                    RowBox[{"OptionValue", "[", "NetMax", "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"netmx", "===", "Automatic"}], ",", 
                    RowBox[{"netmx", "=", "mx"}]}], "]"}], ";", 
                    RowBox[{"mn", "=", 
                    RowBox[{"OptionValue", "[", "Min", "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"mn", "===", "Automatic"}], ",", 
                    RowBox[{"mn", "=", "1"}]}], "]"}], ";", 
                    RowBox[{"sssmn", "=", 
                    RowBox[{"OptionValue", "[", "SSSMin", "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"sssmn", "===", "Automatic"}], ",", 
                    RowBox[{"sssmn", "=", "mn"}]}], "]"}], ";", 
                    RowBox[{"netmn", "=", 
                    RowBox[{"OptionValue", "[", "NetMin", "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"netmn", "===", "Automatic"}], ",", 
                    RowBox[{"netmn", "=", "mn"}]}], "]"}], ";", 
                    RowBox[{"start", "=", "1"}], ";", 
                    RowBox[{"vrtxs", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Annotation", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{"VertexWeight", "\[Rule]", 
                    RowBox[{
                    "$SSSDistance", "\[LeftDoubleBracket]", "#1", 
                    "\[RightDoubleBracket]"}]}]}], "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"start", ",", "netmn"}], "]"}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{"netmx", ",", 
                    RowBox[{"Length", "[", "$SSSDistance", "]"}]}], "]"}]}], 
                    "]"}]}]}], ";", 
                    RowBox[{"net", "=", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"$SSSNet", ",", 
                    RowBox[{
                    RowBox[{"And", "@@", 
                    RowBox[{"Thread", "[", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"start", ",", "netmn"}], "]"}], "\[LessEqual]", 
                    RowBox[{"List", "@@", "#1"}], "\[LessEqual]", "netmx"}], 
                    "]"}]}], "&"}]}], "]"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"n_Integer", "\[RuleDelayed]", 
                    RowBox[{"n", "+", "1", "-", "start"}]}]}]}], ";", 
                    RowBox[{"grph", "=", 
                    RowBox[{"Graph", "[", 
                    RowBox[{"vrtxs", ",", "net", ",", 
                    RowBox[{"DirectedEdges", "\[Rule]", "DE"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"doGP", "=", 
                    RowBox[{"doLGP", "=", 
                    RowBox[{"doTP", "=", 
                    RowBox[{"doGP3D", "=", "False"}]}]}]}], ";", 
                    RowBox[{"doSSS", "=", "True"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"NM", ",", "All", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], "]"}], ",", 
                    RowBox[{"doGP", "=", 
                    RowBox[{"doLGP", "=", 
                    RowBox[{"doTP", "=", 
                    RowBox[{"doGP3D", "=", "True"}]}]}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"NM", ",", "GraphPlot", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], "]"}], ",", 
                    RowBox[{"doGP", "=", "True"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"NM", ",", "LayeredGraphPlot", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], "]"}], ",", 
                    RowBox[{"doLGP", "=", "True"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"NM", ",", "TreePlot", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], "]"}], ",", 
                    RowBox[{"doTP", "=", "True"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"NM", ",", "GraphPlot3D", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], "]"}], ",", 
                    RowBox[{"doGP3D", "=", "True"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"NM", ",", "NoSSS", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], "]"}], ",", 
                    RowBox[{"doSSS", "=", "False"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"$SSSVerdict", "\[Equal]", "\<\"Dead\"\>"}], ",", 
                    RowBox[{"doGP", "=", 
                    RowBox[{"doLGP", "=", 
                    RowBox[{"doTP", "=", 
                    RowBox[{"doGP3D", "=", "False"}]}]}]}]}], "]"}], ";", 
                    RowBox[{"cellsToHighlight", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"MapIndexed", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"#1", ",", 
                    RowBox[{
                    "#2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "}"}], "&"}], ",", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{"$SSSCellsDeleted", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"start", ",", "sssmn"}], "]"}], ";;", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"sssmx", ",", 
                    RowBox[{"Length", "[", "$SSSEvolution", "]"}]}], "]"}], 
                    "-", "1"}]}], "\[RightDoubleBracket]"}], "]"}], ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}]}], 
                    ";", 
                    RowBox[{"rulesApplied", "=", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{"$SSSRulesUsed", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"start", ",", "sssmn"}], "]"}], ";;", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"sssmx", ",", 
                    RowBox[{"Length", "[", "$SSSEvolution", "]"}]}], "]"}], 
                    "-", "1"}]}], "\[RightDoubleBracket]"}], "]"}]}], ";", 
                    RowBox[{"ans", "=", 
                    RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FromAlpha", "/@", 
                    RowBox[{"$SSSEvolution", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"start", ",", "sssmn"}], "]"}], ";;", 
                    RowBox[{"Min", "[", 
                    RowBox[{"sssmx", ",", 
                    RowBox[{"Length", "[", "$SSSEvolution", "]"}]}], "]"}]}], 
                    "\[RightDoubleBracket]"}]}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"0", "\[Rule]", "LightGray"}]}], ",", "myColors", 
                    ",", 
                    RowBox[{"Mesh", "\[Rule]", "mesh"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "SS"}], ",", 
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"Switch", "[", 
                    RowBox[{"HlM", ",", "Dot", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Disk", "[", 
                    RowBox[{
                    RowBox[{"#1", "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], ",", "0.18`"}],
                     "]"}], "&"}], ")"}], "/@", "cellsToHighlight"}], ",", 
                    "Frame", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
                    RowBox[{"FaceForm", "[", "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Rectangle", "[", 
                    RowBox[{"#1", "-", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "]"}], "&"}], ")"}], "/@",
                     "cellsToHighlight"}]}], "}"}], ",", "Number", ",", 
                    RowBox[{"Apply", "[", 
                    RowBox[{"Text", ",", 
                    RowBox[{"cellsToHighlight", "/.", "\[VeryThinSpace]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x_Integer", ",", "y_Integer"}], "}"}], 
                    "\[RuleDelayed]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "rulesApplied", "\[LeftDoubleBracket]", "y", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}]}], "}"}]}]}], 
                    ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}], ",", "_", ",", 
                    RowBox[{"{", "}"}]}], "]"}]}]}], "]"}]}], ";", 
                    RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", "doSSS"}], ",", 
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"Pane", "[", 
                    RowBox[{
                    RowBox[{"Switch", "[", 
                    RowBox[{"RP", ",", "Right", ",", 
                    RowBox[{"Grid", "[", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"ans", ",", 
                    RowBox[{"SSSRuleIcon", "[", 
                    RowBox[{"$SSSRuleSet", ",", 
                    RowBox[{"ImageSize", "\[Rule]", "IcS"}]}], "]"}]}], "}"}],
                     "}"}], "]"}], ",", "Left", ",", 
                    RowBox[{"Grid", "[", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"SSSRuleIcon", "[", 
                    RowBox[{"$SSSRuleSet", ",", 
                    RowBox[{"ImageSize", "\[Rule]", "IcS"}]}], "]"}], ",", 
                    "ans"}], "}"}], "}"}], "]"}], ",", 
                    RowBox[{"Bottom", "|", "True"}], ",", 
                    RowBox[{"Grid", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "ans", "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"SSSRuleIcon", "[", 
                    RowBox[{"$SSSRuleSet", ",", 
                    RowBox[{"ImageSize", "\[Rule]", "IcS"}]}], "]"}], "}"}]}],
                     "}"}], "]"}], ",", "Top", ",", 
                    RowBox[{"Grid", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"SSSRuleIcon", "[", 
                    RowBox[{"$SSSRuleSet", ",", 
                    RowBox[{"ImageSize", "\[Rule]", "IcS"}]}], "]"}], "}"}], 
                    ",", 
                    RowBox[{"{", "ans", "}"}]}], "}"}], "]"}], ",", "_", ",", 
                    "ans"}], "]"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "ImS"}], ",", 
                    RowBox[{
                    "ImageSizeAction", "\[Rule]", "\<\"ShrinkToFit\"\>"}]}], 
                    "]"}]}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{"doGP", ",", 
                    RowBox[{"GraphPlot", "[", 
                    RowBox[{"grph", ",", 
                    RowBox[{
                    "GraphLayout", 
                    "\[Rule]", "\<\"SpringElectricalEmbedding\"\>"}], ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ImageSize", "\[Rule]", "NS"}], ",", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"{", "opts", "}"}], ",", 
                    RowBox[{"Options", "[", "GraphPlot", "]"}]}], "]"}], ",", 
                    RowBox[{"VertexSize", "\[Rule]", "Large"}], ",", 
                    RowBox[{"VertexLabels", "\[Rule]", 
                    RowBox[{"Placed", "[", 
                    RowBox[{"Automatic", ",", "Center"}], "]"}]}]}], "}"}], 
                    "]"}]}]}], "]"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{"doLGP", ",", 
                    RowBox[{"LayeredGraphPlot", "[", 
                    RowBox[{"grph", ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ImageSize", "\[Rule]", "NS"}], ",", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"{", "opts", "}"}], ",", 
                    RowBox[{"Options", "[", "LayeredGraphPlot", "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"VertexSize", "\[Rule]", "Large"}], ",", 
                    RowBox[{"VertexLabels", "\[Rule]", 
                    RowBox[{"Placed", "[", 
                    RowBox[{"Automatic", ",", "Center"}], "]"}]}]}], "}"}], 
                    "]"}]}]}], "]"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{"doTP", ",", 
                    RowBox[{"TreePlot", "[", 
                    RowBox[{"grph", ",", "Top", ",", "1", ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ImageSize", "\[Rule]", "NS"}], ",", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"{", "opts", "}"}], ",", 
                    RowBox[{"Options", "[", "TreePlot", "]"}]}], "]"}], ",", 
                    RowBox[{"VertexSize", "\[Rule]", "Large"}], ",", 
                    RowBox[{"VertexLabels", "\[Rule]", 
                    RowBox[{"Placed", "[", 
                    RowBox[{"Automatic", ",", "Center"}], "]"}]}], ",", 
                    RowBox[{"DirectedEdges", "\[Rule]", "True"}]}], "}"}], 
                    "]"}]}]}], "]"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{"doGP3D", ",", 
                    RowBox[{"GraphPlot3D", "[", 
                    RowBox[{"grph", ",", 
                    RowBox[{
                    "GraphLayout", 
                    "\[Rule]", "\<\"SpringElectricalEmbedding\"\>"}], ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ImageSize", "\[Rule]", "NS"}], ",", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"{", "opts", "}"}], ",", 
                    RowBox[{"Options", "[", "GraphPlot3D", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"VertexSize", "\[Rule]", "Large"}], ",", 
                    RowBox[{"VertexLabels", "\[Rule]", 
                    RowBox[{"Placed", "[", 
                    RowBox[{"Automatic", ",", "Center"}], "]"}]}]}], "}"}], 
                    "]"}]}]}], "]"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], "}"}], "]"}], 
                    ",", "\<\"  \"\>"}], "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "SSSDisplay", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"OptionsPattern", "[", "]"}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[Main`SSSDisplay] = {"ArgumentsPattern" -> {
                    OptionsPattern[]}}}],
                    Editable->False]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"HighlightMethod", "\[Rule]", "True"}]},
                    {
                    RowBox[{"RulePlacement", "\[Rule]", "Bottom"}]},
                    {
                    RowBox[{"Mesh", "\[Rule]", "True"}]},
                    {
                    RowBox[{"NetSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "400"}], "}"}]}]},
                    {
                    RowBox[{"SSSSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "300"}], "}"}]}]},
                    {
                    RowBox[{"IconSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "20"}], "}"}]}]},
                    {
                    RowBox[{"ImageSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"NetMethod", "\[Rule]", "GraphPlot"}]},
                    {
                    RowBox[{"Max", "\[Rule]", "\[Infinity]"}]},
                    {
                    RowBox[{"SSSMax", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"NetMax", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Min", "\[Rule]", "1"}]},
                    {
                    RowBox[{"SSSMin", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"NetMin", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}]},
                    {
                    RowBox[{"AnnotationRules", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AutomaticImageSize", "\[Rule]", "False"}]},
                    {
                    RowBox[{"Axes", "\[Rule]", "False"}]},
                    {
                    RowBox[{"AxesEdge", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Background", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Boxed", "\[Rule]", "False"}]},
                    {
                    RowBox[{"BoxRatios", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BoxStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ClipPlanes", "\[Rule]", "None"}]},
                    {
                    RowBox[{"ClipPlanesStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorOutput", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ControllerLinking", "\[Rule]", "False"}]},
                    {
                    RowBox[{"ControllerMethod", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ControllerPath", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "CoordinatesToolOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"DataRange", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"DirectedEdges", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"DirectedEdges", "\[Rule]", "False"}]},
                    {
                    RowBox[{"EdgeCapacity", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EdgeCost", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EdgeLabels", "\[Rule]", "None"}]},
                    {
                    RowBox[{"EdgeLabelStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EdgeShapeFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EdgeStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EdgeWeight", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Editable", "\[Rule]", "False"}]},
                    {
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"FaceGrids", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FaceGridsStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"FormatType", "\[Rule]", "TraditionalForm"}]},
                    {
                    RowBox[{"Frame", "\[Rule]", "False"}]},
                    {
                    RowBox[{"FrameLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"FrameTicks", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameTicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"GraphHighlight", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"GraphHighlightStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"GraphLayout", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"GraphRoot", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"GraphStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"GridLines", "\[Rule]", "None"}]},
                    {
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ImageMargins", "\[Rule]", "0.`"}]},
                    {
                    RowBox[{"ImagePadding", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ImageSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"LayerSizeFunction", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{"1", "&"}], ")"}]}]},
                    {
                    RowBox[{"Lighting", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"MultiedgeStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PackingMethod", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PerformanceGoal", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotRange", "\[Rule]", "All"}]},
                    {
                    RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]},
                    {
                    RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotTheme", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PreserveImageOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Prolog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Properties", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"RotateLabel", "\[Rule]", "True"}]},
                    {
                    RowBox[{"RotationAction", "\[Rule]", "Fit"}]},
                    {
                    RowBox[{"SelfLoopStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"SphericalRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Ticks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"TouchscreenAutoZoom", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"VertexCapacity", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"VertexCoordinates", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"VertexLabels", "\[Rule]", "None"}]},
                    {
                    RowBox[{"VertexLabelStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"VertexShape", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"VertexShapeFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"VertexSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"VertexStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"VertexWeight", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ViewAngle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ViewCenter", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ViewMatrix", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ViewPoint", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1.3`", ",", 
                    RowBox[{"-", "2.4`"}], ",", "2.`"}], "}"}]}]},
                    {
                    RowBox[{"ViewProjection", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ViewRange", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ViewVector", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ViewVertical", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]},
                    {
                    RowBox[{
                    "DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "110", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"HighlightMethod", "\[Rule]", "True"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "110", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Main`SSSDisplay\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Main`SSSDisplay\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> "Main`SSSDisplay", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Main`SSSDisplay, {Main`SSSDisplay[
         Pattern[Main`opts, 
          OptionsPattern[]]] :> 
       Module[{Main`HlM, Main`mesh, Main`IcS, Main`ImS, Main`SS, Main`NS, 
          Main`RP, Main`NM, Main`doGP, Main`doLGP, Main`doTP, Main`doGP3D, 
          Main`doSSS, Main`myNet, Main`ans, Main`cellsToHighlight, 
          Main`rulesApplied, Main`mx, Main`netmx, Main`sssmx, Main`mn, 
          Main`netmn, Main`sssmn, Main`hs, Main`start, Main`ev, Main`vrtxs, 
          Main`net, Main`grph, Main`DE}, 
         Main`HlM = (If[# === True, Number, #]& )[
            OptionValue[Main`HighlightMethod]]; 
         Main`RP = OptionValue[Main`RulePlacement]; 
         Main`mesh = OptionValue[Mesh]; Main`SS = OptionValue[Main`SSSSize]; 
         Main`IcS = OptionValue[Main`IconSize]; 
         Main`ImS = OptionValue[ImageSize]; 
         Main`NS = OptionValue[Main`NetSize]; 
         Main`NM = OptionValue[Main`NetMethod]; 
         Main`DE = OptionValue[DirectedEdges]; Main`mx = OptionValue[Max]; 
         If[Main`mx === Automatic, Main`mx = Infinity]; 
         Main`sssmx = OptionValue[Main`SSSMax]; 
         If[Main`sssmx === Automatic, Main`sssmx = Main`mx]; 
         Main`netmx = OptionValue[Main`NetMax]; 
         If[Main`netmx === Automatic, Main`netmx = Main`mx]; 
         Main`mn = OptionValue[Min]; If[Main`mn === Automatic, Main`mn = 1]; 
         Main`sssmn = OptionValue[Main`SSSMin]; 
         If[Main`sssmn === Automatic, Main`sssmn = Main`mn]; 
         Main`netmn = OptionValue[Main`NetMin]; 
         If[Main`netmn === Automatic, Main`netmn = Main`mn]; Main`start = 1; 
         Main`vrtxs = 
          Map[Annotation[#, VertexWeight -> Part[Main`$SSSDistance, #]]& , 
            Range[
             Max[Main`start, Main`netmn], 
             Min[Main`netmx, 
              Length[Main`$SSSDistance]]]]; Main`net = ReplaceAll[
            Select[Main`$SSSNet, Apply[And, 
              Thread[
              Max[Main`start, Main`netmn] <= Apply[List, #] <= 
               Main`netmx]]& ], Pattern[Main`n, 
              Blank[Integer]] :> Main`n + 1 - Main`start]; 
         Main`grph = Graph[Main`vrtxs, Main`net, DirectedEdges -> Main`DE]; 
         Main`doGP = (Main`doLGP = (Main`doTP = (Main`doGP3D = False))); 
         Main`doSSS = True; If[
           MemberQ[Main`NM, All, {0, Infinity}], 
           Main`doGP = (Main`doLGP = (Main`doTP = (Main`doGP3D = True)))]; If[
           MemberQ[Main`NM, GraphPlot, {0, Infinity}], Main`doGP = True]; If[
           MemberQ[Main`NM, LayeredGraphPlot, {0, Infinity}], Main`doLGP = 
           True]; If[
           MemberQ[Main`NM, TreePlot, {0, Infinity}], Main`doTP = True]; If[
           MemberQ[Main`NM, GraphPlot3D, {0, Infinity}], Main`doGP3D = True]; 
         If[
           MemberQ[Main`NM, Main`NoSSS, {0, Infinity}], Main`doSSS = False]; 
         If[Main`$SSSVerdict == "Dead", 
           Main`doGP = (Main`doLGP = (Main`doTP = (Main`doGP3D = False)))]; 
         Main`cellsToHighlight = Flatten[
            MapIndexed[{#, 
              Part[#2, 1]}& , 
             Reverse[
              Part[Main`$SSSCellsDeleted, 
               Span[
                Max[Main`start, Main`sssmn], Min[Main`sssmx, 
                  Length[Main`$SSSEvolution]] - 1]]], {2}], 1]; 
         Main`rulesApplied = Reverse[
            Part[Main`$SSSRulesUsed, 
             Span[
              Max[Main`start, Main`sssmn], Min[Main`sssmx, 
                Length[Main`$SSSEvolution]] - 1]]]; Main`ans = ArrayPlot[
            ReplaceAll[
             Map[Main`FromAlpha, 
              Part[Main`$SSSEvolution, 
               Span[
                Max[Main`start, Main`sssmn], 
                Min[Main`sssmx, 
                 Length[Main`$SSSEvolution]]]]], 0 -> LightGray], 
            Main`myColors, Mesh -> Main`mesh, ImageSize -> Main`SS, Epilog -> 
            Switch[Main`HlM, Dot, 
              Map[Disk[# + 0.5 {-1, 1}, 0.18]& , Main`cellsToHighlight], 
              Frame, {
               EdgeForm[Thick], 
               FaceForm[], 
               Map[Rectangle[# - {1, 0}]& , Main`cellsToHighlight]}, Number, 
              Apply[Text, 
               ReplaceAll[Main`cellsToHighlight, {
                  Pattern[Main`x, 
                   Blank[Integer]], 
                  Pattern[Main`y, 
                   Blank[Integer]]} :> {
                  Part[Main`rulesApplied, Main`y], {Main`x, Main`y} + 
                  0.5 {-1, 1}}], {1}], 
              Blank[], {}]]; Row[
           Flatten[{
             If[
              Not[Main`doSSS], {}, 
              Pane[
               Switch[Main`RP, Right, 
                Grid[{{Main`ans, 
                   Main`SSSRuleIcon[
                   Main`$SSSRuleSet, ImageSize -> Main`IcS]}}], Left, 
                Grid[{{
                   Main`SSSRuleIcon[Main`$SSSRuleSet, ImageSize -> Main`IcS], 
                   Main`ans}}], 
                Alternatives[Bottom, True], 
                Grid[{{Main`ans}, {
                   Main`SSSRuleIcon[
                   Main`$SSSRuleSet, ImageSize -> Main`IcS]}}], Top, 
                Grid[{{
                   Main`SSSRuleIcon[
                   Main`$SSSRuleSet, ImageSize -> Main`IcS]}, {Main`ans}}], 
                Blank[], Main`ans], ImageSize -> Main`ImS, ImageSizeAction -> 
               "ShrinkToFit"]], 
             If[Main`doGP, 
              GraphPlot[Main`grph, GraphLayout -> "SpringElectricalEmbedding", 
               Apply[Sequence, 
                Flatten[{ImageSize -> Main`NS, 
                  FilterRules[{Main`opts}, 
                   Options[GraphPlot]], VertexSize -> Large, VertexLabels -> 
                  Placed[Automatic, Center]}]]], {}], 
             If[Main`doLGP, 
              LayeredGraphPlot[Main`grph, 
               Apply[Sequence, 
                Flatten[{ImageSize -> Main`NS, 
                  FilterRules[{Main`opts}, 
                   Options[LayeredGraphPlot]], VertexSize -> Large, 
                  VertexLabels -> Placed[Automatic, Center]}]]], {}], 
             If[Main`doTP, 
              TreePlot[Main`grph, Top, 1, 
               Apply[Sequence, 
                Flatten[{ImageSize -> Main`NS, 
                  FilterRules[{Main`opts}, 
                   Options[TreePlot]], VertexSize -> Large, VertexLabels -> 
                  Placed[Automatic, Center], DirectedEdges -> True}]]], {}], 
             If[Main`doGP3D, 
              GraphPlot3D[
              Main`grph, GraphLayout -> "SpringElectricalEmbedding", 
               Apply[Sequence, 
                Flatten[{ImageSize -> Main`NS, 
                  FilterRules[{Main`opts}, 
                   Options[GraphPlot3D]], VertexSize -> Large, VertexLabels -> 
                  Placed[Automatic, Center]}]]], {}]}], "  "]]}], "SubValues" -> 
    None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, Main`SSSDisplay, {
      SyntaxInformation[Main`SSSDisplay] -> {"ArgumentsPattern" -> {
           OptionsPattern[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     Main`HighlightMethod -> True, Main`RulePlacement -> Bottom, Mesh -> True,
       Main`NetSize -> {Automatic, 400}, Main`SSSSize -> {Automatic, 300}, 
      Main`IconSize -> {Automatic, 20}, ImageSize -> Automatic, 
      Main`NetMethod -> GraphPlot, Max -> DirectedInfinity[1], Main`SSSMax -> 
      Automatic, Main`NetMax -> Automatic, Min -> 1, Main`SSSMin -> Automatic,
       Main`NetMin -> Automatic, AlignmentPoint -> Center, 
      AnnotationRules -> {}, AspectRatio -> Automatic, AutomaticImageSize -> 
      False, Axes -> False, AxesEdge -> Automatic, AxesLabel -> None, 
      AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, 
      BaselinePosition -> Automatic, BaseStyle -> {}, Boxed -> False, 
      BoxRatios -> Automatic, BoxStyle -> {}, ClipPlanes -> None, 
      ClipPlanesStyle -> Automatic, ColorOutput -> Automatic, 
      ContentSelectable -> Automatic, ControllerLinking -> False, 
      ControllerMethod -> Automatic, ControllerPath -> Automatic, 
      CoordinatesToolOptions -> Automatic, DataRange -> Automatic, 
      DirectedEdges -> Automatic, DirectedEdges -> False, EdgeCapacity -> 
      Automatic, EdgeCost -> Automatic, EdgeLabels -> None, EdgeLabelStyle -> 
      Automatic, EdgeShapeFunction -> Automatic, EdgeStyle -> Automatic, 
      EdgeWeight -> Automatic, Editable -> False, Epilog -> {}, FaceGrids -> 
      None, FaceGridsStyle -> {}, FormatType -> TraditionalForm, Frame -> 
      False, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> None, 
      FrameTicksStyle -> {}, GraphHighlight -> {}, GraphHighlightStyle -> 
      Automatic, GraphLayout -> Automatic, GraphRoot -> Automatic, GraphStyle -> 
      Automatic, GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., 
      ImagePadding -> All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, 
      LabelStyle -> {}, LayerSizeFunction -> (1& ), Lighting -> Automatic, 
      Method -> Automatic, MultiedgeStyle -> Automatic, PackingMethod -> 
      Automatic, PerformanceGoal -> Automatic, PlotLabel -> None, PlotRange -> 
      All, PlotRangeClipping -> False, PlotRangePadding -> Automatic, 
      PlotRegion -> Automatic, PlotStyle -> Automatic, PlotTheme -> Automatic,
       PreserveImageOptions -> Automatic, Prolog -> {}, Properties -> {}, 
      RotateLabel -> True, RotationAction -> Fit, SelfLoopStyle -> Automatic, 
      SphericalRegion -> Automatic, Ticks -> Automatic, TicksStyle -> {}, 
      TouchscreenAutoZoom -> Automatic, VertexCapacity -> Automatic, 
      VertexCoordinates -> Automatic, VertexLabels -> None, VertexLabelStyle -> 
      Automatic, VertexShape -> Automatic, VertexShapeFunction -> Automatic, 
      VertexSize -> Automatic, VertexStyle -> Automatic, VertexWeight -> 
      Automatic, ViewAngle -> Automatic, ViewCenter -> Automatic, ViewMatrix -> 
      Automatic, ViewPoint -> {1.3, -2.4, 2.}, ViewProjection -> Automatic, 
      ViewRange -> All, ViewVector -> Automatic, ViewVertical -> {0, 0, 1}, 
      DisplayFunction :> $DisplayFunction}, "Attributes" -> {}, "FullName" -> 
    "Main`SSSDisplay"], False]]], "Output",
 CellChangeTimes->{3.8141097805924425`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"9053605f-22dc-491c-ac41-ccef7d706822"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "SSSEvolve"}]], "Input",
 CellChangeTimes->{{3.814109784130127*^9, 3.814109790169516*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"152ec1fe-746c-4dd2-81d4-648900791e95"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"SSSEvolve[\\!\\(\\*\\nStyleBox[\\\"n\\\",\\\
nFontSlant->\\\"Italic\\\"]\\)] generates an additional \\!\\(\\*\\nStyleBox[\
\\\"n\\\",\\nFontSlant->\\\"Italic\\\"]\\) levels of the \
\\!\\(\\*\\nStyleBox[\\\"current\\\",\\nFontSlant->\\\"Plain\\\"]\\)\\!\\(\\*\
\\nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Plain\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"SSS\\\",\\\
nFontSlant->\\\"Plain\\\"]\\)\\!\\(\\*\\nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Plain\\\"]\\)(sequential substitution system), \
\\n\\t\\t\\t\\t\\twhich must have been previously initialized using \
SSSInitialize.  Use the option EarlyReturn \[Rule] True \\n\\t\\t\\t\\t\\tto \
allow early termination for repeating cases.  (SSSSinglestep immediately \
returns anyway if the SSS \\n\\t\\t\\t\\t\\tis dead.)  In Loud mode, prints \
the current verdict, \\\"OK\\\" means none known.  Global variables set \
\\n\\t\\t\\t\\t\\tup by SSSInitialize are updated, with $SSSEvolution \
containing the tagless SSS, $SSSConnectionList \\n\\t\\t\\t\\t\\tthe updated \
causal network connection list, etc.  mode can be Silent, Quiet, or \
Loud.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SSSEvolve", "[", 
                    RowBox[{
                    RowBox[{"n_Integer", "/;", 
                    RowBox[{"n", ">", "0"}]}], ",", 
                    RowBox[{"opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "EarlyReturn", "]"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"$SSSVerdict", ",", 
                    RowBox[{"\<\"Dead\"\>", "|", "\<\"Repeating\"\>"}]}], 
                    "]"}], ",", 
                    RowBox[{"Break", "[", "]"}], ",", "SSSSingleStep"}], 
                    "]"}], ",", 
                    RowBox[{"{", "n", "}"}]}], "]"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{"SSSSingleStep", ",", 
                    RowBox[{"{", "n", "}"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"OptionValue", "[", "Mode", "]"}], "\[Equal]", 
                    "Loud"}], ",", 
                    RowBox[{"Print", "[", "$SSSVerdict", "]"}]}], "]"}], ";", 
                    "True"}], ")"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "SSSEvolve", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"OptionsPattern", "[", "]"}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[Main`SSSEvolve] = {"ArgumentsPattern" -> {
                    OptionsPattern[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EarlyReturn", "\[Rule]", "False"}], ",", 
                    RowBox[{"Mode", "\[Rule]", "Silent"}]}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Main`SSSEvolve\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"SSSEvolve[\\!\\(\\*\\nStyleBox[\\\"n\\\",\\\
nFontSlant->\\\"Italic\\\"]\\)] generates an additional \\!\\(\\*\\nStyleBox[\
\\\"n\\\",\\nFontSlant->\\\"Italic\\\"]\\) levels of the \
\\!\\(\\*\\nStyleBox[\\\"current\\\",\\nFontSlant->\\\"Plain\\\"]\\)\\!\\(\\*\
\\nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Plain\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"SSS\\\",\\\
nFontSlant->\\\"Plain\\\"]\\)\\!\\(\\*\\nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Plain\\\"]\\)(sequential substitution system), \
\\n\\t\\t\\t\\t\\twhich must have been previously initialized using \
SSSInitialize.  Use the option EarlyReturn \[Rule] True \\n\\t\\t\\t\\t\\tto \
allow early termination for repeating cases.  (SSSSinglestep immediately \
returns anyway if the SSS \\n\\t\\t\\t\\t\\tis dead.)  In Loud mode, prints \
the current verdict, \\\"OK\\\" means none known.  Global variables set \
\\n\\t\\t\\t\\t\\tup by SSSInitialize are updated, with $SSSEvolution \
containing the tagless SSS, $SSSConnectionList \\n\\t\\t\\t\\t\\tthe updated \
causal network connection list, etc.  mode can be Silent, Quiet, or \
Loud.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "SSSEvolve[\!\(\*\nStyleBox[\"n\",\nFontSlant->\"Italic\"]\)] generates \
an additional \!\(\*\nStyleBox[\"n\",\nFontSlant->\"Italic\"]\) levels of the \
\!\(\*\nStyleBox[\"current\",\nFontSlant->\"Plain\"]\)\!\(\*\nStyleBox[\" \",\
\nFontSlant->\"Plain\"]\)\!\(\*\nStyleBox[\"SSS\",\nFontSlant->\"Plain\"]\)\!\
\(\*\nStyleBox[\" \",\nFontSlant->\"Plain\"]\)(sequential substitution \
system), \n\t\t\t\t\twhich must have been previously initialized using \
SSSInitialize.  Use the option EarlyReturn \[Rule] True \n\t\t\t\t\tto allow \
early termination for repeating cases.  (SSSSinglestep immediately returns \
anyway if the SSS \n\t\t\t\t\tis dead.)  In Loud mode, prints the current \
verdict, \"OK\" means none known.  Global variables set \n\t\t\t\t\tup by \
SSSInitialize are updated, with $SSSEvolution containing the tagless SSS, \
$SSSConnectionList \n\t\t\t\t\tthe updated causal network connection list, \
etc.  mode can be Silent, Quiet, or Loud.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Main`SSSEvolve, {Main`SSSEvolve[
         Condition[
          Pattern[Main`n, 
           Blank[Integer]], Main`n > 0], 
         Pattern[Main`opts, 
          OptionsPattern[]]] :> (If[
          OptionValue[Main`EarlyReturn], 
          Do[
           If[
            MatchQ[Main`$SSSVerdict, 
             Alternatives["Dead", "Repeating"]], 
            Break[], Main`SSSSingleStep], {Main`n}], 
          Do[Main`SSSSingleStep, {Main`n}]]; 
        If[OptionValue[Mode] == Main`Loud, 
          Print[Main`$SSSVerdict]]; True)}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, Main`SSSEvolve, {
      SyntaxInformation[Main`SSSEvolve] -> {"ArgumentsPattern" -> {
           OptionsPattern[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {Main`EarlyReturn -> False, Mode -> Main`Silent}, 
    "Attributes" -> {}, "FullName" -> "Main`SSSEvolve"], False]]], "Output",
 CellChangeTimes->{3.8141097913457813`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"313c6c61-27fe-4f73-aedd-891cc3b46d80"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SSSInitialize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<\>\"", " ", "\[Rule]", " ", "\"\<A\>\""}], "}"}], ",", 
   "\"\<\>\""}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.8141098029454737`*^9, 3.814109855136939*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"68a3eace-8fab-4ed5-a8ba-a7ea1f3fcb19"],

Cell[BoxData[
 TemplateBox[{
  "AppendTo", "rvalue", 
   "\"\\!\\(\\*RowBox[{\\\"$SSSConnectionList\\\"}]\\) is not a variable with \
a value, so its value cannot be changed.\"", 2, 8, 25, 29085185557072052696, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8141098584002314`*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"4b2f6930-65d7-439e-a12a-1f3971bc14db"],

Cell[BoxData[
 TemplateBox[{
  "Increment", "rvalue", 
   "\"\\!\\(\\*RowBox[{\\\"$SSSTagIndex\\\"}]\\) is not a variable with a \
value, so its value cannot be changed.\"", 2, 8, 26, 29085185557072052696, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8141098584112253`*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"36325ff0-379d-410d-96b6-9e7966f23ed1"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) does not exist.\"", 2, 8, 27, 
   29085185557072052696, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.814109858418236*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"ed01d145-657e-4559-9b3f-5445c5697dda"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) does not exist.\"", 2, 8, 28, 
   29085185557072052696, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8141098584272375`*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"e9da7e58-6ae0-461e-90b3-4cd9a23d410c"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) does not exist.\"", 2, 8, 29, 
   29085185557072052696, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.814109858434239*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"fa97d5ba-4408-45bb-9ab3-503890ec661e"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 8, 30, 29085185557072052696, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8141098584412403`*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"dab16637-756a-4d49-92a3-bcf644e2faad"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.814109858451234*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"f19524e6-6d16-47ee-b1ff-97c17d73b7c2"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1076, 621},
WindowMargins->{{Automatic, 219}, {Automatic, 144}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"cc65e3d7-263c-4d07-b086-918ba339906a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 334, 6, 64, "Input",ExpressionUUID->"dd2009ee-0a7f-4db1-b0ba-6e9958338c38",
 InitializationCell->True],
Cell[917, 30, 302, 4, 32, "Output",ExpressionUUID->"fb04a5b9-8e0b-48b3-8f76-1214e3f810a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1256, 39, 159, 3, 96, "Title",ExpressionUUID->"8082accd-718c-4a86-ad70-2d43e046f1bb"],
Cell[1418, 44, 345, 7, 34, "Text",ExpressionUUID->"642929eb-ea4c-4f63-be0a-15e55333cb17"],
Cell[CellGroupData[{
Cell[1788, 55, 550, 12, 48, "Input",ExpressionUUID->"5e9ec938-dc67-4f80-a5b6-37bde4bc5fc1"],
Cell[2341, 69, 229, 3, 32, "Output",ExpressionUUID->"8f9a4fa6-2ee0-4371-8206-9df68d2ae110"]
}, Open  ]],
Cell[2585, 75, 152, 3, 28, "Input",ExpressionUUID->"b000b563-d58e-48a6-9251-a5b2690328fe"],
Cell[CellGroupData[{
Cell[2762, 82, 194, 3, 28, "Input",ExpressionUUID->"3fd5d132-46e6-4788-90c4-06b0b2841c01"],
Cell[2959, 87, 55549, 1186, 195, "Output",ExpressionUUID->"9053605f-22dc-491c-ac41-ccef7d706822"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58545, 1278, 196, 3, 28, "Input",ExpressionUUID->"152ec1fe-746c-4dd2-81d4-648900791e95"],
Cell[58744, 1283, 16006, 361, 213, "Output",ExpressionUUID->"313c6c61-27fe-4f73-aedd-891cc3b46d80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74787, 1649, 331, 7, 28, "Input",ExpressionUUID->"68a3eace-8fab-4ed5-a8ba-a7ea1f3fcb19"],
Cell[75121, 1658, 413, 10, 21, "Message",ExpressionUUID->"4b2f6930-65d7-439e-a12a-1f3971bc14db"],
Cell[75537, 1670, 408, 10, 21, "Message",ExpressionUUID->"36325ff0-379d-410d-96b6-9e7966f23ed1"],
Cell[75948, 1682, 403, 10, 23, "Message",ExpressionUUID->"ed01d145-657e-4559-9b3f-5445c5697dda"],
Cell[76354, 1694, 405, 10, 23, "Message",ExpressionUUID->"e9da7e58-6ae0-461e-90b3-4cd9a23d410c"],
Cell[76762, 1706, 403, 10, 23, "Message",ExpressionUUID->"fa97d5ba-4408-45bb-9ab3-503890ec661e"],
Cell[77168, 1718, 450, 10, 21, "Message",ExpressionUUID->"dab16637-756a-4d49-92a3-bcf644e2faad"],
Cell[77621, 1730, 151, 2, 32, "Output",ExpressionUUID->"f19524e6-6d16-47ee-b1ff-97c17d73b7c2"]
}, Open  ]]
}, Open  ]]
}
]
*)

