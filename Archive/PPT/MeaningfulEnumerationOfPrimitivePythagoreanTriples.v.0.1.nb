(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    162671,       3707]
NotebookOptionsPosition[    150232,       3461]
NotebookOutlinePosition[    154764,       3562]
CellTagsIndexPosition[    154092,       3540]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["A Meaningful Enumeration of Primitive Pythagorean Triples", "Title",
 CellChangeTimes->{3.906647532905538*^9, 3.907171533678844*^9, 
  3.9071715662438927`*^9, 3.907176173409182*^9, 
  3.909346226639324*^9},ExpressionUUID->"b9e6fe14-67c5-4f7d-9ec0-\
13c361826e91"],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization Code",
 StyleBox[" (optional) ", "SectionGloss"],
 Cell[BoxData[
  TemplateBox[{"Initialization Code", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{"Provide any code that must be evaluated before the ", 
          StyleBox["Manipulate", "MRbig"], 
          ". This will automatically be built into the ", 
          StyleBox["Manipulate", "MRbig"], 
          " in the final notebook version. Never use a package that is not \
included in the default distribution of ", 
          StyleBox["Mathematica", FontSlant -> "Italic"], 
          ". To use a package, use the ", 
          StyleBox["Initialization", "MRbig"], " option (with ", 
          StyleBox["Get", "MRbig"], ", not ", 
          StyleBox["Needs", "MRbig"], ") in the ", 
          StyleBox["Manipulate", "MRbig"], 
          " itself, and use the full name of the function from the package. \
For example:\n", 
          StyleBox[
          "  Manipulate[\n  ...\n  ComputationalGeometry`ConvexHull[...]...\n \
 ...\n  Initialization :> Get[\"ComputationalGeometry`\"],\n  ...\n  ]", 
           "MR"], "\nIf you provide initialization code, include a ", 
          StyleBox["SaveDefinitions->True", "MRbig"], " option in the ", 
          StyleBox["Manipulate", "MRbig"], ".", 
          StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "81fde376-e763-44cf-83ed-5c52ec315067"]
}], "InitializationSection",
 CellTags->
  "Initialization \
Code",ExpressionUUID->"1d34a731-8c48-4189-8b6f-89ef5777db9f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tri", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", "2"}], ")"}], "n", 
   RowBox[{"(", 
    RowBox[{"1", "+", "n"}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8764938145563536`*^9, 3.876493822006153*^9}, {
   3.87649396024522*^9, 3.8764939775174074`*^9}, {3.883749062895033*^9, 
   3.8837491220194063`*^9}, {3.8837491940991306`*^9, 
   3.8837492030805798`*^9}, {3.8837492351742945`*^9, 3.8837492633468266`*^9}, 
   3.8837493025462055`*^9, {3.883754025603574*^9, 3.883754026024639*^9}, {
   3.9062145649356213`*^9, 3.906214662724083*^9}, 3.906563280874822*^9, {
   3.9071715801661663`*^9, 3.907171613839435*^9}},
 CellLabel->"In[1]:=",
 CellID->595364008,ExpressionUUID->"12a3e6a1-9866-4675-80f6-4a96df158b9e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"invTri", "[", "x_Integer", "]"}], ":=", 
  RowBox[{"Ceiling", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "2"}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"1", "+", 
        RowBox[{"8", "x"}]}], "]"}]}], ")"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8764938145563536`*^9, 3.876493822006153*^9}, {
   3.87649396024522*^9, 3.8764939775174074`*^9}, {3.883749062895033*^9, 
   3.8837491220194063`*^9}, {3.8837491940991306`*^9, 
   3.8837492030805798`*^9}, {3.8837492351742945`*^9, 3.8837492633468266`*^9}, 
   3.8837493025462055`*^9, {3.883754025603574*^9, 3.883754026024639*^9}, {
   3.9062145649356213`*^9, 3.906214662724083*^9}, 3.906563280874822*^9, {
   3.9071715801661663`*^9, 3.907171620173689*^9}},
 CellLabel->"In[2]:=",
 CellID->189335773,ExpressionUUID->"bf52fef3-9590-4ac9-83a8-aae444083648"],

Cell[BoxData[
 RowBox[{
  RowBox[{"unrankCantor", "[", "x_Integer", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"d", ",", "j", ",", "i"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{"invTri", "[", "x", "]"}]}], ";", "\n", 
     RowBox[{"j", "=", 
      RowBox[{"x", "-", 
       RowBox[{"Tri", "[", 
        RowBox[{"d", "-", "1"}], "]"}]}]}], ";", "\n", 
     RowBox[{"i", "=", 
      RowBox[{"d", "-", "j", "+", "1"}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{"j", ",", "i"}], "}"}]}]}], "\n", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8764938145563536`*^9, 3.876493822006153*^9}, {
   3.87649396024522*^9, 3.8764939775174074`*^9}, {3.883749062895033*^9, 
   3.8837491220194063`*^9}, {3.8837491940991306`*^9, 
   3.8837492030805798`*^9}, {3.8837492351742945`*^9, 3.8837492633468266`*^9}, 
   3.8837493025462055`*^9, {3.883754025603574*^9, 3.883754026024639*^9}, {
   3.9062145649356213`*^9, 3.906214662724083*^9}, 3.906563280874822*^9, {
   3.9071715801661663`*^9, 3.907171628391007*^9}, {3.9093472218800926`*^9, 
   3.909347239514028*^9}, {3.909347270776617*^9, 3.9093473270152583`*^9}, {
   3.909418580605363*^9, 3.909418585154453*^9}, {3.909420322986652*^9, 
   3.9094203465204506`*^9}},
 CellLabel->"In[3]:=",
 CellID->1633613730,ExpressionUUID->"65f068c7-0126-4d6d-8ecf-7a740ac50c11"],

Cell[BoxData[
 RowBox[{
  RowBox[{"toNPPT", "[", 
   RowBox[{"{", 
    RowBox[{"j_", ",", "i_"}], "}"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"k", "=", 
      RowBox[{
       RowBox[{"2", "j"}], "-", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "i"}], "+", "k"}], ")"}]}], ",", 
      RowBox[{"2", "i", 
       RowBox[{"(", 
        RowBox[{"i", "+", "k"}], ")"}]}], ",", 
      RowBox[{
       SuperscriptBox["i", "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"i", "+", "k"}], ")"}], "2"]}]}], "}"}]}], "   ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"=", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c"}], "}"}], " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SuperscriptBox["v", "2"], "-", 
          SuperscriptBox["u", "2"]}], ",", " ", 
         RowBox[{"2", " ", "u", " ", "v"}], ",", " ", 
         RowBox[{
          SuperscriptBox["v", "2"], "+", 
          SuperscriptBox["u", "2"]}]}], "}"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"where", " ", "k"}], "=", 
      RowBox[{"u", "-", "v"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8764938145563536`*^9, 3.876493822006153*^9}, {
   3.87649396024522*^9, 3.8764939775174074`*^9}, {3.883749062895033*^9, 
   3.8837491220194063`*^9}, {3.8837491940991306`*^9, 
   3.8837492030805798`*^9}, {3.8837492351742945`*^9, 3.8837492633468266`*^9}, 
   3.8837493025462055`*^9, {3.883754025603574*^9, 3.883754026024639*^9}, {
   3.9062145649356213`*^9, 3.906214662724083*^9}, 3.906563280874822*^9, {
   3.9071715801661663`*^9, 3.907171594560232*^9}, {3.9093475173129835`*^9, 
   3.9093475529343295`*^9}, {3.909348175929675*^9, 3.9093481785770807`*^9}, {
   3.909348228073989*^9, 3.9093484489896293`*^9}},
 CellLabel->"In[4]:=",
 CellID->2143542168,ExpressionUUID->"1a88c6d4-7937-4a8f-83c1-3da546abd92d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fromIndexToNPPT", "[", "n_", "]"}], " ", ":=", " ", 
  RowBox[{"toNPPT", "@", 
   RowBox[{"unrankCantor", "@", "n"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8764938145563536`*^9, 3.876493822006153*^9}, {
   3.87649396024522*^9, 3.8764939775174074`*^9}, {3.883749062895033*^9, 
   3.8837491220194063`*^9}, {3.8837491940991306`*^9, 
   3.8837492030805798`*^9}, {3.8837492351742945`*^9, 3.8837492633468266`*^9}, 
   3.8837493025462055`*^9, {3.883754025603574*^9, 3.883754026024639*^9}, {
   3.9062145649356213`*^9, 3.906214662724083*^9}, 3.906563280874822*^9, {
   3.9071715801661663`*^9, 3.907171607775217*^9}, {3.909348460647894*^9, 
   3.909348492001667*^9}},
 CellLabel->"In[5]:=",
 CellID->261675007,ExpressionUUID->"6c051cf1-c850-416b-845d-d624bb2790d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"assignColor", "[", 
   RowBox[{"{", 
    RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"CoprimeQ", "[", 
       RowBox[{"a", ",", "b"}], "]"}], ",", 
      RowBox[{"Hue", "[", 
       RowBox[{
        RowBox[{"-", "0.05"}], "+", 
        RowBox[{".13", " ", 
         RowBox[{
          SqrtBox[
           RowBox[{"c", "-", "b"}]], "/", "2"}]}]}], "]"}], ",", 
      RowBox[{"GrayLevel", "[", ".9", "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "}"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8764938145563536`*^9, 3.876493822006153*^9}, {
   3.87649396024522*^9, 3.8764939775174074`*^9}, {3.883749062895033*^9, 
   3.8837491220194063`*^9}, {3.8837491940991306`*^9, 
   3.8837492030805798`*^9}, {3.8837492351742945`*^9, 3.8837492633468266`*^9}, 
   3.8837493025462055`*^9, {3.883754025603574*^9, 3.883754026024639*^9}, {
   3.9062145649356213`*^9, 3.906214662724083*^9}, 3.906563280874822*^9, {
   3.9071715801661663`*^9, 3.9071716528622227`*^9}, 3.9093487789351263`*^9, 
   3.909348864442249*^9, {3.9094178095756845`*^9, 3.9094178196199255`*^9}, {
   3.9094188271193027`*^9, 3.909418827529809*^9}, {3.9094205907678347`*^9, 
   3.9094205911884127`*^9}, 3.909421964749955*^9, {3.909422006075508*^9, 
   3.909422037801392*^9}, 3.9094220697677565`*^9, {3.909422118348626*^9, 
   3.909422158604667*^9}, 3.909422194968728*^9, {3.9094222419085445`*^9, 
   3.90942230073557*^9}},
 CellLabel->"In[6]:=",
 CellID->10115661,ExpressionUUID->"d26a274b-36a1-4437-8a77-cda9b966d3dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"showTriangle", "[", 
   RowBox[{"{", 
    RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Column", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"CoprimeQ", "[", 
             RowBox[{"a", ",", "b"}], "]"}], ",", 
            RowBox[{"Hue", "[", 
             RowBox[{".6", "+", 
              RowBox[{".15", " ", 
               SqrtBox[
                RowBox[{"c", "-", "b"}]]}]}], "]"}], ",", 
            RowBox[{"GrayLevel", "[", ".9", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"SSSTriangle", "[", 
           RowBox[{"b", ",", "c", ",", "a"}], "]"}]}], "}"}], ",", 
        RowBox[{"ImageSize", "->", "Tiny"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "\[IndentingNewLine]", 
     "}"}], ",", "Center"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8764938145563536`*^9, 3.876493822006153*^9}, {
   3.87649396024522*^9, 3.8764939775174074`*^9}, {3.883749062895033*^9, 
   3.8837491220194063`*^9}, {3.8837491940991306`*^9, 
   3.8837492030805798`*^9}, {3.8837492351742945`*^9, 3.8837492633468266`*^9}, 
   3.8837493025462055`*^9, {3.883754025603574*^9, 3.883754026024639*^9}, {
   3.9062145649356213`*^9, 3.906214662724083*^9}, 3.906563280874822*^9, {
   3.9071715801661663`*^9, 3.907171658768134*^9}, {3.9093489701667504`*^9, 
   3.9093489849610195`*^9}, 3.9094178355751357`*^9},
 CellLabel->"In[7]:=",
 CellID->1209811654,ExpressionUUID->"7740c86d-c827-42c4-81d9-4cf15eeba7e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"derivation", "[", 
   RowBox[{"n_", ",", "filter_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"j", ",", "i", ",", "k"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"j", ",", "i"}], "}"}], "=", 
      RowBox[{"unrankCantor", "[", "n", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"k", "=", 
      RowBox[{
       RowBox[{"2", "j"}], "-", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"filter", " ", "&&", " ", 
          RowBox[{"!", 
           RowBox[{"CoprimeQ", "[", 
            RowBox[{"k", ",", "i"}], "]"}]}]}], ",", "Nothing", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"!", 
          RowBox[{"CoprimeQ", "[", 
           RowBox[{"k", ",", "i"}], "]"}]}], ",", " ", 
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", 
           RowBox[{"Background", "->", 
            RowBox[{"GrayLevel", "[", "0.9", "]"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", "True", ",", "#"}], "]"}], "&"}], "  ", "/@", 
      " ", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "n", ",", "\"\<:\>\"", ",", "\"\<{\>\"", ",", "j", ",", "\"\<, \>\"", 
        ",", " ", "i", ",", "\"\<}\>\"", ",", "\"\< \[Rule] \>\"", ",", 
        "\"\<{\>\"", ",", "k", ",", "\"\<, \>\"", ",", " ", "i", ",", 
        "\"\<}\>\"", ",", "\"\<:\>\"", ",", 
        RowBox[{"toNPPT", "[", 
         RowBox[{"{", 
          RowBox[{"j", ",", "i"}], "}"}], "]"}]}], "}"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8764938145563536`*^9, 3.876493822006153*^9}, {
   3.87649396024522*^9, 3.8764939775174074`*^9}, {3.883749062895033*^9, 
   3.8837491220194063`*^9}, {3.8837491940991306`*^9, 
   3.8837492030805798`*^9}, {3.8837492351742945`*^9, 3.8837492633468266`*^9}, 
   3.8837493025462055`*^9, {3.883754025603574*^9, 3.883754026024639*^9}, {
   3.9062145649356213`*^9, 3.906214662724083*^9}, 3.906563280874822*^9, {
   3.9071715801661663`*^9, 3.907171663706542*^9}, {3.9093490302140265`*^9, 
   3.90934914356105*^9}, {3.909349198231563*^9, 3.9093492291133213`*^9}, {
   3.909349297359093*^9, 3.909349314768783*^9}, {3.9093493589330373`*^9, 
   3.909349417800205*^9}, {3.9093494668136296`*^9, 3.9093494813736787`*^9}, {
   3.909416297907123*^9, 3.9094163158000774`*^9}, {3.9094163555002823`*^9, 
   3.9094163849987764`*^9}, {3.9094164287555676`*^9, 3.909416525189329*^9}, {
   3.909418350015967*^9, 3.9094183717034454`*^9}, {3.909422606125435*^9, 
   3.9094228244361286`*^9}, 3.909422914921873*^9, 3.9094229495180845`*^9},
 CellLabel->"In[8]:=",
 CellID->1322798514,ExpressionUUID->"34f70d58-3463-4ca6-8e53-5644012a4902"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Manipulate",
 Cell[BoxData[
  TemplateBox[{"Manipulate", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{"This section contains the ", 
          StyleBox["Manipulate", "MRbig"], 
          " input cell and its evaluated output cell. Make all control labels \
or labels in the output as descriptive as possible, with only proper nouns \
and proper adjectives capitalized. More description of the controls can be \
provided in the Details section below, if necessary. If you change this ", 
          StyleBox["Manipulate", "MRbig"], 
          " after creating screenshots and/or thumbnails, use ", 
          StyleBox["Update Thumbnail & Snapshots", FontWeight -> "Bold"], 
          " in the toolbar to update any copies in later sections. You can \
control the Flash preview for the Demonstration with the ", 
          StyleBox["AutorunSequencing", "MRbig"], " option. Use ", 
          StyleBox["SaveDefinitions->True", "MRbig"], 
          " if you provided initialization code in the previous section."}], 
        "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
       FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", 
     Deletable -> True, CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "d12d57a6-93e6-4518-8a9c-9df2eb688354"]
}], "ManipulateSection",
 CellTags->
  "Manipulate",ExpressionUUID->"b7acceb9-ca4b-4965-b319-bd8a6214a587"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"completeArc", "=!=", "False"}], ",", 
      RowBox[{"n", "=", 
       RowBox[{"Tri", "[", 
        RowBox[{"invTri", "[", "n", "]"}], "]"}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"completeArc", "===", "\"\<once\>\""}], ",", 
      RowBox[{"completeArc", "=", "False"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Switch", "[", 
     RowBox[{
     "mode", ",", "\[IndentingNewLine]", "1", ",", "\[IndentingNewLine]", 
      RowBox[{"Panel", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Tooltip", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"Most", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"showTriangle", "[", "#", "]"}]}], "]"}], "&"}], " ", "/@",
            " ", "\[IndentingNewLine]", 
           RowBox[{"assignColor", "/@", 
            RowBox[{"(", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"fromIndexToNPPT", " ", "/@", " ", 
                RowBox[{"Range", "[", "n", "]"}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"CoprimeQ", "@@", "#"}], " ", "||", " ", 
                 RowBox[{"!", "filter"}]}], "&"}]}], "]"}], ")"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"AxesLabel", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<A\>\"", ",", "Italic"}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<B\>\"", ",", "Italic"}], "]"}]}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"AspectRatio", "->", "1"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"1.3", 
            RowBox[{"{", 
             RowBox[{"450", ",", "275"}], "}"}]}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Row", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{"\"\<{\>\"", ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<A\>\"", ",", "Italic"}], "]"}], ",", "\"\<, \>\"", 
             ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<B\>\"", ",", "Italic"}], "]"}], ",", 
             "\"\<-graph of the first \>\"", ",", 
             RowBox[{"ToString", "[", "n", "]"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{"filter", ",", "\"\< \!\(\*StyleBox[\"Near\",
FontVariations->{\"StrikeThrough\"->True}]\)\>\"", ",", "\"\< Near\>\""}], 
              "]"}], ",", "\"\<-Primitive Pythagorean triples {\>\"", ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<A\>\"", ",", "Italic"}], "]"}], ",", "\"\<, \>\"", 
             ",", "\[IndentingNewLine]", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<B\>\"", ",", "Italic"}], "]"}], ",", "\"\<, \>\"", 
             ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<C\>\"", ",", "Italic"}], "]"}], ",", "\"\<}\>\"", 
             ",", "\"\<.\>\""}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
          "\"\<Label\>\"", ",", "Medium"}], "]"}], ",", 
        RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
        RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", "]"}],
       ",", "\[IndentingNewLine]", "2", ",", "\[IndentingNewLine]", 
      RowBox[{"Panel", "[", 
       RowBox[{
        RowBox[{"Pane", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"CoprimeQ", "@@", "#"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{"#", ",", "Black"}], "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{"filter", ",", "Nothing", ",", 
                RowBox[{"Style", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"GrayLevel", "[", "0.7", "]"}], ",", "Underlined"}],
                  "]"}]}], "]"}]}], "]"}], "&"}], " ", "/@", " ", 
           RowBox[{"fromIndexToNPPT", " ", "/@", " ", 
            RowBox[{"Range", "[", "n", "]"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"{", 
            RowBox[{"450", ",", "275"}], "}"}]}], ",", 
          RowBox[{"ImageSizeAction", "->", "\"\<Scrollable\>\""}], ",", 
          RowBox[{"Scrollbars", "->", 
           RowBox[{"{", 
            RowBox[{"False", ",", "Automatic"}], "}"}]}]}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<The first \>\"", ",", 
             RowBox[{"ToString", "[", "n", "]"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{"filter", ",", "\"\< \!\(\*StyleBox[\"Near\",
FontVariations->{\"StrikeThrough\"->True}]\)\>\"", ",", "\"\< Near\>\""}], 
              "]"}], ",", "\"\<-Primitive Pythagorean triples {\>\"", ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<A\>\"", ",", "Italic"}], "]"}], ",", "\"\<, \>\"", 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<B\>\"", ",", "Italic"}], "]"}], ",", "\"\<, \>\"", 
             ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<C\>\"", ",", "Italic"}], "]"}], ",", 
             "\"\<}.\>\""}], "}"}], "]"}], ",", "\"\<Label\>\"", ",", 
          "Medium"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"1.3", 
          RowBox[{"{", 
           RowBox[{"450", ",", "275"}], "}"}]}]}], ",", 
        RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
        RowBox[{"Background", "->", "White"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "3", ",", " ", "\[IndentingNewLine]", 
      RowBox[{"Panel", "[", 
       RowBox[{
        RowBox[{"Pane", "[", 
         RowBox[{
          RowBox[{"Grid", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"derivation", "[", 
                 RowBox[{"#", ",", "filter"}], "]"}], "&"}], " ", "/@", " ", 
               RowBox[{"Range", "[", "n", "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<n\>\"", ",", "Italic"}], "]"}], ",", "\"\<\>\"",
                 ",", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<j\>\"", ",", "Italic"}], "]"}], ",", "\"\<\>\"",
                 ",", "\"\<\>\"", ",", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<i\>\"", ",", "Italic"}], "]"}], ",", "\"\<\>\"",
                 ",", "\"\<\>\"", ",", "\"\<\>\"", ",", "\[IndentingNewLine]", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<k\>\"", ",", "Italic"}], "]"}], ",", "\"\<\>\"",
                 ",", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<i\>\"", ",", "Italic"}], "]"}], ",", "\"\<\>\"",
                 ",", "\"\<\>\"", ",", "\[IndentingNewLine]", 
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{"\"\<{\>\"", ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<a\>\"", ",", "Italic"}], "]"}], ",", 
                   "\"\<, \>\"", ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<b\>\"", ",", "Italic"}], "]"}], ",", 
                   "\"\<, \>\"", ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<c\>\"", ",", "Italic"}], "]"}], ",", 
                   "\"\<}\>\""}], "}"}], "]"}]}], "}"}]}], 
             "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"ItemStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "Black", ",", "Black", ",", "Black", ",", "Red", ",", "Black",
                  ",", "Blue", ",", "Black", ",", "Black", ",", "Black", ",", 
                 "Red", ",", "Black", ",", "Blue", ",", "Black", ",", "Black",
                  ",", "Purple"}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Alignment", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "Center", ",", "Center", ",", "Center", ",", "Center", ",", 
                 "Center", ",", "Center", ",", "Center", ",", "Right", ",", 
                 "Center", ",", "Left", ",", "Left", ",", "Left"}], "}"}], 
               ",", "Automatic"}], "}"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"1.3", 
            RowBox[{"{", 
             RowBox[{"450", ",", "275"}], "}"}]}]}], ",", 
          RowBox[{"Alignment", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Left", ",", "Top"}], "}"}]}], ",", 
          RowBox[{"Scrollbars", "->", 
           RowBox[{"{", 
            RowBox[{"False", ",", "Automatic"}], "}"}]}]}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<Derivation of the first \>\"", ",", 
             RowBox[{"ToString", "[", "n", "]"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{"filter", ",", "\"\< \!\(\*StyleBox[\"Near\",
FontVariations->{\"StrikeThrough\"->True}]\)\>\"", ",", "\"\< Near\>\""}], 
              "]"}], ",", "\"\<-Primitive Pythagorean triples {\>\"", ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<A\>\"", ",", "Italic"}], "]"}], ",", "\"\<, \>\"", 
             ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<B\>\"", ",", "Italic"}], "]"}], ",", "\"\<, \>\"", 
             ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<C\>\"", ",", "Italic"}], "]"}], ",", 
             "\"\<}.\>\""}], "}"}], "]"}], ",", "\"\<Label\>\"", ",", 
          "Medium"}], "]"}], ",", 
        RowBox[{"Background", "->", "White"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Control", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"n", ",", "50", ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<n\>\"", ",", "Italic"}], "]"}]}], "}"}], ",", "1", 
           ",", 
           RowBox[{"10", "^", "3"}], ",", "1", ",", 
           RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Control", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "completeArc", ",", "False", ",", "\"\<complete arc\>\""}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"False", ",", "True", ",", "\"\<once\>\""}], "}"}], ",", 
           RowBox[{"ControlType", "->", "Setter"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", "\"\<   \>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"Control", "@", 
         RowBox[{"{", 
          RowBox[{"mode", ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "->", 
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<graph (\>\"", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<A\>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\<, \>\"", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<B\>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\<)\>\""}], "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"2", "->", 
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<list {\>\"", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<A\>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\<, \>\"", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<B\>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\<, \>\"", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<C\>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\<}\>\""}], "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"3", "->", "\"\<derivation\>\""}]}], "}"}]}], "}"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Control", "@", 
         RowBox[{"{", 
          RowBox[{"filter", ",", 
           RowBox[{"{", 
            RowBox[{"False", ",", "True"}], "}"}]}], "}"}]}]}], 
       "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Right", ",", "Left", ",", "Right"}], "}"}], ",", 
        "Automatic"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"SaveDefinitions", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.906647555662221*^9, 3.906647562600424*^9}, {
   3.9066478635911427`*^9, 3.9066478643335075`*^9}, {3.9071718188395443`*^9, 
   3.907171856018742*^9}, {3.9071718877891703`*^9, 3.907171889285737*^9}, {
   3.907171965870845*^9, 3.9071720054848833`*^9}, {3.907172093512751*^9, 
   3.907172135802617*^9}, {3.9071724743715963`*^9, 3.9071724751637907`*^9}, {
   3.907172549627329*^9, 3.907172598456359*^9}, {3.907174008987891*^9, 
   3.907174012025693*^9}, {3.9071740455037518`*^9, 3.90717409628102*^9}, {
   3.907174258036345*^9, 3.9071742642296667`*^9}, 3.907177091901314*^9, {
   3.907670026228772*^9, 3.907670064330543*^9}, {3.9076700975958233`*^9, 
   3.907670105173319*^9}, 3.9076701473776627`*^9, {3.907670184582982*^9, 
   3.907670205215251*^9}, {3.9076703918123627`*^9, 3.907670392549488*^9}, {
   3.909349580675022*^9, 3.9093495865632753`*^9}, {3.909349811122997*^9, 
   3.9093498598861246`*^9}, {3.9094156489954443`*^9, 
   3.9094157557311335`*^9}, {3.9094157884837427`*^9, 
   3.9094157895789204`*^9}, {3.9094158256700535`*^9, 3.9094159055193224`*^9}, 
   3.9094160058473883`*^9, {3.9094160442756023`*^9, 3.9094160726948757`*^9}, {
   3.909416132718005*^9, 3.909416215706688*^9}, {3.909416251639161*^9, 
   3.9094162818722067`*^9}, {3.909416832017465*^9, 3.909416856210108*^9}, 
   3.9094168876598864`*^9, {3.909416937038871*^9, 3.9094169900530977`*^9}, {
   3.909417455543239*^9, 3.9094175340757895`*^9}, {3.909417616895211*^9, 
   3.909417662847031*^9}, {3.909417702611415*^9, 3.909417723606121*^9}, {
   3.909418119554734*^9, 3.9094181262805815`*^9}, {3.9094182969282875`*^9, 
   3.9094183078172007`*^9}, {3.909418854125495*^9, 3.90941892231772*^9}, {
   3.909418967360626*^9, 3.909419090737737*^9}, {3.9094191923684607`*^9, 
   3.9094192234296503`*^9}, {3.9094192908041286`*^9, 3.909419353468937*^9}, {
   3.9094197770039043`*^9, 3.9094197834290733`*^9}, {3.909419819501419*^9, 
   3.9094198267068396`*^9}, {3.909419869699916*^9, 3.909419941438351*^9}, {
   3.9094200127700553`*^9, 3.909420066032279*^9}, {3.9094205042049637`*^9, 
   3.909420529572651*^9}, {3.9094207834495926`*^9, 3.909420790323637*^9}, {
   3.9094217724255757`*^9, 3.9094218439813104`*^9}, 3.9094218872601256`*^9, {
   3.9094230043035593`*^9, 3.9094230073246803`*^9}, {3.909423059045885*^9, 
   3.909423198415904*^9}, {3.909423235555256*^9, 3.909423348989585*^9}, 
   3.9094233857661967`*^9, {3.909426690397884*^9, 3.9094267672250333`*^9}, {
   3.909426816774088*^9, 3.909426850237158*^9}, {3.909426942833702*^9, 
   3.909427035133914*^9}, {3.909427075383793*^9, 3.9094270802450695`*^9}, {
   3.9094271271378508`*^9, 3.9094271355149207`*^9}, {3.9094271974152007`*^9, 
   3.909427261873542*^9}, {3.909427408559579*^9, 3.909427435609715*^9}, {
   3.9094274946090965`*^9, 3.909427578424009*^9}, 3.909427617736473*^9, {
   3.9094276728282185`*^9, 3.9094276761585393`*^9}, {3.9094280470103283`*^9, 
   3.9094280577693343`*^9}, {3.909428288218355*^9, 3.90942828884636*^9}, {
   3.9094284284309664`*^9, 3.909428544161787*^9}, {3.9094286087693152`*^9, 
   3.9094286228654656`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"1c8a51fe-61b3-446f-b3f3-b27c622b6763"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`completeArc$$ = 
    False, $CellContext`filter$$ = False, $CellContext`mode$$ = 
    1, $CellContext`n$$ = 50, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 50, 
       Style["n", Italic]}, 1, 1000, 1}, {{
       Hold[$CellContext`completeArc$$], False, "complete arc"}, {
      False, True, "once"}}, {
      Hold[$CellContext`mode$$], {1 -> Row[{"graph (", 
          Style["A", Italic], ", ", 
          Style["B", Italic], ")"}], 2 -> Row[{"list {", 
          Style["A", Italic], ", ", 
          Style["B", Italic], ", ", 
          Style["C", Italic], "}"}], 3 -> "derivation"}}, {
      Hold[$CellContext`filter$$], {False, True}}, {
      Hold[
       Grid[{{
          Manipulate`Place[1], 
          Manipulate`Place[2], "   ", 
          Manipulate`Place[3], 
          Manipulate`Place[4]}}, 
        Alignment -> {{Right, Left, Right}, Automatic}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    449., {140., 155.371484375}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`completeArc$$ = 
        False, $CellContext`filter$$ = False, $CellContext`mode$$ = 
        1, $CellContext`n$$ = 50}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> (
       If[$CellContext`completeArc$$ =!= 
         False, $CellContext`n$$ = $CellContext`Tri[
           $CellContext`invTri[$CellContext`n$$]]]; 
       If[$CellContext`completeArc$$ === "once", $CellContext`completeArc$$ = 
         False]; Switch[$CellContext`mode$$, 1, 
         Panel[
          ListPlot[
           Map[Tooltip[
             Style[
              Most[
               Part[#, 2]], 
              Part[#, 1]], 
             $CellContext`showTriangle[#]]& , 
            Map[$CellContext`assignColor, 
             Select[
              Map[$CellContext`fromIndexToNPPT, 
               Range[$CellContext`n$$]], Or[
               Apply[CoprimeQ, #], 
               Not[$CellContext`filter$$]]& ]]], AxesLabel -> {
             Style["A", Italic], 
             Style["B", Italic]}, AspectRatio -> 1, ImageSize -> 
           1.3 {450, 275}], 
          Style[
           Row[{"{", 
             Style["A", Italic], ", ", 
             Style["B", Italic], "-graph of the first ", 
             ToString[$CellContext`n$$], 
             
             If[$CellContext`filter$$, 
              " \!\(\*StyleBox[\"Near\",\n\
FontVariations->{\"StrikeThrough\"->True}]\)", " Near"], 
             "-Primitive Pythagorean triples {", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ", ", 
             Style["C", Italic], "}", "."}], "Label", Medium], Alignment -> 
          Center, Background -> White], 2, 
         Panel[
          Pane[
           Map[If[
             Apply[CoprimeQ, #], 
             Style[#, Black], 
             If[$CellContext`filter$$, Nothing, 
              Style[#, 
               GrayLevel[0.7], Underlined]]]& , 
            Map[$CellContext`fromIndexToNPPT, 
             Range[$CellContext`n$$]]], ImageSize -> {450, 275}, 
           ImageSizeAction -> "Scrollable", Scrollbars -> {False, Automatic}], 
          Style[
           Row[{"The first ", 
             ToString[$CellContext`n$$], 
             
             If[$CellContext`filter$$, 
              " \!\(\*StyleBox[\"Near\",\n\
FontVariations->{\"StrikeThrough\"->True}]\)", " Near"], 
             "-Primitive Pythagorean triples {", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ", ", 
             Style["C", Italic], "}."}], "Label", Medium], ImageSize -> 
          1.3 {450, 275}, Alignment -> Center, Background -> White], 3, 
         Panel[
          Pane[
           Grid[
            Prepend[
             Map[$CellContext`derivation[#, $CellContext`filter$$]& , 
              Range[$CellContext`n$$]], {
              Style["n", Italic], "", 
              Style["j", Italic], "", "", 
              Style["i", Italic], "", "", "", 
              Style["k", Italic], "", 
              Style["i", Italic], "", "", 
              Row[{"{", 
                Style["a", Italic], ", ", 
                Style["b", Italic], ", ", 
                Style["c", Italic], "}"}]}], 
            ItemStyle -> {{
              Black, Black, Black, Red, Black, Blue, Black, Black, Black, Red,
                Black, Blue, Black, Black, Purple}, Automatic}, 
            Alignment -> {{
              Center, Center, Center, Center, Center, Center, Center, Right, 
               Center, Left, Left, Left}, Automatic}], ImageSize -> 
           1.3 {450, 275}, Alignment -> {Left, Top}, 
           Scrollbars -> {False, Automatic}], 
          Style[
           Row[{"Derivation of the first ", 
             ToString[$CellContext`n$$], 
             
             If[$CellContext`filter$$, 
              " \!\(\*StyleBox[\"Near\",\n\
FontVariations->{\"StrikeThrough\"->True}]\)", " Near"], 
             "-Primitive Pythagorean triples {", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ", ", 
             Style["C", Italic], "}."}], "Label", Medium], Background -> 
          White]]), "Specifications" :> {{{$CellContext`n$$, 50, 
          Style["n", Italic]}, 1, 1000, 1, Appearance -> "Labeled", 
         ControlPlacement -> 
         1}, {{$CellContext`completeArc$$, False, "complete arc"}, {
         False, True, "once"}, ControlType -> Setter, ControlPlacement -> 
         2}, {$CellContext`mode$$, {1 -> Row[{"graph (", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ")"}], 2 -> Row[{"list {", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ", ", 
             Style["C", Italic], "}"}], 3 -> "derivation"}, ControlPlacement -> 
         3}, {$CellContext`filter$$, {False, True}, ControlPlacement -> 4}, 
        Grid[{{
           Manipulate`Place[1], 
           Manipulate`Place[2], "   ", 
           Manipulate`Place[3], 
           Manipulate`Place[4]}}, 
         Alignment -> {{Right, Left, Right}, Automatic}]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{484., {179.015869140625, 182.984130859375}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`Tri[
         Pattern[$CellContext`n, 
          Blank[]]] := (1/2) $CellContext`n (
         1 + $CellContext`n), $CellContext`invTri[
         Pattern[$CellContext`x, 
          Blank[Integer]]] := 
       Ceiling[(1/2) (-1 + 
          Sqrt[1 + 8 $CellContext`x])], $CellContext`showTriangle[{
          Pattern[$CellContext`color, 
           Blank[]], {
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`b, 
            Blank[]], 
           Pattern[$CellContext`c, 
            Blank[]]}}] := Column[{
          Graphics[{
            EdgeForm[Thick], $CellContext`color, 
            SSSTriangle[$CellContext`b, $CellContext`c, $CellContext`a]}, 
           ImageSize -> 
           Tiny], {$CellContext`a, $CellContext`b, $CellContext`c}}, 
         Center], $CellContext`showTriangle[{
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}] := Column[{
          Graphics[{
            EdgeForm[Thick], 
            If[
             CoprimeQ[$CellContext`a, $CellContext`b], 
             Hue[0.6 + 0.15 Sqrt[$CellContext`c - $CellContext`b]], 
             GrayLevel[0.9]], 
            SSSTriangle[$CellContext`b, $CellContext`c, $CellContext`a]}, 
           ImageSize -> 
           Tiny], {$CellContext`a, $CellContext`b, $CellContext`c}}, 
         Center], $CellContext`assignColor[{
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}] := {
         If[
          CoprimeQ[$CellContext`a, $CellContext`b], 
          Hue[-0.05 + 0.13 (Sqrt[$CellContext`c - $CellContext`b]/2)], 
          GrayLevel[
          0.9]], {$CellContext`a, $CellContext`b, $CellContext`c}}, \
$CellContext`fromIndexToNPPT[
         Pattern[$CellContext`n, 
          Blank[]]] := $CellContext`toNPPT[
         $CellContext`unrankCantor[$CellContext`n]], $CellContext`toNPPT[{
          Pattern[$CellContext`j, 
           Blank[]], 
          Pattern[$CellContext`i, 
           Blank[]]}] := 
       Module[{$CellContext`k = 
          2 $CellContext`j - 1}, {$CellContext`k (
           2 $CellContext`i + $CellContext`k), 
          2 $CellContext`i ($CellContext`i + $CellContext`k), \
$CellContext`i^2 + ($CellContext`i + $CellContext`k)^2}], \
$CellContext`unrankCantor[
         Pattern[$CellContext`x, 
          Blank[Integer]]] := 
       Module[{$CellContext`d, $CellContext`j, $CellContext`i}, \
$CellContext`d = $CellContext`invTri[$CellContext`x]; $CellContext`j = \
$CellContext`x - $CellContext`Tri[$CellContext`d - 
            1]; $CellContext`i = $CellContext`d - $CellContext`j + 
           1; {$CellContext`j, $CellContext`i}], $CellContext`derivation[
         Pattern[$CellContext`i, 
          Blank[]]] := 
       Module[{$CellContext`n, $CellContext`m}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`i]; {$CellContext`i, 
           ":", "{", $CellContext`m, ",", $CellContext`n, "}", ":", 
           $CellContext`cnn[$CellContext`n], ":", 
           $CellContext`toCWPair[
            $CellContext`cnn[$CellContext`n]], ":", $CellContext`m, 
           "\[Times]", 
           $CellContext`fromIndexToPPT[$CellContext`n], "=", 
           $CellContext`fromIndexToPT[$CellContext`i]}], \
$CellContext`derivation[
         Pattern[$CellContext`n, 
          Blank[]], 
         Pattern[$CellContext`filter, 
          Blank[]]] := 
       Module[{$CellContext`j, $CellContext`i, $CellContext`k}, \
{$CellContext`j, $CellContext`i} = $CellContext`unrankCantor[$CellContext`n]; \
$CellContext`k = 2 $CellContext`j - 1; Map[Which[
            And[$CellContext`filter, 
             Not[
              CoprimeQ[$CellContext`k, $CellContext`i]]], Nothing, 
            Not[
             CoprimeQ[$CellContext`k, $CellContext`i]], 
            Style[#, Background -> GrayLevel[0.9]], 
            True, #]& , {$CellContext`n, ":", "{", $CellContext`j, 
            ", ", $CellContext`i, "}", " \[Rule] ", "{", $CellContext`k, 
            ", ", $CellContext`i, "}", ":", 
            $CellContext`toNPPT[{$CellContext`j, $CellContext`i}]}]], \
$CellContext`cnn[
         Pattern[$CellContext`n, 
          Blank[]]] := 
       3 $CellContext`n - (1/2) (
         1 - (-1)^$CellContext`n), $CellContext`toCWPair[
         Pattern[$CellContext`i, 
          Blank[Integer]]] := Module[{$CellContext`b = Rest[
            IntegerDigits[$CellContext`i, 2]], $CellContext`t = {1, 1}}, 
         Scan[If[# == 0, $CellContext`t = {
              First[$CellContext`t], 
              Total[$CellContext`t]}, $CellContext`t = {
              Total[$CellContext`t], 
              
              Last[$CellContext`t]}]& , $CellContext`b]; $CellContext`t], \
$CellContext`fromIndexToPPT[
         Pattern[$CellContext`n, 
          Blank[]]] := $CellContext`toPPT[
         $CellContext`toCWPair[
          $CellContext`cnn[$CellContext`n]]], $CellContext`toPPT[{
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           Blank[]]}] := {$CellContext`v^2 - $CellContext`u^2, (
          2 $CellContext`u) $CellContext`v, $CellContext`v^2 + \
$CellContext`u^2}, $CellContext`fromIndexToPT[
         Pattern[$CellContext`i, 
          Blank[]]] := $CellContext`fromPairToPT[
         $CellContext`unrankCantor[$CellContext`i]], \
$CellContext`fromPairToPT[{
          Pattern[$CellContext`m, 
           Blank[]], 
          Pattern[$CellContext`n, 
           
           Blank[]]}] := $CellContext`m \
$CellContext`fromIndexToPPT[$CellContext`n]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.9094282776775246`*^9, 3.9094282896459537`*^9}, 
   3.909428545152897*^9, {3.90942861009618*^9, 3.909428623359845*^9}},
 CellLabel->"Out[14]=",
 CellID->68476767,ExpressionUUID->"f9033dd1-f8e7-4ce1-9f41-d5112bfc014f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Caption",
 Cell[BoxData[
  TemplateBox[{"Caption", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{
         "The caption provides all the information needed to understand the \
Demonstration. It should be between three and five sentences long, but \
clarity is more important than length. Include only text in this section \
\[LongDash] no code, graphics, etc. Do not change the cell style or copy \
cells from other sections. Do not copy text from books or the web. Write your \
ideas in your own words. If you want to refer to something on the web, link \
to it in the Details.", 
          StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "993d34cb-4ea0-4352-91c1-6dce029ac92c"]
}], "ManipulateCaptionSection",
 CellTags->"Caption",
 CellID->210363168,ExpressionUUID->"1bf22974-0f2f-400e-98cc-75041e34f761"],

Cell[TextData[{
 "This Demonstration generates all Pythagorean triples (PTs) using a Cantor \
diagonal ordering to produce all multiples of all primitive PTs. These are, \
in turn, generated by the Calkin\[Dash]Wilf (C-W) enumeration of the rational \
numbers. The ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]], "InlineMath",ExpressionUUID->
  "5edabc87-d50d-4b7b-8e19-dc7a9514d56a"],
 " slider sets the number of PTs shown. "
}], "ManipulateCaption",
 CellChangeTimes->{
  3.906647585647098*^9, {3.907172681888693*^9, 3.907172729507627*^9}, {
   3.907172823985756*^9, 3.9071728288908443`*^9}, {3.907173688171981*^9, 
   3.907173727318165*^9}, {3.907176717368141*^9, 3.907176738384719*^9}, {
   3.907176794457341*^9, 3.907176830469791*^9}, {3.9071771080042477`*^9, 
   3.907177190478368*^9}, {3.907669400035438*^9, 3.907669529086779*^9}, {
   3.907674004553522*^9, 3.907674013636788*^9}},
 CellID->815681614,ExpressionUUID->"21015a69-8c99-493a-a012-d003171e484b"],

Cell[TextData[{
 "Various modes allow graphical or tabular displays of the results, including \
the \"derivation\" to show the steps from the positive integers ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]], "InlineMath",ExpressionUUID->
  "de3867da-9060-4583-8019-638e91cfcfd3"],
 " to the Cantor pair ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"m", ",", "n"}], ")"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"fc0b219b-26b3-46fd-bccf-20dd0218ce7c"],
 ", to a filtered list of compliant natural numbers, to C-W pairs ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"u", ",", "v"}], ")"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"6e85379f-eb78-4e13-bbec-6f63e219ea16"],
 ", to the PTs of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A", ",", "B", ",", "C"}], ")"}], "=", 
    RowBox[{"m", "(", 
     RowBox[{"a", ",", "b", ",", "c"}], ")"}]}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"343ce629-70a1-4445-842d-fb650c68edfc"],
 "."
}], "ManipulateCaption",
 CellChangeTimes->{
  3.906647585647098*^9, {3.907172681888693*^9, 3.907172729507627*^9}, {
   3.907172823985756*^9, 3.9071728288908443`*^9}, {3.907173688171981*^9, 
   3.907173727318165*^9}, {3.907176717368141*^9, 3.907176738384719*^9}, {
   3.907176794457341*^9, 3.907176830469791*^9}, {3.9071771080042477`*^9, 
   3.907177190478368*^9}, {3.907669400035438*^9, 3.907669523671834*^9}, {
   3.907674044348467*^9, 3.907674055617508*^9}},
 CellID->738023948,ExpressionUUID->"39140912-7272-4936-a784-9717bab7d5af"],

Cell[TextData[{
 "In mode \"graph ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"A", ",", "B"}], ")"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"78159395-4748-4d40-893e-44f1adb00dd7"],
 "\", a blue point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"A", ",", "B"}], ")"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"f941e371-92a8-4266-b807-ba80f08884d7"],
 " represents a primitive PT and a red point represents a non-primitive PT; \
mouse over to see all side lengths and a proportional triangle."
}], "ManipulateCaption",
 CellChangeTimes->{
  3.906647585647098*^9, {3.907172681888693*^9, 3.907172729507627*^9}, {
   3.907172823985756*^9, 3.9071728288908443`*^9}, {3.907173688171981*^9, 
   3.907173727318165*^9}, {3.907176717368141*^9, 3.907176738384719*^9}, {
   3.907176794457341*^9, 3.907176830469791*^9}, {3.9071771080042477`*^9, 
   3.907177190478368*^9}, {3.907669400035438*^9, 3.907669523198729*^9}, {
   3.907669619632462*^9, 3.907669620074394*^9}, {3.9076697268488483`*^9, 
   3.907669890720245*^9}},
 CellID->144024224,ExpressionUUID->"ec221e47-7c1a-49f1-a302-e4f84d782181"],

Cell["\<\
Use the \"zoom\" slider to zoom into the graph near the origin.\
\>", "ManipulateCaption",
 CellChangeTimes->{
  3.906647585647098*^9, {3.907172681888693*^9, 3.907172729507627*^9}, {
   3.907172823985756*^9, 3.9071728288908443`*^9}, {3.907173688171981*^9, 
   3.907173727318165*^9}, {3.907176717368141*^9, 3.907176738384719*^9}, {
   3.907176794457341*^9, 3.907176830469791*^9}, {3.9071771080042477`*^9, 
   3.907177190478368*^9}, {3.907669400035438*^9, 3.907669523198729*^9}, {
   3.907669619632462*^9, 3.907669624497183*^9}, {3.9076699195877323`*^9, 
   3.9076699198361063`*^9}},
 CellID->595117962,ExpressionUUID->"68d11243-a6bc-4495-976c-04f992b9afd7"],

Cell[TextData[{
 "The \"Cantor ordering\" mode shows how each integer generates a multiplier \
and a primitive PT; mouse over to see with details. Hover over a point in the \
graph to see the values ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"A", ",", "B", ",", "C"}], "}"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"7480a020-6ae2-4950-88e1-b47d886269b3"],
 " and a proportional triangle."
}], "ManipulateCaption",
 CellChangeTimes->{
  3.906647585647098*^9, {3.907172681888693*^9, 3.907172729507627*^9}, {
   3.907172823985756*^9, 3.9071728288908443`*^9}, {3.907173688171981*^9, 
   3.907173727318165*^9}, {3.907176717368141*^9, 3.907176738384719*^9}, {
   3.907176794457341*^9, 3.907176830469791*^9}, {3.9071771080042477`*^9, 
   3.907177190478368*^9}, {3.907669400035438*^9, 3.907669523198729*^9}, {
   3.907669619632462*^9, 3.9076696237491617`*^9}, {3.9076699383554163`*^9, 
   3.9076699856288424`*^9}},
 CellID->267656216,ExpressionUUID->"e8457069-9a0c-48c9-b993-69915851e059"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Thumbnail",
 Cell[BoxData[
  TemplateBox[{"Thumbnail", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{
         "To create the thumbnail, copy and paste the output cell from the ", 
          StyleBox["Manipulate", "MRbig"], 
          " section and adjust the controls to the most visually appealing \
setting. Do not convert it to a bitmap. The thumbnail is what visitors see \
when browsing the Demonstrations site and while the Flash preview loads.", 
          StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "5363174b-397a-4e31-b8e5-95e1af887bc9"]
}], "ThumbnailSection",
 CellTags->"Thumbnail",ExpressionUUID->"401cc3c4-8319-4e19-82e7-df5fcb711a42"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 50, $CellContext`mode$$ = 
    1, $CellContext`zoom$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 50, 
       Style["i", Italic]}, 1, 1000, 1}, {{
       Hold[$CellContext`mode$$], 1}, {1 -> Row[{"graph (", 
          Style["A", Italic], ", ", 
          Style["B", Italic], ")"}], 2 -> Row[{"list {", 
          Style["A", Italic], ", ", 
          Style["B", Italic], ", ", 
          Style["C", Italic], "}"}], 3 -> "Cantor ordering", 4 -> 
       "derivation"}}, {
      Hold[$CellContext`zoom$$], 0, 3}, {
      Hold[
       Grid[{{
          Manipulate`Place[1], 
          Manipulate`Place[2]}, {
          Manipulate`Place[3], 
          Row[{}]}}, Alignment -> {{Right, Left}, Automatic}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    449., {140., 155.371484375}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`i$$ = 50, $CellContext`mode$$ = 
        1, $CellContext`zoom$$ = 0}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Switch[$CellContext`mode$$, 1, 
        Panel[
         ListPlot[
          Map[Tooltip[
            Most[
             Part[#, 2]], 
            $CellContext`showTriangle[#]]& , 
           GatherBy[
            Map[$CellContext`assignColor, 
             $CellContext`chopLarge[
              Map[$CellContext`fromIndexToPT, 
               Range[$CellContext`i$$]], $CellContext`zoom$$]], First], {2}], 
          PlotStyle -> {Blue, Red}, AxesLabel -> {
            Style["A", Italic], 
            Style["B", Italic]}, AspectRatio -> 1, ImageSize -> 
          1.3 {450, 275}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}", "."}], "Label", Medium], Alignment -> 
         Center, Background -> White], 2, 
        Panel[
         Pane[
          Map[$CellContext`fromIndexToPT, 
           Range[$CellContext`i$$]], ImageSize -> {450, 275}, ImageSizeAction -> 
          "Scrollable", Scrollbars -> {False, Automatic}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}."}], "Label", Medium], ImageSize -> 
         1.3 {450, 275}, Alignment -> Center, Background -> White], 3, 
        Panel[
         Pane[
          Graph[
           Table[
            
            DirectedEdge[$CellContext`k, $CellContext`k + 1], {$CellContext`k,
              1, $CellContext`i$$ - 1}], VertexCoordinates -> 
           Map[# -> {1, -1} $CellContext`unrankCantor[#]& , 
             Range[$CellContext`i$$]], VertexShapeFunction -> $CellContext`vf,
            EdgeShapeFunction -> $CellContext`ef, AspectRatio -> 0.7, 
           ImageSize -> 50 Total[
              $CellContext`unrankCantor[$CellContext`i$$]]], ImageSize -> 
          1.3 {450, 275}, ImageSizeAction -> "Scrollable", 
          Scrollbars -> {Automatic, Automatic}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], 
            " Pythagorean triples shown in Cantor diagonalization order."}], 
          "Label", Medium], ImageSize -> 1.3 {450, 275}, Alignment -> Center, 
         Background -> White], 4, 
        Panel[
         Pane[
          Grid[
           Prepend[
            Map[$CellContext`derivation, 
             Range[$CellContext`i$$]], {
             Style["i", Italic], "", "", 
             Style["m", Italic], "", 
             Style["n", Italic], "", "", 
             Row[{"cnn(", 
               Style["n", Italic], ")"}], "", 
             Row[{
               Style["C", Italic], "-", 
               Style["W", Italic]}], "", 
             Style["m", Italic], "", 
             Row[{"{", 
               Style["a", Italic], ", ", 
               Style["b", Italic], ", ", 
               Style["c", Italic], "}"}], "", 
             Row[{"{", 
               Style["A", Italic], ", ", 
               Style["B", Italic], ", ", 
               Style["C", Italic], "}"}]}], 
           ItemStyle -> {{
             Black, Black, Black, Red, Black, Blue, Black, Black, Blue, Black,
               Blue, Black, Red, Black, Blue, Black, Purple}, Automatic}, 
           Spacings -> {{
             3, 1, 1, 0, 0, 0.1, 0.3, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1}, 0.5}, 
           Alignment -> {{
             Center, Center, Center, Center, Center, Center, Center, Center, 
              Center, Center, Center, Center, Right, Center, Left, Left, 
              Left}, Automatic}], ImageSize -> 1.3 {450, 275}, 
          Alignment -> {Left, Top}, Scrollbars -> {False, Automatic}], 
         Style[
          Row[{"Derivation of the first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}."}], "Label", Medium], Background -> 
         White]], "Specifications" :> {{{$CellContext`i$$, 50, 
          Style["i", Italic]}, 1, 1000, 1, Appearance -> "Labeled", 
         ControlPlacement -> 1}, {{$CellContext`mode$$, 1}, {
         1 -> Row[{"graph (", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ")"}], 2 -> Row[{"list {", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ", ", 
             Style["C", Italic], "}"}], 3 -> "Cantor ordering", 4 -> 
          "derivation"}, ControlPlacement -> 2}, {$CellContext`zoom$$, 0, 3, 
         Appearance -> "Labeled", Enabled -> 
         Dynamic[$CellContext`mode$$ == 1], ControlPlacement -> 3}, 
        Grid[{{
           Manipulate`Place[1], 
           Manipulate`Place[2]}, {
           Manipulate`Place[3], 
           Row[{}]}}, Alignment -> {{Right, Left}, Automatic}]}, 
      "Options" :> {}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{484., {187.015869140625, 190.984130859375}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`showTriangle[{
          Pattern[$CellContext`color, 
           Blank[]], {
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`b, 
            Blank[]], 
           Pattern[$CellContext`c, 
            Blank[]]}}] := Column[{
          Graphics[{
            EdgeForm[Thick], $CellContext`color, 
            SSSTriangle[$CellContext`b, $CellContext`c, $CellContext`a]}, 
           ImageSize -> 
           Tiny], {$CellContext`a, $CellContext`b, $CellContext`c}}, 
         Center], $CellContext`assignColor[{
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}] := {
         If[
         GCD[$CellContext`a, $CellContext`b, $CellContext`c] == 1, Blue, 
          Red], {$CellContext`a, $CellContext`b, $CellContext`c}}, \
$CellContext`chopLarge[
         Pattern[$CellContext`L, 
          Blank[List]], 
         Pattern[$CellContext`zoom, 
          Blank[]]] := Module[{$CellContext`max}, $CellContext`max = Max[
            Flatten[
             Map[Take[#, 2]& , $CellContext`L]]]; 
         Select[$CellContext`L, And[
           Part[#, 1] <= $CellContext`max/10^$CellContext`zoom, 
            Part[#, 2] <= $CellContext`max/
             10^$CellContext`zoom]& ]], $CellContext`fromIndexToPT[
         Pattern[$CellContext`i, 
          Blank[]]] := $CellContext`fromPairToPT[
         $CellContext`unrankCantor[$CellContext`i]], \
$CellContext`fromPairToPT[{
          Pattern[$CellContext`m, 
           Blank[]], 
          Pattern[$CellContext`n, 
           
           Blank[]]}] := $CellContext`m \
$CellContext`fromIndexToPPT[$CellContext`n], $CellContext`fromIndexToPPT[
         Pattern[$CellContext`n, 
          Blank[]]] := $CellContext`toPPT[
         $CellContext`toCWPair[
          $CellContext`cnn[$CellContext`n]]], $CellContext`toPPT[{
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           Blank[]]}] := {$CellContext`v^2 - $CellContext`u^2, (
          2 $CellContext`u) $CellContext`v, $CellContext`v^2 + \
$CellContext`u^2}, $CellContext`toCWPair[
         Pattern[$CellContext`i, 
          Blank[Integer]]] := Module[{$CellContext`b = Rest[
            IntegerDigits[$CellContext`i, 2]], $CellContext`t = {1, 1}}, 
         Scan[If[# == 0, $CellContext`t = {
              First[$CellContext`t], 
              Total[$CellContext`t]}, $CellContext`t = {
              Total[$CellContext`t], 
              
              Last[$CellContext`t]}]& , $CellContext`b]; $CellContext`t], \
$CellContext`cnn[
         Pattern[$CellContext`n, 
          Blank[]]] := 
       3 $CellContext`n - (1/2) (
         1 - (-1)^$CellContext`n), $CellContext`unrankCantor[
         Pattern[$CellContext`x, 
          Blank[Integer]]] := 
       Module[{$CellContext`k, $CellContext`m, $CellContext`n}, \
$CellContext`k = $CellContext`invTri[$CellContext`x]; $CellContext`n = \
$CellContext`x - $CellContext`Tri[$CellContext`k - 
            1]; $CellContext`m = $CellContext`k - $CellContext`n + 
           1; {$CellContext`m, $CellContext`n}], $CellContext`invTri[
         Pattern[$CellContext`x, 
          Blank[Integer]]] := 
       Ceiling[(1/2) (-1 + Sqrt[1 + 8 $CellContext`x])], $CellContext`Tri[
         Pattern[$CellContext`n, 
          Blank[]]] := ((1/2) $CellContext`n) (
         1 + $CellContext`n), $CellContext`vf[{
          Pattern[$CellContext`xc, 
           Blank[]], 
          Pattern[$CellContext`yc, 
           Blank[]]}, 
         Pattern[$CellContext`name, 
          Blank[]], {
          Pattern[$CellContext`w, 
           Blank[]], 
          Pattern[$CellContext`h, 
           Blank[]]}] := 
       Module[{$CellContext`m, $CellContext`n}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`name]; {
           EdgeForm[None], 
           Hue[0.6 + 0.15 ($CellContext`m + $CellContext`n)], 
           
           Rectangle[{$CellContext`xc, $CellContext`yc} - {0.4, 
            0.17}, {$CellContext`xc, $CellContext`yc} + {0.4, 0.17}, 
            RoundingRadius -> 0.11], Black, 
           Text[
            $CellContext`display[$CellContext`name], {$CellContext`xc, \
$CellContext`yc}]}], $CellContext`display[
         Pattern[$CellContext`i, 
          Blank[Integer]]] := 
       Module[{$CellContext`m, $CellContext`n}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`i]; Tooltip[
           Style[
            Row[{$CellContext`m, 
              Subscript[$CellContext`\[ScriptCapitalP], $CellContext`n]}, 
             " "], 16], 
           Style[
            Row[{$CellContext`i, ": ", $CellContext`m, 
              $CellContext`fromIndexToPPT[$CellContext`n], 
              "=", $CellContext`m \
$CellContext`fromIndexToPPT[$CellContext`n]}, " "], 14]]], $CellContext`ef[
         Pattern[$CellContext`lines, 
          BlankSequence[]], 
         Pattern[$CellContext`edge, 
          Blank[]]] := 
       Module[{$CellContext`x1, $CellContext`y1, $CellContext`x2, \
$CellContext`y2}, {$CellContext`x1, $CellContext`y1} = {
            1, -1} $CellContext`unrankCantor[
             
             Part[$CellContext`edge, 
              1]]; {$CellContext`x2, $CellContext`y2} = {
            1, -1} $CellContext`unrankCantor[
             Part[$CellContext`edge, 2]]; {
           If[$CellContext`x1 == 1, Red, Blue], 
           Arrowheads[Medium], 
           
           Arrow[{{$CellContext`x1, $CellContext`y1}, {$CellContext`x2, \
$CellContext`y2}}, 0.35]}], $CellContext`derivation[
         Pattern[$CellContext`i, 
          Blank[]]] := 
       Module[{$CellContext`n, $CellContext`m}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`i]; {$CellContext`i, 
           ":", "{", $CellContext`m, ",", $CellContext`n, "}", ":", 
           $CellContext`cnn[$CellContext`n], ":", 
           $CellContext`toCWPair[
            $CellContext`cnn[$CellContext`n]], ":", $CellContext`m, 
           "\[Times]", 
           $CellContext`fromIndexToPPT[$CellContext`n], "=", 
           $CellContext`fromIndexToPT[$CellContext`i]}]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->1063214944,ExpressionUUID->"1d2ae140-c5a0-46ee-9407-c003a6453f12"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Snapshots",
 Cell[BoxData[
  TemplateBox[{"Snapshots", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{"To create snapshots, paste the output cell from the ", 
          StyleBox["Manipulate", "MRbig"], 
          " section in this section at least three times, and adjust the \
controls of each copy to show a range of interesting settings. Do not convert \
the screenshots to bitmaps. Optional captions for the screenshots may be \
included in the Details section.", 
          StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "d854de0f-efbb-449a-8b04-a7b3ca5773d5"]
}], "SnapshotsSection",
 CellTags->"Snapshots",ExpressionUUID->"96bb7a68-4496-4362-86d3-c2a0812907f2"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1000, $CellContext`mode$$ = 
    1, $CellContext`zoom$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 1000, 
       Style["i", Italic]}, 1, 1000, 1}, {{
       Hold[$CellContext`mode$$], 1}, {1 -> Row[{"graph (", 
          Style["A", Italic], ", ", 
          Style["B", Italic], ")"}], 2 -> Row[{"list {", 
          Style["A", Italic], ", ", 
          Style["B", Italic], ", ", 
          Style["C", Italic], "}"}], 3 -> "Cantor ordering", 4 -> 
       "derivation"}}, {{
       Hold[$CellContext`zoom$$], 2}, 0, 3}, {
      Hold[
       Grid[{{
          Manipulate`Place[1], 
          Manipulate`Place[2]}, {
          Manipulate`Place[3], 
          Row[{}]}}, Alignment -> {{Right, Left}, Automatic}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    597., {185., 205.4953125}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`i$$ = 1000, $CellContext`mode$$ = 
        1, $CellContext`zoom$$ = 2}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Switch[$CellContext`mode$$, 1, 
        Panel[
         ListPlot[
          Map[Tooltip[
            Most[
             Part[#, 2]], 
            $CellContext`showTriangle[#]]& , 
           GatherBy[
            Map[$CellContext`assignColor, 
             $CellContext`chopLarge[
              Map[$CellContext`fromIndexToPT, 
               Range[$CellContext`i$$]], $CellContext`zoom$$]], First], {2}], 
          PlotStyle -> {Blue, Red}, AxesLabel -> {
            Style["A", Italic], 
            Style["B", Italic]}, AspectRatio -> 1, ImageSize -> 
          1.3 {450, 275}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}", "."}], "Label", Medium], Alignment -> 
         Center, Background -> White], 2, 
        Panel[
         Pane[
          Map[$CellContext`fromIndexToPT, 
           Range[$CellContext`i$$]], ImageSize -> {450, 275}, ImageSizeAction -> 
          "Scrollable", Scrollbars -> {False, Automatic}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}."}], "Label", Medium], ImageSize -> 
         1.3 {450, 275}, Alignment -> Center, Background -> White], 3, 
        Panel[
         Pane[
          Graph[
           Table[
            
            DirectedEdge[$CellContext`k, $CellContext`k + 1], {$CellContext`k,
              1, $CellContext`i$$ - 1}], VertexCoordinates -> 
           Map[# -> {1, -1} $CellContext`unrankCantor[#]& , 
             Range[$CellContext`i$$]], VertexShapeFunction -> $CellContext`vf,
            EdgeShapeFunction -> $CellContext`ef, AspectRatio -> 0.7, 
           ImageSize -> 50 Total[
              $CellContext`unrankCantor[$CellContext`i$$]]], ImageSize -> 
          1.3 {450, 275}, ImageSizeAction -> "Scrollable", 
          Scrollbars -> {Automatic, Automatic}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], 
            " Pythagorean triples shown in Cantor diagonalization order."}], 
          "Label", Medium], ImageSize -> 1.3 {450, 275}, Alignment -> Center, 
         Background -> White], 4, 
        Panel[
         Pane[
          Grid[
           Prepend[
            Map[$CellContext`derivation, 
             Range[$CellContext`i$$]], {
             Style["i", Italic], "", "", 
             Style["m", Italic], "", 
             Style["n", Italic], "", "", 
             Row[{"cnn(", 
               Style["n", Italic], ")"}], "", 
             Row[{
               Style["C", Italic], "-", 
               Style["W", Italic]}], "", 
             Style["m", Italic], "", 
             Row[{"{", 
               Style["a", Italic], ", ", 
               Style["b", Italic], ", ", 
               Style["c", Italic], "}"}], "", 
             Row[{"{", 
               Style["A", Italic], ", ", 
               Style["B", Italic], ", ", 
               Style["C", Italic], "}"}]}], 
           ItemStyle -> {{
             Black, Black, Black, Red, Black, Blue, Black, Black, Blue, Black,
               Blue, Black, Red, Black, Blue, Black, Purple}, Automatic}, 
           Spacings -> {{
             3, 1, 1, 0, 0, 0.1, 0.3, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1}, 0.5}, 
           Alignment -> {{
             Center, Center, Center, Center, Center, Center, Center, Center, 
              Center, Center, Center, Center, Right, Center, Left, Left, 
              Left}, Automatic}], ImageSize -> 1.3 {450, 275}, 
          Alignment -> {Left, Top}, Scrollbars -> {False, Automatic}], 
         Style[
          Row[{"Derivation of the first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}."}], "Label", Medium], Background -> 
         White]], "Specifications" :> {{{$CellContext`i$$, 1000, 
          Style["i", Italic]}, 1, 1000, 1, Appearance -> "Labeled", 
         ControlPlacement -> 1}, {{$CellContext`mode$$, 1}, {
         1 -> Row[{"graph (", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ")"}], 2 -> Row[{"list {", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ", ", 
             Style["C", Italic], "}"}], 3 -> "Cantor ordering", 4 -> 
          "derivation"}, ControlPlacement -> 2}, {{$CellContext`zoom$$, 2}, 0,
          3, Appearance -> "Labeled", Enabled -> 
         Dynamic[$CellContext`mode$$ == 1], ControlPlacement -> 3}, 
        Grid[{{
           Manipulate`Place[1], 
           Manipulate`Place[2]}, {
           Manipulate`Place[3], 
           Row[{}]}}, Alignment -> {{Right, Left}, Automatic}]}, 
      "Options" :> {}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{642., {246.3544921875, 251.6455078125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`showTriangle[{
          Pattern[$CellContext`color, 
           Blank[]], {
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`b, 
            Blank[]], 
           Pattern[$CellContext`c, 
            Blank[]]}}] := Column[{
          Graphics[{
            EdgeForm[Thick], $CellContext`color, 
            SSSTriangle[$CellContext`b, $CellContext`c, $CellContext`a]}, 
           ImageSize -> 
           Tiny], {$CellContext`a, $CellContext`b, $CellContext`c}}, 
         Center], $CellContext`assignColor[{
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}] := {
         If[
         GCD[$CellContext`a, $CellContext`b, $CellContext`c] == 1, Blue, 
          Red], {$CellContext`a, $CellContext`b, $CellContext`c}}, \
$CellContext`chopLarge[
         Pattern[$CellContext`L, 
          Blank[List]], 
         Pattern[$CellContext`zoom, 
          Blank[]]] := Module[{$CellContext`max}, $CellContext`max = Max[
            Flatten[
             Map[Take[#, 2]& , $CellContext`L]]]; 
         Select[$CellContext`L, And[
           Part[#, 1] <= $CellContext`max/10^$CellContext`zoom, 
            Part[#, 2] <= $CellContext`max/
             10^$CellContext`zoom]& ]], $CellContext`fromIndexToPT[
         Pattern[$CellContext`i, 
          Blank[]]] := $CellContext`fromPairToPT[
         $CellContext`unrankCantor[$CellContext`i]], \
$CellContext`fromPairToPT[{
          Pattern[$CellContext`m, 
           Blank[]], 
          Pattern[$CellContext`n, 
           
           Blank[]]}] := $CellContext`m \
$CellContext`fromIndexToPPT[$CellContext`n], $CellContext`fromIndexToPPT[
         Pattern[$CellContext`n, 
          Blank[]]] := $CellContext`toPPT[
         $CellContext`toCWPair[
          $CellContext`cnn[$CellContext`n]]], $CellContext`toPPT[{
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           Blank[]]}] := {$CellContext`v^2 - $CellContext`u^2, (
          2 $CellContext`u) $CellContext`v, $CellContext`v^2 + \
$CellContext`u^2}, $CellContext`toCWPair[
         Pattern[$CellContext`i, 
          Blank[Integer]]] := Module[{$CellContext`b = Rest[
            IntegerDigits[$CellContext`i, 2]], $CellContext`t = {1, 1}}, 
         Scan[If[# == 0, $CellContext`t = {
              First[$CellContext`t], 
              Total[$CellContext`t]}, $CellContext`t = {
              Total[$CellContext`t], 
              
              Last[$CellContext`t]}]& , $CellContext`b]; $CellContext`t], \
$CellContext`cnn[
         Pattern[$CellContext`n, 
          Blank[]]] := 
       3 $CellContext`n - (1/2) (
         1 - (-1)^$CellContext`n), $CellContext`unrankCantor[
         Pattern[$CellContext`x, 
          Blank[Integer]]] := 
       Module[{$CellContext`k, $CellContext`m, $CellContext`n}, \
$CellContext`k = $CellContext`invTri[$CellContext`x]; $CellContext`n = \
$CellContext`x - $CellContext`Tri[$CellContext`k - 
            1]; $CellContext`m = $CellContext`k - $CellContext`n + 
           1; {$CellContext`m, $CellContext`n}], $CellContext`invTri[
         Pattern[$CellContext`x, 
          Blank[Integer]]] := 
       Ceiling[(1/2) (-1 + Sqrt[1 + 8 $CellContext`x])], $CellContext`Tri[
         Pattern[$CellContext`n, 
          Blank[]]] := ((1/2) $CellContext`n) (
         1 + $CellContext`n), $CellContext`vf[{
          Pattern[$CellContext`xc, 
           Blank[]], 
          Pattern[$CellContext`yc, 
           Blank[]]}, 
         Pattern[$CellContext`name, 
          Blank[]], {
          Pattern[$CellContext`w, 
           Blank[]], 
          Pattern[$CellContext`h, 
           Blank[]]}] := 
       Module[{$CellContext`m, $CellContext`n}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`name]; {
           EdgeForm[None], 
           Hue[0.6 + 0.15 ($CellContext`m + $CellContext`n)], 
           
           Rectangle[{$CellContext`xc, $CellContext`yc} - {0.4, 
            0.17}, {$CellContext`xc, $CellContext`yc} + {0.4, 0.17}, 
            RoundingRadius -> 0.11], Black, 
           Text[
            $CellContext`display[$CellContext`name], {$CellContext`xc, \
$CellContext`yc}]}], $CellContext`display[
         Pattern[$CellContext`i, 
          Blank[Integer]]] := 
       Module[{$CellContext`m, $CellContext`n}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`i]; Tooltip[
           Style[
            Row[{$CellContext`m, 
              Subscript[$CellContext`\[ScriptCapitalP], $CellContext`n]}, 
             " "], 16], 
           Style[
            Row[{$CellContext`i, ": ", $CellContext`m, 
              $CellContext`fromIndexToPPT[$CellContext`n], 
              "=", $CellContext`m \
$CellContext`fromIndexToPPT[$CellContext`n]}, " "], 14]]], $CellContext`ef[
         Pattern[$CellContext`lines, 
          BlankSequence[]], 
         Pattern[$CellContext`edge, 
          Blank[]]] := 
       Module[{$CellContext`x1, $CellContext`y1, $CellContext`x2, \
$CellContext`y2}, {$CellContext`x1, $CellContext`y1} = {
            1, -1} $CellContext`unrankCantor[
             
             Part[$CellContext`edge, 
              1]]; {$CellContext`x2, $CellContext`y2} = {
            1, -1} $CellContext`unrankCantor[
             Part[$CellContext`edge, 2]]; {
           If[$CellContext`x1 == 1, Red, Blue], 
           Arrowheads[Medium], 
           
           Arrow[{{$CellContext`x1, $CellContext`y1}, {$CellContext`x2, \
$CellContext`y2}}, 0.35]}], $CellContext`derivation[
         Pattern[$CellContext`i, 
          Blank[]]] := 
       Module[{$CellContext`n, $CellContext`m}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`i]; {$CellContext`i, 
           ":", "{", $CellContext`m, ",", $CellContext`n, "}", ":", 
           $CellContext`cnn[$CellContext`n], ":", 
           $CellContext`toCWPair[
            $CellContext`cnn[$CellContext`n]], ":", $CellContext`m, 
           "\[Times]", 
           $CellContext`fromIndexToPPT[$CellContext`n], "=", 
           $CellContext`fromIndexToPT[$CellContext`i]}]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->242137121,ExpressionUUID->"34b13d5c-4b31-4fff-bab0-1bb763d870b5"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 50, $CellContext`mode$$ = 
    2, $CellContext`zoom$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 50, 
       Style["i", Italic]}, 1, 1000, 1}, {{
       Hold[$CellContext`mode$$], 2}, {1 -> Row[{"graph (", 
          Style["A", Italic], ", ", 
          Style["B", Italic], ")"}], 2 -> Row[{"list {", 
          Style["A", Italic], ", ", 
          Style["B", Italic], ", ", 
          Style["C", Italic], "}"}], 3 -> "Cantor ordering", 4 -> 
       "derivation"}}, {
      Hold[$CellContext`zoom$$], 0, 3}, {
      Hold[
       Grid[{{
          Manipulate`Place[1], 
          Manipulate`Place[2]}, {
          Manipulate`Place[3], 
          Row[{}]}}, Alignment -> {{Right, Left}, Automatic}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    585., {177., 197.4953125}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`i$$ = 50, $CellContext`mode$$ = 
        2, $CellContext`zoom$$ = 0}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Switch[$CellContext`mode$$, 1, 
        Panel[
         ListPlot[
          Map[Tooltip[
            Most[
             Part[#, 2]], 
            $CellContext`showTriangle[#]]& , 
           GatherBy[
            Map[$CellContext`assignColor, 
             $CellContext`chopLarge[
              Map[$CellContext`fromIndexToPT, 
               Range[$CellContext`i$$]], $CellContext`zoom$$]], First], {2}], 
          PlotStyle -> {Blue, Red}, AxesLabel -> {
            Style["A", Italic], 
            Style["B", Italic]}, AspectRatio -> 1, ImageSize -> 
          1.3 {450, 275}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}", "."}], "Label", Medium], Alignment -> 
         Center, Background -> White], 2, 
        Panel[
         Pane[
          Map[$CellContext`fromIndexToPT, 
           Range[$CellContext`i$$]], ImageSize -> {450, 275}, ImageSizeAction -> 
          "Scrollable", Scrollbars -> {False, Automatic}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}."}], "Label", Medium], ImageSize -> 
         1.3 {450, 275}, Alignment -> Center, Background -> White], 3, 
        Panel[
         Pane[
          Graph[
           Table[
            
            DirectedEdge[$CellContext`k, $CellContext`k + 1], {$CellContext`k,
              1, $CellContext`i$$ - 1}], VertexCoordinates -> 
           Map[# -> {1, -1} $CellContext`unrankCantor[#]& , 
             Range[$CellContext`i$$]], VertexShapeFunction -> $CellContext`vf,
            EdgeShapeFunction -> $CellContext`ef, AspectRatio -> 0.7, 
           ImageSize -> 50 Total[
              $CellContext`unrankCantor[$CellContext`i$$]]], ImageSize -> 
          1.3 {450, 275}, ImageSizeAction -> "Scrollable", 
          Scrollbars -> {Automatic, Automatic}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], 
            " Pythagorean triples shown in Cantor diagonalization order."}], 
          "Label", Medium], ImageSize -> 1.3 {450, 275}, Alignment -> Center, 
         Background -> White], 4, 
        Panel[
         Pane[
          Grid[
           Prepend[
            Map[$CellContext`derivation, 
             Range[$CellContext`i$$]], {
             Style["i", Italic], "", "", 
             Style["m", Italic], "", 
             Style["n", Italic], "", "", 
             Row[{"cnn(", 
               Style["n", Italic], ")"}], "", 
             Row[{
               Style["C", Italic], "-", 
               Style["W", Italic]}], "", 
             Style["m", Italic], "", 
             Row[{"{", 
               Style["a", Italic], ", ", 
               Style["b", Italic], ", ", 
               Style["c", Italic], "}"}], "", 
             Row[{"{", 
               Style["A", Italic], ", ", 
               Style["B", Italic], ", ", 
               Style["C", Italic], "}"}]}], 
           ItemStyle -> {{
             Black, Black, Black, Red, Black, Blue, Black, Black, Blue, Black,
               Blue, Black, Red, Black, Blue, Black, Purple}, Automatic}, 
           Spacings -> {{
             3, 1, 1, 0, 0, 0.1, 0.3, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1}, 0.5}, 
           Alignment -> {{
             Center, Center, Center, Center, Center, Center, Center, Center, 
              Center, Center, Center, Center, Right, Center, Left, Left, 
              Left}, Automatic}], ImageSize -> 1.3 {450, 275}, 
          Alignment -> {Left, Top}, Scrollbars -> {False, Automatic}], 
         Style[
          Row[{"Derivation of the first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}."}], "Label", Medium], Background -> 
         White]], "Specifications" :> {{{$CellContext`i$$, 50, 
          Style["i", Italic]}, 1, 1000, 1, Appearance -> "Labeled", 
         ControlPlacement -> 1}, {{$CellContext`mode$$, 2}, {
         1 -> Row[{"graph (", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ")"}], 2 -> Row[{"list {", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ", ", 
             Style["C", Italic], "}"}], 3 -> "Cantor ordering", 4 -> 
          "derivation"}, ControlPlacement -> 2}, {$CellContext`zoom$$, 0, 3, 
         Appearance -> "Labeled", Enabled -> 
         Dynamic[$CellContext`mode$$ == 1], ControlPlacement -> 3}, 
        Grid[{{
           Manipulate`Place[1], 
           Manipulate`Place[2]}, {
           Manipulate`Place[3], 
           Row[{}]}}, Alignment -> {{Right, Left}, Automatic}]}, 
      "Options" :> {}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{630., {238.3544921875, 243.6455078125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`showTriangle[{
          Pattern[$CellContext`color, 
           Blank[]], {
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`b, 
            Blank[]], 
           Pattern[$CellContext`c, 
            Blank[]]}}] := Column[{
          Graphics[{
            EdgeForm[Thick], $CellContext`color, 
            SSSTriangle[$CellContext`b, $CellContext`c, $CellContext`a]}, 
           ImageSize -> 
           Tiny], {$CellContext`a, $CellContext`b, $CellContext`c}}, 
         Center], $CellContext`assignColor[{
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}] := {
         If[
         GCD[$CellContext`a, $CellContext`b, $CellContext`c] == 1, Blue, 
          Red], {$CellContext`a, $CellContext`b, $CellContext`c}}, \
$CellContext`chopLarge[
         Pattern[$CellContext`L, 
          Blank[List]], 
         Pattern[$CellContext`zoom, 
          Blank[]]] := Module[{$CellContext`max}, $CellContext`max = Max[
            Flatten[
             Map[Take[#, 2]& , $CellContext`L]]]; 
         Select[$CellContext`L, And[
           Part[#, 1] <= $CellContext`max/10^$CellContext`zoom, 
            Part[#, 2] <= $CellContext`max/
             10^$CellContext`zoom]& ]], $CellContext`fromIndexToPT[
         Pattern[$CellContext`i, 
          Blank[]]] := $CellContext`fromPairToPT[
         $CellContext`unrankCantor[$CellContext`i]], \
$CellContext`fromPairToPT[{
          Pattern[$CellContext`m, 
           Blank[]], 
          Pattern[$CellContext`n, 
           
           Blank[]]}] := $CellContext`m \
$CellContext`fromIndexToPPT[$CellContext`n], $CellContext`fromIndexToPPT[
         Pattern[$CellContext`n, 
          Blank[]]] := $CellContext`toPPT[
         $CellContext`toCWPair[
          $CellContext`cnn[$CellContext`n]]], $CellContext`toPPT[{
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           Blank[]]}] := {$CellContext`v^2 - $CellContext`u^2, (
          2 $CellContext`u) $CellContext`v, $CellContext`v^2 + \
$CellContext`u^2}, $CellContext`toCWPair[
         Pattern[$CellContext`i, 
          Blank[Integer]]] := Module[{$CellContext`b = Rest[
            IntegerDigits[$CellContext`i, 2]], $CellContext`t = {1, 1}}, 
         Scan[If[# == 0, $CellContext`t = {
              First[$CellContext`t], 
              Total[$CellContext`t]}, $CellContext`t = {
              Total[$CellContext`t], 
              
              Last[$CellContext`t]}]& , $CellContext`b]; $CellContext`t], \
$CellContext`cnn[
         Pattern[$CellContext`n, 
          Blank[]]] := 
       3 $CellContext`n - (1/2) (
         1 - (-1)^$CellContext`n), $CellContext`unrankCantor[
         Pattern[$CellContext`x, 
          Blank[Integer]]] := 
       Module[{$CellContext`k, $CellContext`m, $CellContext`n}, \
$CellContext`k = $CellContext`invTri[$CellContext`x]; $CellContext`n = \
$CellContext`x - $CellContext`Tri[$CellContext`k - 
            1]; $CellContext`m = $CellContext`k - $CellContext`n + 
           1; {$CellContext`m, $CellContext`n}], $CellContext`invTri[
         Pattern[$CellContext`x, 
          Blank[Integer]]] := 
       Ceiling[(1/2) (-1 + Sqrt[1 + 8 $CellContext`x])], $CellContext`Tri[
         Pattern[$CellContext`n, 
          Blank[]]] := ((1/2) $CellContext`n) (
         1 + $CellContext`n), $CellContext`vf[{
          Pattern[$CellContext`xc, 
           Blank[]], 
          Pattern[$CellContext`yc, 
           Blank[]]}, 
         Pattern[$CellContext`name, 
          Blank[]], {
          Pattern[$CellContext`w, 
           Blank[]], 
          Pattern[$CellContext`h, 
           Blank[]]}] := 
       Module[{$CellContext`m, $CellContext`n}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`name]; {
           EdgeForm[None], 
           Hue[0.6 + 0.15 ($CellContext`m + $CellContext`n)], 
           
           Rectangle[{$CellContext`xc, $CellContext`yc} - {0.4, 
            0.17}, {$CellContext`xc, $CellContext`yc} + {0.4, 0.17}, 
            RoundingRadius -> 0.11], Black, 
           Text[
            $CellContext`display[$CellContext`name], {$CellContext`xc, \
$CellContext`yc}]}], $CellContext`display[
         Pattern[$CellContext`i, 
          Blank[Integer]]] := 
       Module[{$CellContext`m, $CellContext`n}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`i]; Tooltip[
           Style[
            Row[{$CellContext`m, 
              Subscript[$CellContext`\[ScriptCapitalP], $CellContext`n]}, 
             " "], 16], 
           Style[
            Row[{$CellContext`i, ": ", $CellContext`m, 
              $CellContext`fromIndexToPPT[$CellContext`n], 
              "=", $CellContext`m \
$CellContext`fromIndexToPPT[$CellContext`n]}, " "], 14]]], $CellContext`ef[
         Pattern[$CellContext`lines, 
          BlankSequence[]], 
         Pattern[$CellContext`edge, 
          Blank[]]] := 
       Module[{$CellContext`x1, $CellContext`y1, $CellContext`x2, \
$CellContext`y2}, {$CellContext`x1, $CellContext`y1} = {
            1, -1} $CellContext`unrankCantor[
             
             Part[$CellContext`edge, 
              1]]; {$CellContext`x2, $CellContext`y2} = {
            1, -1} $CellContext`unrankCantor[
             Part[$CellContext`edge, 2]]; {
           If[$CellContext`x1 == 1, Red, Blue], 
           Arrowheads[Medium], 
           
           Arrow[{{$CellContext`x1, $CellContext`y1}, {$CellContext`x2, \
$CellContext`y2}}, 0.35]}], $CellContext`derivation[
         Pattern[$CellContext`i, 
          Blank[]]] := 
       Module[{$CellContext`n, $CellContext`m}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`i]; {$CellContext`i, 
           ":", "{", $CellContext`m, ",", $CellContext`n, "}", ":", 
           $CellContext`cnn[$CellContext`n], ":", 
           $CellContext`toCWPair[
            $CellContext`cnn[$CellContext`n]], ":", $CellContext`m, 
           "\[Times]", 
           $CellContext`fromIndexToPPT[$CellContext`n], "=", 
           $CellContext`fromIndexToPT[$CellContext`i]}]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->117081582,ExpressionUUID->"adf7b408-bdc4-40af-b73e-0d606c37d796"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 50, $CellContext`mode$$ = 
    3, $CellContext`zoom$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 50, 
       Style["i", Italic]}, 1, 1000, 1}, {{
       Hold[$CellContext`mode$$], 3}, {1 -> Row[{"graph (", 
          Style["A", Italic], ", ", 
          Style["B", Italic], ")"}], 2 -> Row[{"list {", 
          Style["A", Italic], ", ", 
          Style["B", Italic], ", ", 
          Style["C", Italic], "}"}], 3 -> "Cantor ordering", 4 -> 
       "derivation"}}, {
      Hold[$CellContext`zoom$$], 0, 3}, {
      Hold[
       Grid[{{
          Manipulate`Place[1], 
          Manipulate`Place[2]}, {
          Manipulate`Place[3], 
          Row[{}]}}, Alignment -> {{Right, Left}, Automatic}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    585., {177., 197.454296875}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`i$$ = 50, $CellContext`mode$$ = 
        3, $CellContext`zoom$$ = 0}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Switch[$CellContext`mode$$, 1, 
        Panel[
         ListPlot[
          Map[Tooltip[
            Most[
             Part[#, 2]], 
            $CellContext`showTriangle[#]]& , 
           GatherBy[
            Map[$CellContext`assignColor, 
             $CellContext`chopLarge[
              Map[$CellContext`fromIndexToPT, 
               Range[$CellContext`i$$]], $CellContext`zoom$$]], First], {2}], 
          PlotStyle -> {Blue, Red}, AxesLabel -> {
            Style["A", Italic], 
            Style["B", Italic]}, AspectRatio -> 1, ImageSize -> 
          1.3 {450, 275}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}", "."}], "Label", Medium], Alignment -> 
         Center, Background -> White], 2, 
        Panel[
         Pane[
          Map[$CellContext`fromIndexToPT, 
           Range[$CellContext`i$$]], ImageSize -> {450, 275}, ImageSizeAction -> 
          "Scrollable", Scrollbars -> {False, Automatic}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}."}], "Label", Medium], ImageSize -> 
         1.3 {450, 275}, Alignment -> Center, Background -> White], 3, 
        Panel[
         Pane[
          Graph[
           Table[
            
            DirectedEdge[$CellContext`k, $CellContext`k + 1], {$CellContext`k,
              1, $CellContext`i$$ - 1}], VertexCoordinates -> 
           Map[# -> {1, -1} $CellContext`unrankCantor[#]& , 
             Range[$CellContext`i$$]], VertexShapeFunction -> $CellContext`vf,
            EdgeShapeFunction -> $CellContext`ef, AspectRatio -> 0.7, 
           ImageSize -> 50 Total[
              $CellContext`unrankCantor[$CellContext`i$$]]], ImageSize -> 
          1.3 {450, 275}, ImageSizeAction -> "Scrollable", 
          Scrollbars -> {Automatic, Automatic}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], 
            " Pythagorean triples shown in Cantor diagonalization order."}], 
          "Label", Medium], ImageSize -> 1.3 {450, 275}, Alignment -> Center, 
         Background -> White], 4, 
        Panel[
         Pane[
          Grid[
           Prepend[
            Map[$CellContext`derivation, 
             Range[$CellContext`i$$]], {
             Style["i", Italic], "", "", 
             Style["m", Italic], "", 
             Style["n", Italic], "", "", 
             Row[{"cnn(", 
               Style["n", Italic], ")"}], "", 
             Row[{
               Style["C", Italic], "-", 
               Style["W", Italic]}], "", 
             Style["m", Italic], "", 
             Row[{"{", 
               Style["a", Italic], ", ", 
               Style["b", Italic], ", ", 
               Style["c", Italic], "}"}], "", 
             Row[{"{", 
               Style["A", Italic], ", ", 
               Style["B", Italic], ", ", 
               Style["C", Italic], "}"}]}], 
           ItemStyle -> {{
             Black, Black, Black, Red, Black, Blue, Black, Black, Blue, Black,
               Blue, Black, Red, Black, Blue, Black, Purple}, Automatic}, 
           Spacings -> {{
             3, 1, 1, 0, 0, 0.1, 0.3, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1}, 0.5}, 
           Alignment -> {{
             Center, Center, Center, Center, Center, Center, Center, Center, 
              Center, Center, Center, Center, Right, Center, Left, Left, 
              Left}, Automatic}], ImageSize -> 1.3 {450, 275}, 
          Alignment -> {Left, Top}, Scrollbars -> {False, Automatic}], 
         Style[
          Row[{"Derivation of the first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}."}], "Label", Medium], Background -> 
         White]], "Specifications" :> {{{$CellContext`i$$, 50, 
          Style["i", Italic]}, 1, 1000, 1, Appearance -> "Labeled", 
         ControlPlacement -> 1}, {{$CellContext`mode$$, 3}, {
         1 -> Row[{"graph (", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ")"}], 2 -> Row[{"list {", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ", ", 
             Style["C", Italic], "}"}], 3 -> "Cantor ordering", 4 -> 
          "derivation"}, ControlPlacement -> 2}, {$CellContext`zoom$$, 0, 3, 
         Appearance -> "Labeled", Enabled -> 
         Dynamic[$CellContext`mode$$ == 1], ControlPlacement -> 3}, 
        Grid[{{
           Manipulate`Place[1], 
           Manipulate`Place[2]}, {
           Manipulate`Place[3], 
           Row[{}]}}, Alignment -> {{Right, Left}, Automatic}]}, 
      "Options" :> {}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{630., {238.3544921875, 243.6455078125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`showTriangle[{
          Pattern[$CellContext`color, 
           Blank[]], {
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`b, 
            Blank[]], 
           Pattern[$CellContext`c, 
            Blank[]]}}] := Column[{
          Graphics[{
            EdgeForm[Thick], $CellContext`color, 
            SSSTriangle[$CellContext`b, $CellContext`c, $CellContext`a]}, 
           ImageSize -> 
           Tiny], {$CellContext`a, $CellContext`b, $CellContext`c}}, 
         Center], $CellContext`assignColor[{
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}] := {
         If[
         GCD[$CellContext`a, $CellContext`b, $CellContext`c] == 1, Blue, 
          Red], {$CellContext`a, $CellContext`b, $CellContext`c}}, \
$CellContext`chopLarge[
         Pattern[$CellContext`L, 
          Blank[List]], 
         Pattern[$CellContext`zoom, 
          Blank[]]] := Module[{$CellContext`max}, $CellContext`max = Max[
            Flatten[
             Map[Take[#, 2]& , $CellContext`L]]]; 
         Select[$CellContext`L, And[
           Part[#, 1] <= $CellContext`max/10^$CellContext`zoom, 
            Part[#, 2] <= $CellContext`max/
             10^$CellContext`zoom]& ]], $CellContext`fromIndexToPT[
         Pattern[$CellContext`i, 
          Blank[]]] := $CellContext`fromPairToPT[
         $CellContext`unrankCantor[$CellContext`i]], \
$CellContext`fromPairToPT[{
          Pattern[$CellContext`m, 
           Blank[]], 
          Pattern[$CellContext`n, 
           
           Blank[]]}] := $CellContext`m \
$CellContext`fromIndexToPPT[$CellContext`n], $CellContext`fromIndexToPPT[
         Pattern[$CellContext`n, 
          Blank[]]] := $CellContext`toPPT[
         $CellContext`toCWPair[
          $CellContext`cnn[$CellContext`n]]], $CellContext`toPPT[{
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           Blank[]]}] := {$CellContext`v^2 - $CellContext`u^2, (
          2 $CellContext`u) $CellContext`v, $CellContext`v^2 + \
$CellContext`u^2}, $CellContext`toCWPair[
         Pattern[$CellContext`i, 
          Blank[Integer]]] := Module[{$CellContext`b = Rest[
            IntegerDigits[$CellContext`i, 2]], $CellContext`t = {1, 1}}, 
         Scan[If[# == 0, $CellContext`t = {
              First[$CellContext`t], 
              Total[$CellContext`t]}, $CellContext`t = {
              Total[$CellContext`t], 
              
              Last[$CellContext`t]}]& , $CellContext`b]; $CellContext`t], \
$CellContext`cnn[
         Pattern[$CellContext`n, 
          Blank[]]] := 
       3 $CellContext`n - (1/2) (
         1 - (-1)^$CellContext`n), $CellContext`unrankCantor[
         Pattern[$CellContext`x, 
          Blank[Integer]]] := 
       Module[{$CellContext`k, $CellContext`m, $CellContext`n}, \
$CellContext`k = $CellContext`invTri[$CellContext`x]; $CellContext`n = \
$CellContext`x - $CellContext`Tri[$CellContext`k - 
            1]; $CellContext`m = $CellContext`k - $CellContext`n + 
           1; {$CellContext`m, $CellContext`n}], $CellContext`invTri[
         Pattern[$CellContext`x, 
          Blank[Integer]]] := 
       Ceiling[(1/2) (-1 + Sqrt[1 + 8 $CellContext`x])], $CellContext`Tri[
         Pattern[$CellContext`n, 
          Blank[]]] := ((1/2) $CellContext`n) (
         1 + $CellContext`n), $CellContext`vf[{
          Pattern[$CellContext`xc, 
           Blank[]], 
          Pattern[$CellContext`yc, 
           Blank[]]}, 
         Pattern[$CellContext`name, 
          Blank[]], {
          Pattern[$CellContext`w, 
           Blank[]], 
          Pattern[$CellContext`h, 
           Blank[]]}] := 
       Module[{$CellContext`m, $CellContext`n}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`name]; {
           EdgeForm[None], 
           Hue[0.6 + 0.15 ($CellContext`m + $CellContext`n)], 
           
           Rectangle[{$CellContext`xc, $CellContext`yc} - {0.4, 
            0.17}, {$CellContext`xc, $CellContext`yc} + {0.4, 0.17}, 
            RoundingRadius -> 0.11], Black, 
           Text[
            $CellContext`display[$CellContext`name], {$CellContext`xc, \
$CellContext`yc}]}], $CellContext`display[
         Pattern[$CellContext`i, 
          Blank[Integer]]] := 
       Module[{$CellContext`m, $CellContext`n}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`i]; Tooltip[
           Style[
            Row[{$CellContext`m, 
              Subscript[$CellContext`\[ScriptCapitalP], $CellContext`n]}, 
             " "], 16], 
           Style[
            Row[{$CellContext`i, ": ", $CellContext`m, 
              $CellContext`fromIndexToPPT[$CellContext`n], 
              "=", $CellContext`m \
$CellContext`fromIndexToPPT[$CellContext`n]}, " "], 14]]], $CellContext`ef[
         Pattern[$CellContext`lines, 
          BlankSequence[]], 
         Pattern[$CellContext`edge, 
          Blank[]]] := 
       Module[{$CellContext`x1, $CellContext`y1, $CellContext`x2, \
$CellContext`y2}, {$CellContext`x1, $CellContext`y1} = {
            1, -1} $CellContext`unrankCantor[
             
             Part[$CellContext`edge, 
              1]]; {$CellContext`x2, $CellContext`y2} = {
            1, -1} $CellContext`unrankCantor[
             Part[$CellContext`edge, 2]]; {
           If[$CellContext`x1 == 1, Red, Blue], 
           Arrowheads[Medium], 
           
           Arrow[{{$CellContext`x1, $CellContext`y1}, {$CellContext`x2, \
$CellContext`y2}}, 0.35]}], $CellContext`derivation[
         Pattern[$CellContext`i, 
          Blank[]]] := 
       Module[{$CellContext`n, $CellContext`m}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`i]; {$CellContext`i, 
           ":", "{", $CellContext`m, ",", $CellContext`n, "}", ":", 
           $CellContext`cnn[$CellContext`n], ":", 
           $CellContext`toCWPair[
            $CellContext`cnn[$CellContext`n]], ":", $CellContext`m, 
           "\[Times]", 
           $CellContext`fromIndexToPPT[$CellContext`n], "=", 
           $CellContext`fromIndexToPT[$CellContext`i]}]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->695128022,ExpressionUUID->"f81e140c-d741-4f47-8648-28777556eb6e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 50, $CellContext`mode$$ = 
    4, $CellContext`zoom$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 50, 
       Style["i", Italic]}, 1, 1000, 1}, {{
       Hold[$CellContext`mode$$], 4}, {1 -> Row[{"graph (", 
          Style["A", Italic], ", ", 
          Style["B", Italic], ")"}], 2 -> Row[{"list {", 
          Style["A", Italic], ", ", 
          Style["B", Italic], ", ", 
          Style["C", Italic], "}"}], 3 -> "Cantor ordering", 4 -> 
       "derivation"}}, {
      Hold[$CellContext`zoom$$], 0, 3}, {
      Hold[
       Grid[{{
          Manipulate`Place[1], 
          Manipulate`Place[2]}, {
          Manipulate`Place[3], 
          Row[{}]}}, Alignment -> {{Right, Left}, Automatic}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    597., {185., 205.4953125}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`i$$ = 50, $CellContext`mode$$ = 
        4, $CellContext`zoom$$ = 0}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Switch[$CellContext`mode$$, 1, 
        Panel[
         ListPlot[
          Map[Tooltip[
            Most[
             Part[#, 2]], 
            $CellContext`showTriangle[#]]& , 
           GatherBy[
            Map[$CellContext`assignColor, 
             $CellContext`chopLarge[
              Map[$CellContext`fromIndexToPT, 
               Range[$CellContext`i$$]], $CellContext`zoom$$]], First], {2}], 
          PlotStyle -> {Blue, Red}, AxesLabel -> {
            Style["A", Italic], 
            Style["B", Italic]}, AspectRatio -> 1, ImageSize -> 
          1.3 {450, 275}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}", "."}], "Label", Medium], Alignment -> 
         Center, Background -> White], 2, 
        Panel[
         Pane[
          Map[$CellContext`fromIndexToPT, 
           Range[$CellContext`i$$]], ImageSize -> {450, 275}, ImageSizeAction -> 
          "Scrollable", Scrollbars -> {False, Automatic}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}."}], "Label", Medium], ImageSize -> 
         1.3 {450, 275}, Alignment -> Center, Background -> White], 3, 
        Panel[
         Pane[
          Graph[
           Table[
            
            DirectedEdge[$CellContext`k, $CellContext`k + 1], {$CellContext`k,
              1, $CellContext`i$$ - 1}], VertexCoordinates -> 
           Map[# -> {1, -1} $CellContext`unrankCantor[#]& , 
             Range[$CellContext`i$$]], VertexShapeFunction -> $CellContext`vf,
            EdgeShapeFunction -> $CellContext`ef, AspectRatio -> 0.7, 
           ImageSize -> 50 Total[
              $CellContext`unrankCantor[$CellContext`i$$]]], ImageSize -> 
          1.3 {450, 275}, ImageSizeAction -> "Scrollable", 
          Scrollbars -> {Automatic, Automatic}], 
         Style[
          Row[{"The first ", 
            ToString[$CellContext`i$$], 
            " Pythagorean triples shown in Cantor diagonalization order."}], 
          "Label", Medium], ImageSize -> 1.3 {450, 275}, Alignment -> Center, 
         Background -> White], 4, 
        Panel[
         Pane[
          Grid[
           Prepend[
            Map[$CellContext`derivation, 
             Range[$CellContext`i$$]], {
             Style["i", Italic], "", "", 
             Style["m", Italic], "", 
             Style["n", Italic], "", "", 
             Row[{"cnn(", 
               Style["n", Italic], ")"}], "", 
             Row[{
               Style["C", Italic], "-", 
               Style["W", Italic]}], "", 
             Style["m", Italic], "", 
             Row[{"{", 
               Style["a", Italic], ", ", 
               Style["b", Italic], ", ", 
               Style["c", Italic], "}"}], "", 
             Row[{"{", 
               Style["A", Italic], ", ", 
               Style["B", Italic], ", ", 
               Style["C", Italic], "}"}]}], 
           ItemStyle -> {{
             Black, Black, Black, Red, Black, Blue, Black, Black, Blue, Black,
               Blue, Black, Red, Black, Blue, Black, Purple}, Automatic}, 
           Spacings -> {{
             3, 1, 1, 0, 0, 0.1, 0.3, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1}, 0.5}, 
           Alignment -> {{
             Center, Center, Center, Center, Center, Center, Center, Center, 
              Center, Center, Center, Center, Right, Center, Left, Left, 
              Left}, Automatic}], ImageSize -> 1.3 {450, 275}, 
          Alignment -> {Left, Top}, Scrollbars -> {False, Automatic}], 
         Style[
          Row[{"Derivation of the first ", 
            ToString[$CellContext`i$$], " Pythagorean triples {", 
            Style["A", Italic], ", ", 
            Style["B", Italic], ", ", 
            Style["C", Italic], "}."}], "Label", Medium], Background -> 
         White]], "Specifications" :> {{{$CellContext`i$$, 50, 
          Style["i", Italic]}, 1, 1000, 1, Appearance -> "Labeled", 
         ControlPlacement -> 1}, {{$CellContext`mode$$, 4}, {
         1 -> Row[{"graph (", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ")"}], 2 -> Row[{"list {", 
             Style["A", Italic], ", ", 
             Style["B", Italic], ", ", 
             Style["C", Italic], "}"}], 3 -> "Cantor ordering", 4 -> 
          "derivation"}, ControlPlacement -> 2}, {$CellContext`zoom$$, 0, 3, 
         Appearance -> "Labeled", Enabled -> 
         Dynamic[$CellContext`mode$$ == 1], ControlPlacement -> 3}, 
        Grid[{{
           Manipulate`Place[1], 
           Manipulate`Place[2]}, {
           Manipulate`Place[3], 
           Row[{}]}}, Alignment -> {{Right, Left}, Automatic}]}, 
      "Options" :> {}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{642., {246.3544921875, 251.6455078125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`showTriangle[{
          Pattern[$CellContext`color, 
           Blank[]], {
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`b, 
            Blank[]], 
           Pattern[$CellContext`c, 
            Blank[]]}}] := Column[{
          Graphics[{
            EdgeForm[Thick], $CellContext`color, 
            SSSTriangle[$CellContext`b, $CellContext`c, $CellContext`a]}, 
           ImageSize -> 
           Tiny], {$CellContext`a, $CellContext`b, $CellContext`c}}, 
         Center], $CellContext`assignColor[{
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]]}] := {
         If[
         GCD[$CellContext`a, $CellContext`b, $CellContext`c] == 1, Blue, 
          Red], {$CellContext`a, $CellContext`b, $CellContext`c}}, \
$CellContext`chopLarge[
         Pattern[$CellContext`L, 
          Blank[List]], 
         Pattern[$CellContext`zoom, 
          Blank[]]] := Module[{$CellContext`max}, $CellContext`max = Max[
            Flatten[
             Map[Take[#, 2]& , $CellContext`L]]]; 
         Select[$CellContext`L, And[
           Part[#, 1] <= $CellContext`max/10^$CellContext`zoom, 
            Part[#, 2] <= $CellContext`max/
             10^$CellContext`zoom]& ]], $CellContext`fromIndexToPT[
         Pattern[$CellContext`i, 
          Blank[]]] := $CellContext`fromPairToPT[
         $CellContext`unrankCantor[$CellContext`i]], \
$CellContext`fromPairToPT[{
          Pattern[$CellContext`m, 
           Blank[]], 
          Pattern[$CellContext`n, 
           
           Blank[]]}] := $CellContext`m \
$CellContext`fromIndexToPPT[$CellContext`n], $CellContext`fromIndexToPPT[
         Pattern[$CellContext`n, 
          Blank[]]] := $CellContext`toPPT[
         $CellContext`toCWPair[
          $CellContext`cnn[$CellContext`n]]], $CellContext`toPPT[{
          Pattern[$CellContext`u, 
           Blank[]], 
          Pattern[$CellContext`v, 
           Blank[]]}] := {$CellContext`v^2 - $CellContext`u^2, (
          2 $CellContext`u) $CellContext`v, $CellContext`v^2 + \
$CellContext`u^2}, $CellContext`toCWPair[
         Pattern[$CellContext`i, 
          Blank[Integer]]] := Module[{$CellContext`b = Rest[
            IntegerDigits[$CellContext`i, 2]], $CellContext`t = {1, 1}}, 
         Scan[If[# == 0, $CellContext`t = {
              First[$CellContext`t], 
              Total[$CellContext`t]}, $CellContext`t = {
              Total[$CellContext`t], 
              
              Last[$CellContext`t]}]& , $CellContext`b]; $CellContext`t], \
$CellContext`cnn[
         Pattern[$CellContext`n, 
          Blank[]]] := 
       3 $CellContext`n - (1/2) (
         1 - (-1)^$CellContext`n), $CellContext`unrankCantor[
         Pattern[$CellContext`x, 
          Blank[Integer]]] := 
       Module[{$CellContext`k, $CellContext`m, $CellContext`n}, \
$CellContext`k = $CellContext`invTri[$CellContext`x]; $CellContext`n = \
$CellContext`x - $CellContext`Tri[$CellContext`k - 
            1]; $CellContext`m = $CellContext`k - $CellContext`n + 
           1; {$CellContext`m, $CellContext`n}], $CellContext`invTri[
         Pattern[$CellContext`x, 
          Blank[Integer]]] := 
       Ceiling[(1/2) (-1 + Sqrt[1 + 8 $CellContext`x])], $CellContext`Tri[
         Pattern[$CellContext`n, 
          Blank[]]] := ((1/2) $CellContext`n) (
         1 + $CellContext`n), $CellContext`vf[{
          Pattern[$CellContext`xc, 
           Blank[]], 
          Pattern[$CellContext`yc, 
           Blank[]]}, 
         Pattern[$CellContext`name, 
          Blank[]], {
          Pattern[$CellContext`w, 
           Blank[]], 
          Pattern[$CellContext`h, 
           Blank[]]}] := 
       Module[{$CellContext`m, $CellContext`n}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`name]; {
           EdgeForm[None], 
           Hue[0.6 + 0.15 ($CellContext`m + $CellContext`n)], 
           
           Rectangle[{$CellContext`xc, $CellContext`yc} - {0.4, 
            0.17}, {$CellContext`xc, $CellContext`yc} + {0.4, 0.17}, 
            RoundingRadius -> 0.11], Black, 
           Text[
            $CellContext`display[$CellContext`name], {$CellContext`xc, \
$CellContext`yc}]}], $CellContext`display[
         Pattern[$CellContext`i, 
          Blank[Integer]]] := 
       Module[{$CellContext`m, $CellContext`n}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`i]; Tooltip[
           Style[
            Row[{$CellContext`m, 
              Subscript[$CellContext`\[ScriptCapitalP], $CellContext`n]}, 
             " "], 16], 
           Style[
            Row[{$CellContext`i, ": ", $CellContext`m, 
              $CellContext`fromIndexToPPT[$CellContext`n], 
              "=", $CellContext`m \
$CellContext`fromIndexToPPT[$CellContext`n]}, " "], 14]]], $CellContext`ef[
         Pattern[$CellContext`lines, 
          BlankSequence[]], 
         Pattern[$CellContext`edge, 
          Blank[]]] := 
       Module[{$CellContext`x1, $CellContext`y1, $CellContext`x2, \
$CellContext`y2}, {$CellContext`x1, $CellContext`y1} = {
            1, -1} $CellContext`unrankCantor[
             
             Part[$CellContext`edge, 
              1]]; {$CellContext`x2, $CellContext`y2} = {
            1, -1} $CellContext`unrankCantor[
             Part[$CellContext`edge, 2]]; {
           If[$CellContext`x1 == 1, Red, Blue], 
           Arrowheads[Medium], 
           
           Arrow[{{$CellContext`x1, $CellContext`y1}, {$CellContext`x2, \
$CellContext`y2}}, 0.35]}], $CellContext`derivation[
         Pattern[$CellContext`i, 
          Blank[]]] := 
       Module[{$CellContext`n, $CellContext`m}, {$CellContext`m, \
$CellContext`n} = $CellContext`unrankCantor[$CellContext`i]; {$CellContext`i, 
           ":", "{", $CellContext`m, ",", $CellContext`n, "}", ":", 
           $CellContext`cnn[$CellContext`n], ":", 
           $CellContext`toCWPair[
            $CellContext`cnn[$CellContext`n]], ":", $CellContext`m, 
           "\[Times]", 
           $CellContext`fromIndexToPPT[$CellContext`n], "=", 
           $CellContext`fromIndexToPT[$CellContext`i]}]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->705626074,ExpressionUUID->"d2ef2603-a455-4d6c-9aa7-011f40536bac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details",
 StyleBox[" (optional) ", "SectionGloss"],
 Cell[BoxData[
  TemplateBox[{"Details", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{
         "This optional section is for a more detailed description of the \
Demonstration than the caption, but it should still be as concise as \
possible. This section may also include numbered snapshot captions (e.g., \
Snapshot 1: phrase or sentence without an initial capital and without a \
period, unless more than one sentence is used) and explanations of the ", 
          StyleBox["Manipulate", "MRbig"], 
          " control labels. Define any symbols undefined so far. Include only \
text in this section \[LongDash] no code, graphics, etc. Do not change the \
cell style or copy cells from other sections. \n\nA book reference uses this \
format: \n    L. D. Schmidt, ", 
          StyleBox[
          "The Engineering of Chemical Reactions", FontSlant -> "Italic"], 
          ", New York: Oxford University Press, 1998. \n\nAn article \
reference uses this format: \n    D. Pearson, \"A Polynomial-Time Algorithm \
for the Change-Making Problem,\" ", 
          StyleBox["Operations Research Letters", FontSlant -> "Italic"], 
          ", ", 
          StyleBox["33", FontWeight -> "Bold"], 
          "(3), 2005 pp. 231\[Dash]234."}], "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "b42cafa3-93cc-45b2-9bce-00512b05ae14"]
}], "DetailsSection",
 CellTags->"Details",ExpressionUUID->"b9971572-9357-4ce2-a011-62ff9eede7fa"],

Cell[TextData[{
 "This enumeration of all Pythagorean triples (PTs) generates exactly one PT \
from every natural number, thus creating a comprehensive ordered list of PTs, \
indexed by the natural numbers. This is done by first creating a \
two-dimensional table of ordered pairs of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"m", ",", "n"}], "}"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"ce0732f3-81cc-48c5-95b0-408e4ae63252"],
 ", to be traversed in diagonal stripes (inspired by Cantor's demonstration \
of the countability of the rational numbers). The integers ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]], "InlineMath",ExpressionUUID->
  "70fa7fad-183a-4835-b854-d71b8aab5a6a"],
 " and ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]], "InlineMath",ExpressionUUID->
  "d277bb90-5a5b-4adf-9a15-ec74af9dbbb7"],
 " are then used as the multiplier and the index of the primitive PT (PPT), \
for which the precise algorithm is explained more fully in a previous \
Demonstration. Thus, the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"cnn", "(", "n", ")"}], "=", 
    RowBox[{
     RowBox[{"3", "n"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "n"]}], ")"}], "/", "2"}]}]}], 
   TraditionalForm]], "InlineMath",ExpressionUUID->
  "4e017aa6-5acc-456b-bfc0-d5f5e868fc6a"],
 " produces only those C-W pairs of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"u", ",", "v"}], "}"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"5d496f63-e05b-46f6-9d8f-1bddc9791859"],
 " that comply with the conditions that ",
 Cell[BoxData[
  FormBox["u", TraditionalForm]], "InlineMath",ExpressionUUID->
  "c00f2417-2abe-4c6b-9d82-aa5c09fc0f54"],
 " and ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]], "InlineMath",ExpressionUUID->
  "969a81f7-0a29-4eea-bff1-26742830e385"],
 " be relatively prime, have opposite parity and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "<", "v"}], TraditionalForm]], "InlineMath",ExpressionUUID->
  "113a5623-690d-40de-b942-49f292dc6b22"],
 ". These pairs are then used to generate PPTs of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["v", "2"], "-", 
      SuperscriptBox["u", "2"]}], ",", 
     RowBox[{"2", "u", " ", "v"}], ",", 
     RowBox[{
      SuperscriptBox["v", "2"], "+", 
      SuperscriptBox["u", "2"]}]}], "}"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"60eccf40-9137-4e16-a601-af2b1dea7969"],
 ". Multiplying these PPTs by\[NonBreakingSpace]",
 Cell[BoxData[
  FormBox["m", TraditionalForm]], "InlineMath",ExpressionUUID->
  "883c5129-70bd-4be6-89c1-e8a3f8791cb7"],
 "\[NonBreakingSpace]thus gives a one-to-one mapping between the set of all \
natural numbers and the set of all PTs."
}], "DetailNotes",
 CellChangeTimes->{{3.906563478803333*^9, 3.9065635151530967`*^9}, {
  3.906563645637946*^9, 3.9065637166393466`*^9}, {3.906564178060875*^9, 
  3.9065642121645145`*^9}, {3.906564397687998*^9, 3.9065644607742324`*^9}, {
  3.906564492677269*^9, 3.90656468825441*^9}, {3.906564727105623*^9, 
  3.9065650047294083`*^9}, {3.906565068557267*^9, 3.9065651250668755`*^9}, {
  3.9065651837679987`*^9, 3.906565311189451*^9}, {3.906565347501978*^9, 
  3.906565361654678*^9}, {3.906565404971857*^9, 3.9065654586558986`*^9}, {
  3.9066468393079333`*^9, 3.906646858682765*^9}, {3.906646908437312*^9, 
  3.906646909244627*^9}, {3.907173105277307*^9, 3.907173120060948*^9}, {
  3.907173801057012*^9, 3.907173833751935*^9}, {3.9071772970593767`*^9, 
  3.907177297657906*^9}, {3.907177338474989*^9, 3.9071773774438057`*^9}, {
  3.907670660518448*^9, 3.907670799703614*^9}},
 CellID->88952248,ExpressionUUID->"40b061fb-9abe-4da1-9f36-664fdec1e28a"],

Cell[TextData[{
 "The \"",
 Cell[BoxData[
  FormBox["i", TraditionalForm]], "InlineMath",ExpressionUUID->
  "d296e855-f584-404b-bcca-73b8f5107673"],
 "\" slider controls how many PTs are calculated, and in graph mode the \
\"zoom\" slider determines how much to zoom in on those points close to the \
origin. Use the \"mode\" toggle bar to change the display: graphing PTs, \
generating a simple list of PTs, displaying the Cantor diagonal ordering of\
\[NonBreakingSpace]",
 Cell[BoxData[
  FormBox["m", TraditionalForm]], "InlineMath",ExpressionUUID->
  "e3592fc8-9793-4ddb-a6c2-1be46d3122c1"],
 "\[NonBreakingSpace]and\[NonBreakingSpace]the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "1f3a14c7-9934-498e-8228-b20b546119d6"],
 " PPT,\[NonBreakingSpace]or generating a commented table showing the \
derivation of the PTs."
}], "DetailNotes",
 CellChangeTimes->{{3.906563478803333*^9, 3.9065635196395903`*^9}, {
  3.906565495598194*^9, 3.9065655340224447`*^9}, {3.9066469510762644`*^9, 
  3.9066470068656006`*^9}, {3.906647039300691*^9, 3.9066470629466715`*^9}, {
  3.907173159719029*^9, 3.907173199524041*^9}},
 CellID->321819228,ExpressionUUID->"31d762c9-b66f-4dde-abef-a7cd79139e58"],

Cell[TextData[{
 "Snapshot 1: the scatter plot graph of the enumerated PTs as given in the\
\[NonBreakingSpace]",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[VeryThinSpace]"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"1323817e-68d5-46dc-9e9e-ffeefd622159"],
 "-",
 Cell[BoxData[
  FormBox["B", TraditionalForm]], "InlineMath",ExpressionUUID->
  "654fc31f-ce69-419f-93f2-863d88fe51d5"],
 " plane, where\[NonBreakingSpace]",
 Cell[BoxData[
  FormBox["A", TraditionalForm]], "InlineMath",ExpressionUUID->
  "0b5b4213-b30d-4460-add2-c08f85b11ce5"],
 "\[NonBreakingSpace]is the odd leg and\[NonBreakingSpace]",
 Cell[BoxData[
  FormBox["B", TraditionalForm]], "InlineMath",ExpressionUUID->
  "41c1fab2-b19c-42fc-97ec-ae971bc80509"],
 "\[NonBreakingSpace]the even leg of the triangle represented by the PT, \
zoomed in to show only ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", 
    SuperscriptBox["10", "2"]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"3de7476a-5e6d-4b49-b75f-3bc5f8316c8d"],
 " of the largest value, with all side lengths and a proportional triangle \
shown on mouseover"
}], "DetailNotes",
 CellChangeTimes->{{3.906563478803333*^9, 3.9065635215586414`*^9}, {
  3.906565551636716*^9, 3.9065655773681316`*^9}, {3.906565667581348*^9, 
  3.906565692144547*^9}, {3.907173226784377*^9, 3.9071732311160917`*^9}, {
  3.907674173811206*^9, 3.907674195928769*^9}},
 CellID->312701227,ExpressionUUID->"ae464fc6-8f51-4be9-a406-16a12140107b"],

Cell["\<\
Snapshot 2: a simple list of the first 50 PTs generated by the enumeration\
\>", "DetailNotes",
 CellChangeTimes->{{3.906563478803333*^9, 3.906563523201154*^9}, {
  3.906565771565419*^9, 3.906565773514488*^9}},
 CellID->24278483,ExpressionUUID->"887904bf-a5dd-47e0-85fe-9b91585d1641"],

Cell[TextData[{
 "Snapshot 3: a Cantor diagonal ordering of\[NonBreakingSpace]the first 50 \
PTs, showing multiplier ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]], "InlineMath",ExpressionUUID->
  "22587570-2b5f-489f-8839-61d8609ef636"],
 "\[NonBreakingSpace]and the PPT indexed by\[NonBreakingSpace]",
 Cell[BoxData[
  FormBox["n", TraditionalForm]], "InlineMath",ExpressionUUID->
  "002ebf5c-bd23-4117-b07f-8de753ae6cf3"],
 ",\[NonBreakingSpace]with values and resultant PTs shown on mouseover"
}], "DetailNotes",
 CellChangeTimes->{{3.906563478803333*^9, 3.9065635250810356`*^9}, {
   3.906565782635166*^9, 3.906565797915371*^9}, {3.9065658296762714`*^9, 
   3.9065658306488223`*^9}, 3.906645408930231*^9, {3.906645681434097*^9, 
   3.90664576797686*^9}},
 CellID->12311402,ExpressionUUID->"8574c86c-d090-42a2-a11a-3a8ac59bf2a0"],

Cell[TextData[{
 "Overlaying diagonal stripes on a doubly infinite table was a clever idea \
proposed by Georg Cantor to demonstrate the countability of the set of all \
rationals, which inspired a whole class of countability proofs. The image \
shown on tab 3 is a modification of one in [1], in which various enumerations \
are considered. One significant difference between Cantor's scheme, where the \
enumeration includes an infinite number of duplicate entries, and the present \
enumeration of all PTs is that here all ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"m", ",", "n"}], "}"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"d98a30ef-d294-456b-adcf-82551697f8d9"],
 " pairs generate distinct PTs, so the algorithm defines a 1-1 and onto \
function."
}], "DetailNotes",
 CellChangeTimes->{{3.906563478803333*^9, 3.9065635060029974`*^9}, {
  3.9065658387124*^9, 3.906565867570896*^9}, {3.9066454131210036`*^9, 
  3.9066456334580154`*^9}, {3.9066457902337084`*^9, 3.9066458916970954`*^9}, {
  3.9066459434091463`*^9, 3.9066459948406873`*^9}, {3.9066460498750067`*^9, 
  3.906646246875704*^9}, {3.906646278018573*^9, 3.906646331781576*^9}, {
  3.90664711427794*^9, 3.9066471219789143`*^9}, {3.90664716492421*^9, 
  3.906647200083537*^9}, {3.9066472308378963`*^9, 3.906647238181682*^9}, {
  3.907173479639389*^9, 3.90717351079767*^9}, {3.907177502423489*^9, 
  3.907177505217548*^9}, {3.907670885177621*^9, 3.907670892446279*^9}, {
  3.9076742417493353`*^9, 3.9076742636691628`*^9}},
 CellID->214824282,ExpressionUUID->"6ccb4da9-2949-4766-bef8-11b5fb69dc48"],

Cell[TextData[{
 "Snapshot 4: a table showing all steps of the process: natural numbers,\
\[NonBreakingSpace]",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"m", ",", "n"}], ")"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"915fece6-8ade-4a9b-b644-78a2df88fa1e"],
 "\[NonBreakingSpace]pairs, compliant natural numbers, compliant C-W pairs, \
PPTs with multipliers and finally PTs generated by the enumeration algorithm"
}], "DetailNotes",
 CellChangeTimes->{{3.906563478803333*^9, 3.9065635060029974`*^9}, {
   3.9065658387124*^9, 3.906565867570896*^9}, {3.90664763088041*^9, 
   3.906647631293131*^9}, {3.907173529041379*^9, 3.9071735408710117`*^9}, {
   3.90717741154149*^9, 3.9071774172712183`*^9}, 3.907674275949683*^9},
 CellID->118792980,ExpressionUUID->"1b067f70-0046-49bd-a651-54a1c9be17cf"],

Cell["Reference", "DetailNotes",
 CellChangeTimes->{{3.907173323643799*^9, 3.907173325397108*^9}},
 CellID->1208845083,ExpressionUUID->"23d6408c-0480-45e2-a2f8-41b09720ed0a"],

Cell[TextData[{
 "[1] K. E. Caviness, \"Indexing Strings and Rulesets: An Exploration Leading \
to an Enumeration,\" ",
 StyleBox["The Mathematica Journal",
  FontSlant->"Italic"],
 ", 13, 2011. ",
 ButtonBox["www.mathematica-journal.com/2011/05/11/indexing-strings-and-\
rulesets",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.mathematica-journal.com/2011/05/11/indexing-strings-and-\
rulesets/"], None},
  ButtonNote->
   "https://www.mathematica-journal.com/2011/05/11/indexing-strings-and-\
rulesets/"],
 "."
}], "DetailNotes",
 CellChangeTimes->{{3.907173326792342*^9, 3.907173365370654*^9}, {
  3.907173404737115*^9, 3.907173447029811*^9}},
 CellID->1699360152,ExpressionUUID->"f757b63a-12c8-480e-a7a8-4a2a4a1cbbce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Control Suggestions",
 StyleBox[" (optional) ", "SectionGloss"],
 Cell[BoxData[
  TemplateBox[{"Control Suggestions", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{
         "Check the boxes beside items that are appropriate control \
suggestions for this Demonstration. For more information, see the ", 
          ButtonBox[
          "guidelines", 
           BaseStyle -> {"Hyperlink", FontColor -> RGBColor[0.4, 0.45, 0.5]}, 
           ButtonData -> {
             URL["http://demonstrations.wolfram.com/guidelines.php"], None}], 
          " page.", 
          StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "f1fe398c-f37e-4aca-9161-633bae63965a"]
}], "ControlSuggestionsSection",
 CellTags->
  "Control Suggestions",ExpressionUUID->"af8a4061-fdd4-44d0-82cc-\
9fec786547ab"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[
   " Resize Images",ExpressionUUID->"fcee1195-e255-4dbd-8863-4af840debdbd"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\""]], "ControlSuggestions",
 CellChangeTimes->{{3.907173546343141*^9, 3.907173546453209*^9}},
 FontFamily->"Verdana",
 CellTags->
  "ResizeImages",ExpressionUUID->"ac542041-3d26-42bf-920d-b54a74785eef"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Rotate and Zoom in 3D",ExpressionUUID->
    "df0b52c8-7325-4803-bb1e-958545cedfd1"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" on Mac) and drag up and down to zoom.\""}]]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "RotateAndZoomIn3D",ExpressionUUID->"e14e98ed-7514-4081-99ea-c2ffb624df9b"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Drag Locators",ExpressionUUID->"61b2b2a8-69c4-4012-b6da-8923112012e2"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}]]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "DragLocators",ExpressionUUID->"384b79dc-c11a-492d-87e1-2c4b84403891"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Create and Delete Locators",ExpressionUUID->
    "8e06b60e-3149-4a23-ab31-0a8ab2f5ceaf"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}]]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "CreateAndDeleteLocators",ExpressionUUID->"98a81657-e34e-4dab-ac86-\
717d7eff050a"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[
   " Slider Zoom",ExpressionUUID->"c8d377e3-56fc-4adc-88e3-cf7642fb3181"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" to make ever finer adjustments.\""}]]], "ControlSuggestions",
 CellChangeTimes->{{3.9066476552333107`*^9, 3.906647655335209*^9}},
 FontFamily->"Verdana",
 CellTags->
  "SliderZoom",ExpressionUUID->"b84ac2ce-e422-4d4d-953e-073d63c15a9e"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[
   " Gamepad Controls",ExpressionUUID->
    "1fbb5ded-9a1c-4ba0-a087-0d1c0be219ce"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\""]], "ControlSuggestions",
 CellChangeTimes->{
  3.35696210375764*^9, 3.3895522232313623`*^9, {3.907173570127101*^9, 
   3.907173570243309*^9}},
 FontFamily->"Verdana",
 CellTags->
  "GamepadControls",ExpressionUUID->"b4dbde82-29d9-4853-88cd-e053ae8d181c"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[
   " Automatic Animation",ExpressionUUID->
    "ec8a5240-77b9-42a0-8b9e-365efb47dfeb"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}]]], "ControlSuggestions",
 CellChangeTimes->{{3.907173570628298*^9, 3.90717357074454*^9}},
 FontFamily->"Verdana",
 CellTags->
  "AutomaticAnimation",ExpressionUUID->"6e84bbe0-7d8e-44ab-aac1-048973c18d4f"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Bookmark Animation",ExpressionUUID->
    "5bdb2812-7da3-4bb1-a7fc-436054c40542"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}]]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "BookmarkAnimation",ExpressionUUID->"0cf5a50d-6c0e-4089-a29f-941bc4ca8891"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Search Terms",
 StyleBox[" (optional) ", "SectionGloss"],
 Cell[BoxData[
  TemplateBox[{"Search Terms", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{
         "Provide words and phrases that people might search for, with each \
one in a separate cell. Categories are added after the Demonstration is \
submitted, so the best things to enter here are terms (including any \
synonyms) that refer to specific parts of the Demonstration. Do not \
capitalize words unless they are proper names or proper adjectives.", 
          StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "b8b4550c-a7c1-4c5e-acf4-64f68ac8ea51"]
}], "SearchTermsSection",
 CellTags->
  "Search Terms",ExpressionUUID->"a3a3a6a7-7876-4115-a51a-6d092bee139b"],

Cell["Pythagorean triple", "SearchTerms",
 CellChangeTimes->{{3.8849650461328335`*^9, 3.8849650568447137`*^9}, 
   3.8867801531635895`*^9, 3.886866019460513*^9},
 CellID->255407013,ExpressionUUID->"31cfe350-d509-47f3-81ba-f5b8a410cf8f"],

Cell["primitive Pythagorean triple", "SearchTerms",
 CellChangeTimes->{{3.8849650461328335`*^9, 3.8849650568447137`*^9}, {
  3.8868660229047456`*^9, 3.8868660271910453`*^9}},
 CellID->229228147,ExpressionUUID->"99ba1c84-8879-4945-847c-35614ce69d2a"],

Cell["PPT", "SearchTerms",
 CellChangeTimes->{{3.884965062961128*^9, 3.884965064016287*^9}},
 CellID->31959842,ExpressionUUID->"abf148cb-9af2-4360-9345-7b5d23745c07"],

Cell["Calkin-Wilf", "SearchTerms",
 CellChangeTimes->{{3.8849650678884907`*^9, 3.88496507154396*^9}},
 CellID->1008738870,ExpressionUUID->"bcae581c-8249-43dc-bd42-a8f6d06f5615"],

Cell["enumeration", "SearchTerms",
 CellChangeTimes->{{3.8849650820725822`*^9, 3.884965084161371*^9}, 
   3.906565903483102*^9},
 CellID->45880641,ExpressionUUID->"95334262-48c3-4847-98f5-d9dc3c4b832f"],

Cell["Cantor", "SearchTerms",
 CellChangeTimes->{{3.8849650820725822`*^9, 3.884965084161371*^9}, {
  3.9065659045740323`*^9, 3.9065659061656313`*^9}},
 CellID->73164115,ExpressionUUID->"3fbc105c-0aed-4294-81e7-f054af87d1d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Links",
 StyleBox[" (optional) ", "SectionGloss"],
 Cell[BoxData[
  TemplateBox[{"Related Links", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{
         "Provide hyperlinks (not just bare URLs) to any relevant wolfram.com \
pages, with the page title as the linked text. Links to ", 
          ButtonBox[
          "NKS | Online", 
           BaseStyle -> {"Hyperlink", FontColor -> RGBColor[0.4, 0.45, 0.5]}, 
           ButtonData -> {
             URL["http://www.wolframscience.com/nks"], None}], 
          " should use the section title, not a page number. Links to \
non-Wolfram sites go in the Details section.", 
          StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "d5b26c0d-c135-41cd-9d97-dc9003b05c57"]
}], "RelatedLinksSection",
 CellTags->
  "Related Links",ExpressionUUID->"83b0243b-b7e3-4afb-8a4e-185fec8161fe"],

Cell[TextData[ButtonBox["Pythagorean Triple",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://mathworld.wolfram.com/PythagoreanTriple.html"], None},
 ButtonNote->
  "https://mathworld.wolfram.com/PythagoreanTriple.html"]], "RelatedLinks",
 CellID->178191176,ExpressionUUID->"fe0b6b01-41eb-4008-8bd4-3b0cafa4fedd"],

Cell[TextData[ButtonBox["Primitive Pythagorean Triple",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://mathworld.wolfram.com/PrimitivePythagoreanTriple.html"], None},
 ButtonNote->
  "https://mathworld.wolfram.com/PrimitivePythagoreanTriple.html"]], \
"RelatedLinks",
 CellID->152099771,ExpressionUUID->"4e627bb2-4e07-4955-bc56-19600f9dd9b8"],

Cell[TextData[ButtonBox["A Binary-Based Enumeration of the Primitive \
Pythagorean Triples",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/\
ABinaryBasedEnumerationOfThePrimitivePythagoreanTriples/"], None},
 ButtonNote->
  "http://demonstrations.wolfram.com/\
ABinaryBasedEnumerationOfThePrimitivePythagoreanTriples/"]], "RelatedLinks",
 CellID->323277821,ExpressionUUID->"89b7094e-cafa-4ab1-bd0f-e7232bdfea01"],

Cell[TextData[ButtonBox["CalkinWilf",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
CalkinWilf/"], None},
 ButtonNote->
  "https://resources.wolframcloud.com/FunctionRepository/resources/CalkinWilf/\
"]], "RelatedLinks",
 CellChangeTimes->{{3.8873893764581547`*^9, 3.8873893880821753`*^9}},
 CellID->334034107,ExpressionUUID->"31569125-afa7-497e-8374-17c1b78c0af8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Authoring Information",
 Cell[BoxData[
  TemplateBox[{"Authoring Information", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{
         "'Contributed by: John Smith' for single authors; 'Contributed by: \
John Smith, Robert Ford, and Jane Doe' for multiple authors. To credit people \
other than Demonstrations authors, please see the detailed ", 
          ButtonBox[
          "guidelines", 
           BaseStyle -> {"Hyperlink", FontColor -> RGBColor[0.4, 0.45, 0.5]}, 
           ButtonData -> {
             URL["http://demonstrations.wolfram.com/guidelines.php"], None}], 
          ".", 
          StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "990970f3-a922-4bea-919a-d6fa2da1f6d5"]
}], "AuthorSection",
 CellTags->
  "Authoring \
Information",ExpressionUUID->"c2736cdb-c24c-4dd4-9a22-5bbef1a7a20a"],

Cell[TextData[{
 "Contributed by: ",
 ButtonBox["Colton H. Davis",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://demonstrations.wolfram.com/author.html?author=Colton+H.+\
Davis"], None},
  ButtonNote->
   "https://demonstrations.wolfram.com/author.html?author=Colton+H.+Davis"],
 " and ",
 ButtonBox["Kenneth E. Caviness",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://demonstrations.wolfram.com/author.html?author=Kenneth+E.+\
Caviness"], None},
  ButtonNote->
   "https://demonstrations.wolfram.com/author.html?author=Kenneth+E.+Caviness"]
}], "Author",
 CellChangeTimes->{
  3.35696210375764*^9, {3.432333043774981*^9, 3.432333045441087*^9}, 
   3.9066477397873535`*^9},ExpressionUUID->"e6a077c9-f528-4852-97e7-\
764f2f3a1895"]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"DemonstrationSource",
WindowSize->{949, 472},
WindowMargins->{{Automatic, -1.5}, {Automatic, -540}},
TaggingRules->{
 "Terminated" -> True, "QuestionState" -> "Timeup", 
  "AttachedCells" -> {
   "Initialization Code" -> None, "Manipulate" -> None, "Caption" -> None, 
    "Snapshots" -> None, "Details" -> None, "Related Links" -> None, 
    "Search Terms" -> None, "Control Suggestions" -> None, "Thumbnail" -> 
    None, "Authoring Information" -> None}},
Magnification:>0.75 Inherited,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (June 3, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"7199ff0f-7a79-4214-b2d6-a1dfad8913f5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Initialization Code"->{
  Cell[874, 30, 1833, 39, 50, "InitializationSection",ExpressionUUID->"1d34a731-8c48-4189-8b6f-89ef5777db9f",
   CellTags->"Initialization Code"]},
 "Manipulate"->{
  Cell[15193, 369, 1524, 30, 50, "ManipulateSection",ExpressionUUID->"b7acceb9-ca4b-4965-b319-bd8a6214a587",
   CellTags->"Manipulate"]},
 "Caption"->{
  Cell[46832, 1062, 1158, 25, 50, "ManipulateCaptionSection",ExpressionUUID->"1bf22974-0f2f-400e-98cc-75041e34f761",
   CellTags->"Caption",
   CellID->210363168]},
 "Thumbnail"->{
  Cell[53381, 1209, 1005, 22, 50, "ThumbnailSection",ExpressionUUID->"401cc3c4-8319-4e19-82e7-df5fcb711a42",
   CellTags->"Thumbnail"]},
 "Snapshots"->{
  Cell[67820, 1541, 1018, 22, 50, "SnapshotsSection",ExpressionUUID->"96bb7a68-4496-4362-86d3-c2a0812907f2",
   CellTags->"Snapshots"]},
 "Details"->{
  Cell[122456, 2788, 1796, 36, 50, "DetailsSection",ExpressionUUID->"b9971572-9357-4ce2-a011-62ff9eede7fa",
   CellTags->"Details"]},
 "Control Suggestions"->{
  Cell[135323, 3075, 1131, 28, 50, "ControlSuggestionsSection",ExpressionUUID->"af8a4061-fdd4-44d0-82cc-9fec786547ab",
   CellTags->"Control Suggestions"]},
 "ResizeImages"->{
  Cell[136457, 3105, 472, 10, 18, "ControlSuggestions",ExpressionUUID->"ac542041-3d26-42bf-920d-b54a74785eef",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[136932, 3117, 783, 19, 18, "ControlSuggestions",ExpressionUUID->"e14e98ed-7514-4081-99ea-c2ffb624df9b",
   CellTags->"RotateAndZoomIn3D"]},
 "DragLocators"->{
  Cell[137718, 3138, 435, 12, 18, "ControlSuggestions",ExpressionUUID->"384b79dc-c11a-492d-87e1-2c4b84403891",
   CellTags->"DragLocators"]},
 "CreateAndDeleteLocators"->{
  Cell[138156, 3152, 739, 18, 18, "ControlSuggestions",ExpressionUUID->"98a81657-e34e-4dab-ac86-717d7eff050a",
   CellTags->"CreateAndDeleteLocators"]},
 "SliderZoom"->{
  Cell[138898, 3172, 1011, 24, 18, "ControlSuggestions",ExpressionUUID->"b84ac2ce-e422-4d4d-953e-073d63c15a9e",
   CellTags->"SliderZoom"]},
 "GamepadControls"->{
  Cell[139912, 3198, 521, 13, 18, "ControlSuggestions",ExpressionUUID->"b4dbde82-29d9-4853-88cd-e053ae8d181c",
   CellTags->"GamepadControls"]},
 "AutomaticAnimation"->{
  Cell[140436, 3213, 1628, 34, 18, "ControlSuggestions",ExpressionUUID->"6e84bbe0-7d8e-44ab-aac1-048973c18d4f",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[142067, 3249, 1008, 23, 18, "ControlSuggestions",ExpressionUUID->"0cf5a50d-6c0e-4089-a29f-941bc4ca8891",
   CellTags->"BookmarkAnimation"]},
 "Search Terms"->{
  Cell[143112, 3277, 1073, 24, 50, "SearchTermsSection",ExpressionUUID->"a3a3a6a7-7876-4115-a51a-6d092bee139b",
   CellTags->"Search Terms"]},
 "Related Links"->{
  Cell[145494, 3334, 1191, 28, 50, "RelatedLinksSection",ExpressionUUID->"83b0243b-b7e3-4afb-8a4e-185fec8161fe",
   CellTags->"Related Links"]},
 "Authoring Information"->{
  Cell[148287, 3406, 1158, 28, 50, "AuthorSection",ExpressionUUID->"c2736cdb-c24c-4dd4-9a22-5bbef1a7a20a",
   CellTags->"Authoring Information"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Initialization Code", 151101, 3482},
 {"Manipulate", 151266, 3485},
 {"Caption", 151418, 3488},
 {"Thumbnail", 151599, 3492},
 {"Snapshots", 151752, 3495},
 {"Details", 151903, 3498},
 {"Control Suggestions", 152063, 3501},
 {"ResizeImages", 152239, 3504},
 {"RotateAndZoomIn3D", 152405, 3507},
 {"DragLocators", 152571, 3510},
 {"CreateAndDeleteLocators", 152743, 3513},
 {"SliderZoom", 152913, 3516},
 {"GamepadControls", 153076, 3519},
 {"AutomaticAnimation", 153246, 3522},
 {"BookmarkAnimation", 153419, 3525},
 {"Search Terms", 153586, 3528},
 {"Related Links", 153749, 3531},
 {"Authoring Information", 153922, 3534}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 269, 4, 74, "Title",ExpressionUUID->"b9e6fe14-67c5-4f7d-9ec0-13c361826e91"],
Cell[CellGroupData[{
Cell[874, 30, 1833, 39, 50, "InitializationSection",ExpressionUUID->"1d34a731-8c48-4189-8b6f-89ef5777db9f",
 CellTags->"Initialization Code"],
Cell[2710, 71, 802, 17, 42, "Input",ExpressionUUID->"12a3e6a1-9866-4675-80f6-4a96df158b9e",
 InitializationCell->True,
 CellID->595364008],
Cell[3515, 90, 955, 22, 42, "Input",ExpressionUUID->"bf52fef3-9590-4ac9-83a8-aae444083648",
 InitializationCell->True,
 CellID->189335773],
Cell[4473, 114, 1389, 30, 108, "Input",ExpressionUUID->"65f068c7-0126-4d6d-8ecf-7a740ac50c11",
 InitializationCell->True,
 CellID->1633613730],
Cell[5865, 146, 2087, 55, 73, "Input",ExpressionUUID->"1a88c6d4-7937-4a8f-83c1-3da546abd92d",
 InitializationCell->True,
 CellID->2143542168],
Cell[7955, 203, 816, 15, 41, "Input",ExpressionUUID->"6c051cf1-c850-416b-845d-d624bb2790d1",
 InitializationCell->True,
 CellID->261675007],
Cell[8774, 220, 1687, 37, 57, "Input",ExpressionUUID->"d26a274b-36a1-4437-8a77-cda9b966d3dc",
 InitializationCell->True,
 CellID->10115661],
Cell[10464, 259, 1846, 43, 115, "Input",ExpressionUUID->"7740c86d-c827-42c4-81d9-4cf15eeba7e2",
 InitializationCell->True,
 CellID->1209811654],
Cell[12313, 304, 2843, 60, 146, "Input",ExpressionUUID->"34f70d58-3463-4ca6-8e53-5644012a4902",
 InitializationCell->True,
 CellID->1322798514]
}, Open  ]],
Cell[CellGroupData[{
Cell[15193, 369, 1524, 30, 50, "ManipulateSection",ExpressionUUID->"b7acceb9-ca4b-4965-b319-bd8a6214a587",
 CellTags->"Manipulate"],
Cell[CellGroupData[{
Cell[16742, 403, 16873, 350, 674, "Input",ExpressionUUID->"1c8a51fe-61b3-446f-b3f3-b27c622b6763"],
Cell[33618, 755, 13165, 301, 401, "Output",ExpressionUUID->"f9033dd1-f8e7-4ce1-9f41-d5112bfc014f",
 CellID->68476767]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[46832, 1062, 1158, 25, 50, "ManipulateCaptionSection",ExpressionUUID->"1bf22974-0f2f-400e-98cc-75041e34f761",
 CellTags->"Caption",
 CellID->210363168],
Cell[47993, 1089, 968, 17, 28, "ManipulateCaption",ExpressionUUID->"21015a69-8c99-493a-a012-d003171e484b",
 CellID->815681614],
Cell[48964, 1108, 1565, 36, 28, "ManipulateCaption",ExpressionUUID->"39140912-7272-4936-a784-9717bab7d5af",
 CellID->738023948],
Cell[50532, 1146, 1132, 24, 18, "ManipulateCaption",ExpressionUUID->"ec221e47-7c1a-49f1-a302-e4f84d782181",
 CellID->144024224],
Cell[51667, 1172, 666, 11, 18, "ManipulateCaption",ExpressionUUID->"68d11243-a6bc-4495-976c-04f992b9afd7",
 CellID->595117962],
Cell[52336, 1185, 1008, 19, 28, "ManipulateCaption",ExpressionUUID->"e8457069-9a0c-48c9-b993-69915851e059",
 CellID->267656216]
}, Open  ]],
Cell[CellGroupData[{
Cell[53381, 1209, 1005, 22, 50, "ThumbnailSection",ExpressionUUID->"401cc3c4-8319-4e19-82e7-df5fcb711a42",
 CellTags->"Thumbnail"],
Cell[54389, 1233, 13394, 303, 387, "Output",ExpressionUUID->"1d2ae140-c5a0-46ee-9407-c003a6453f12",
 CellID->1063214944]
}, Open  ]],
Cell[CellGroupData[{
Cell[67820, 1541, 1018, 22, 50, "SnapshotsSection",ExpressionUUID->"96bb7a68-4496-4362-86d3-c2a0812907f2",
 CellTags->"Snapshots"],
Cell[68841, 1565, 13406, 303, 382, "Output",ExpressionUUID->"34b13d5c-4b31-4fff-bab0-1bb763d870b5",
 CellID->242137121],
Cell[82250, 1870, 13387, 303, 370, "Output",ExpressionUUID->"adf7b408-bdc4-40af-b73e-0d606c37d796",
 CellID->117081582],
Cell[95640, 2175, 13389, 303, 370, "Output",ExpressionUUID->"f81e140c-d741-4f47-8648-28777556eb6e",
 CellID->695128022],
Cell[109032, 2480, 13387, 303, 382, "Output",ExpressionUUID->"d2ef2603-a455-4d6c-9aa7-011f40536bac",
 CellID->705626074]
}, Open  ]],
Cell[CellGroupData[{
Cell[122456, 2788, 1796, 36, 50, "DetailsSection",ExpressionUUID->"b9971572-9357-4ce2-a011-62ff9eede7fa",
 CellTags->"Details"],
Cell[124255, 2826, 3835, 87, 79, "DetailNotes",ExpressionUUID->"40b061fb-9abe-4da1-9f36-664fdec1e28a",
 CellID->88952248],
Cell[128093, 2915, 1253, 25, 41, "DetailNotes",ExpressionUUID->"31d762c9-b66f-4dde-abef-a7cd79139e58",
 CellID->321819228],
Cell[129349, 2942, 1469, 33, 31, "DetailNotes",ExpressionUUID->"ae464fc6-8f51-4be9-a406-16a12140107b",
 CellID->312701227],
Cell[130821, 2977, 294, 5, 17, "DetailNotes",ExpressionUUID->"887904bf-a5dd-47e0-85fe-9b91585d1641",
 CellID->24278483],
Cell[131118, 2984, 836, 16, 17, "DetailNotes",ExpressionUUID->"8574c86c-d090-42a2-a11a-3a8ac59bf2a0",
 CellID->12311402],
Cell[131957, 3002, 1588, 26, 53, "DetailNotes",ExpressionUUID->"6ccb4da9-2949-4766-bef8-11b5fb69dc48",
 CellID->214824282],
Cell[133548, 3030, 818, 15, 29, "DetailNotes",ExpressionUUID->"1b067f70-0046-49bd-a651-54a1c9be17cf",
 CellID->118792980],
Cell[134369, 3047, 174, 2, 17, "DetailNotes",ExpressionUUID->"23d6408c-0480-45e2-a2f8-41b09720ed0a",
 CellID->1208845083],
Cell[134546, 3051, 740, 19, 29, "DetailNotes",ExpressionUUID->"f757b63a-12c8-480e-a7a8-4a2a4a1cbbce",
 CellID->1699360152]
}, Open  ]],
Cell[CellGroupData[{
Cell[135323, 3075, 1131, 28, 50, "ControlSuggestionsSection",ExpressionUUID->"af8a4061-fdd4-44d0-82cc-9fec786547ab",
 CellTags->"Control Suggestions"],
Cell[136457, 3105, 472, 10, 18, "ControlSuggestions",ExpressionUUID->"ac542041-3d26-42bf-920d-b54a74785eef",
 CellTags->"ResizeImages"],
Cell[136932, 3117, 783, 19, 18, "ControlSuggestions",ExpressionUUID->"e14e98ed-7514-4081-99ea-c2ffb624df9b",
 CellTags->"RotateAndZoomIn3D"],
Cell[137718, 3138, 435, 12, 18, "ControlSuggestions",ExpressionUUID->"384b79dc-c11a-492d-87e1-2c4b84403891",
 CellTags->"DragLocators"],
Cell[138156, 3152, 739, 18, 18, "ControlSuggestions",ExpressionUUID->"98a81657-e34e-4dab-ac86-717d7eff050a",
 CellTags->"CreateAndDeleteLocators"],
Cell[138898, 3172, 1011, 24, 18, "ControlSuggestions",ExpressionUUID->"b84ac2ce-e422-4d4d-953e-073d63c15a9e",
 CellTags->"SliderZoom"],
Cell[139912, 3198, 521, 13, 18, "ControlSuggestions",ExpressionUUID->"b4dbde82-29d9-4853-88cd-e053ae8d181c",
 CellTags->"GamepadControls"],
Cell[140436, 3213, 1628, 34, 18, "ControlSuggestions",ExpressionUUID->"6e84bbe0-7d8e-44ab-aac1-048973c18d4f",
 CellTags->"AutomaticAnimation"],
Cell[142067, 3249, 1008, 23, 18, "ControlSuggestions",ExpressionUUID->"0cf5a50d-6c0e-4089-a29f-941bc4ca8891",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143112, 3277, 1073, 24, 50, "SearchTermsSection",ExpressionUUID->"a3a3a6a7-7876-4115-a51a-6d092bee139b",
 CellTags->"Search Terms"],
Cell[144188, 3303, 236, 3, 17, "SearchTerms",ExpressionUUID->"31cfe350-d509-47f3-81ba-f5b8a410cf8f",
 CellID->255407013],
Cell[144427, 3308, 249, 3, 17, "SearchTerms",ExpressionUUID->"99ba1c84-8879-4945-847c-35614ce69d2a",
 CellID->229228147],
Cell[144679, 3313, 166, 2, 17, "SearchTerms",ExpressionUUID->"abf148cb-9af2-4360-9345-7b5d23745c07",
 CellID->31959842],
Cell[144848, 3317, 177, 2, 17, "SearchTerms",ExpressionUUID->"bcae581c-8249-43dc-bd42-a8f6d06f5615",
 CellID->1008738870],
Cell[145028, 3321, 202, 3, 17, "SearchTerms",ExpressionUUID->"95334262-48c3-4847-98f5-d9dc3c4b832f",
 CellID->45880641],
Cell[145233, 3326, 224, 3, 17, "SearchTerms",ExpressionUUID->"3fbc105c-0aed-4294-81e7-f054af87d1d3",
 CellID->73164115]
}, Open  ]],
Cell[CellGroupData[{
Cell[145494, 3334, 1191, 28, 50, "RelatedLinksSection",ExpressionUUID->"83b0243b-b7e3-4afb-8a4e-185fec8161fe",
 CellTags->"Related Links"],
Cell[146688, 3364, 321, 6, 17, "RelatedLinks",ExpressionUUID->"fe0b6b01-41eb-4008-8bd4-3b0cafa4fedd",
 CellID->178191176],
Cell[147012, 3372, 351, 7, 17, "RelatedLinks",ExpressionUUID->"4e627bb2-4e07-4955-bc56-19600f9dd9b8",
 CellID->152099771],
Cell[147366, 3381, 448, 9, 17, "RelatedLinks",ExpressionUUID->"89b7094e-cafa-4ab1-bd0f-e7232bdfea01",
 CellID->323277821],
Cell[147817, 3392, 433, 9, 17, "RelatedLinks",ExpressionUUID->"31569125-afa7-497e-8374-17c1b78c0af8",
 CellID->334034107]
}, Open  ]],
Cell[CellGroupData[{
Cell[148287, 3406, 1158, 28, 50, "AuthorSection",ExpressionUUID->"c2736cdb-c24c-4dd4-9a22-5bbef1a7a20a",
 CellTags->"Authoring Information"],
Cell[149448, 3436, 756, 21, 17, "Author",ExpressionUUID->"e6a077c9-f528-4852-97e7-764f2f3a1895"]
}, Open  ]]
}, Open  ]]
}
]
*)

