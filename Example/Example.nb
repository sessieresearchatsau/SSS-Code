(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     18816,        463]
NotebookOptionsPosition[     15381,        398]
NotebookOutlinePosition[     15790,        414]
CellTagsIndexPosition[     15747,        411]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Mathematica Package Example", "Title",
 CellChangeTimes->{{3.811008030709515*^9, 
  3.811008052982169*^9}},ExpressionUUID->"f0f93403-7482-4cad-8b65-\
6bbed2d1beb4"],

Cell["\<\
This example is still a work-in-progress, and thus is largely incomplete.\
\>", "Text",
 CellChangeTimes->{{3.811008882312647*^9, 
  3.811008896489894*^9}},ExpressionUUID->"c52d6be7-ce48-46ca-8289-\
e826c705df28"],

Cell[CellGroupData[{

Cell["Summary", "Subtitle",
 CellChangeTimes->{{3.8110080609419436`*^9, 
  3.8110080685106115`*^9}},ExpressionUUID->"6fa580fe-726d-4d40-8204-\
5bbcff2a6b73"],

Cell["\<\
Mathematica packages are packages of code intended to make running projects \
easier. They are contained in files ending in either .m or .wl, although .wl \
is preferred to prevent confusion between Mathematica and Matlab files, as \
the latter also uses the .m extension.

Packages can also implement other packages, which will be hid from the user. \
They also are generally intended to be placed within certain folders on a \
system predetermined by Mathematica, the details of which can be found in the \
documentation for the FindFile[] function.\
\>", "Text",
 CellChangeTimes->{{3.8110080848873324`*^9, 
  3.811008256812372*^9}},ExpressionUUID->"e8035cea-7617-481d-b758-\
49a7e3f6b2e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Structure", "Subtitle",
 CellChangeTimes->{{3.811008266461323*^9, 
  3.8110082674935527`*^9}},ExpressionUUID->"e5ccd4d7-9d0e-4e5b-82a2-\
704cd20a0d48"],

Cell["Each Mathematica package file follows this basic structure:", "Text",
 CellChangeTimes->{{3.811008273653907*^9, 
  3.8110082858376083`*^9}},ExpressionUUID->"5f863ed5-324a-4510-ae45-\
cc2671296cae"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<Example`\>\"", "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"In", " ", "here"}], ",", " ", 
    RowBox[{
    "you", " ", "implement", " ", "functions", " ", "and", " ", "variables", 
     " ", "you", " ", "intend", " ", "to", " ", "be", " ", "publically", " ", 
     "accessible"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"In", " ", "here"}], ",", " ", 
    RowBox[{
    "you", " ", "implement", " ", "functions", " ", "and", " ", "variables", 
     " ", "only", " ", "intended", " ", "to", " ", "be", " ", "used", " ", 
     "by", " ", "the", " ", "program", " ", "itself"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"EndPackage", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.8110083902499027`*^9, 
  3.811008460067902*^9}},ExpressionUUID->"0458eadf-2bed-4adf-b680-\
1dd119af1e05"],

Cell["\<\
The basic idea behind this is the concept of encapsulation, or that certain \
functions and variables should only be accessible by its parent class, and \
others provide an interface for users to interact with those functions and  \
variables.

This improves maintainability, as it allows the implementation of a function \
to change without affecting external code which uses the public portions.\
\>", "Text",
 CellChangeTimes->{{3.8110084749722085`*^9, 3.811008477387704*^9}, {
  3.8110085213656936`*^9, 
  3.811008695786559*^9}},ExpressionUUID->"4d7bac7b-39dc-47a3-9490-\
b5837c2026e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Importing a package", "Subtitle",
 CellChangeTimes->{{3.81100871081129*^9, 
  3.8110087133318477`*^9}},ExpressionUUID->"0240755b-6c50-4a75-866e-\
2e9e1fae2062"],

Cell["\<\
WORK IN PROGRESS
There are several commands you can use to import a package, some of which are \
listed below:\
\>", "Text",
 CellChangeTimes->{{3.8110087213716345`*^9, 3.811008734100424*^9}, {
  3.8110088654329033`*^9, 
  3.811008869744856*^9}},ExpressionUUID->"6abb86ef-9bed-46e8-8349-\
4187c3d2ae95"],

Cell[CellGroupData[{

Cell["Import[\"Example.wl\"] - Always imports the package", "Item",
 CellChangeTimes->{{3.811008752597104*^9, 3.8110087627253532`*^9}, {
  3.811008834479755*^9, 3.811008837663463*^9}, {3.811080093290355*^9, 
  3.811080098282569*^9}},ExpressionUUID->"12b95d40-fd80-4bf1-9137-\
e0efe8029bf3"],

Cell["\<\
Needs[\"Example`\"] - Imports the package only if it hasn\[CloseCurlyQuote]t \
already been imported\
\>", "Item",
 CellChangeTimes->{{3.811008752597104*^9, 3.811008771208232*^9}, {
  3.81100881828693*^9, 3.8110088270070934`*^9}, {3.8110801029487257`*^9, 
  3.811080108666716*^9}},ExpressionUUID->"2de315ba-6f42-42ca-adaa-\
d2e99a305c7d"],

Cell["Get[\"Example`\"] or <<\" Example`\"- Always imports the package", \
"Item",
 CellChangeTimes->{{3.811008752597104*^9, 3.8110088327273674`*^9}, {
  3.8110800679514294`*^9, 3.8110800745156484`*^9}, {3.8110801190014715`*^9, 
  3.811080122787602*^9}},ExpressionUUID->"7d230c95-2d4a-438d-9075-\
7fcfb0263a49"],

Cell["\<\
DeclarePackage[\"Example`\"] - Imports package automatically as needed\
\>", "Item",
 CellChangeTimes->{{3.811008752597104*^9, 3.8110088171826925`*^9}, {
  3.811080128584874*^9, 
  3.811080130886718*^9}},ExpressionUUID->"efdfd74a-2953-4dbe-a991-\
782fdd323a90"]
}, Open  ]],

Cell["\<\
For other details, please refer to the wolfram documentation.
Before issuing any of these commands, we run the \
SetDirectory[NotebookDirectory[]] command for ease of use, as it will allow \
these commands to search in the current notebook directory by default. \
Otherwise, we would have to place the .wl package file in a specific location \
predetermined by Mathematica.\
\>", "Text",
 CellChangeTimes->{{3.811008843343729*^9, 3.8110088620326223`*^9}, {
  3.8110090175168505`*^9, 
  3.811009079319522*^9}},ExpressionUUID->"8d1e87ec-9408-427c-9bc6-\
33299ec2d242"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example", "Subtitle",
 CellChangeTimes->{{3.8110089146497154`*^9, 
  3.8110089191057053`*^9}},ExpressionUUID->"c014b30e-3a27-45e8-8a0a-\
2dfa5a302ee6"],

Cell["\<\
Here\[CloseCurlyQuote]s an example of a package at work, demonstrating both \
public and private functions and variables.
First, we need to set our local directory so Mathematica knows where to look \
and import it using the \[OpenCurlyDoubleQuote]Needs\[CloseCurlyDoubleQuote] \
command: (Please press shift + enter to run it first)\
\>", "Text",
 CellChangeTimes->{{3.811008989364293*^9, 3.8110090127808*^9}, {
  3.8110090857039347`*^9, 3.8110091103362093`*^9}, {3.8110097734145355`*^9, 
  3.8110097821984787`*^9}},ExpressionUUID->"a516aed3-66fa-4983-b525-\
c9ac438f24cf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<Example`\>\"", "]"}]}], "Input",
 CellChangeTimes->{
  3.81100893382697*^9, {3.811079441482714*^9, 3.8110794431208935`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"79015c7a-b825-429e-9de1-4f1d70dfcffb"],

Cell[BoxData["\<\"C:\\\\Users\\\\caviness\\\\Documents\\\\Git\\\\SSS-Code\\\\\
Example\"\>"], "Output",
 CellChangeTimes->{{3.8110794038884215`*^9, 3.811079444984193*^9}, 
   3.8110794928639517`*^9, 3.8110796992873836`*^9, 3.81107973608044*^9, 
   3.8110798315660615`*^9, 3.8110799092337894`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"669d1ec9-568b-4461-8647-626cb94c2252"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<Example`\>\""}]}], "Input",
 CellChangeTimes->{{3.8110799948602285`*^9, 3.811080022279189*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"662168f2-afc1-48e2-8640-1df8790fed00"],

Cell[BoxData["\<\"C:\\\\Users\\\\caviness\\\\Documents\\\\Git\\\\SSS-Code\\\\\
Example\"\>"], "Output",
 CellChangeTimes->{{3.8110800078184614`*^9, 3.811080023232126*^9}},
 CellLabel->"Out[3]=",ExpressionUUID->"6cc0be02-c61c-46b6-aa08-090b431d0272"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Example`*"}]], "Input",
 CellChangeTimes->{{3.8110795086048064`*^9, 3.811079516241014*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"b25e7d46-b857-46a3-8068-c4d5bf2f17d7"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["Example`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], " ", 
              StyleBox["Example`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["fromAlpha", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9410d9d6-79e7-42e1-b948-56eb13ec1cc8", {
                   "fromAlpha", "Example`"}, False},
                 ButtonNote->"Example`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["fromAlphaPublic", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9410d9d6-79e7-42e1-b948-56eb13ec1cc8", {
                   "fromAlphaPublic", "Example`"}, False},
                 ButtonNote->"Example`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["string", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9410d9d6-79e7-42e1-b948-56eb13ec1cc8", {
                   "string", "Example`"}, False},
                 ButtonNote->"Example`",
                 Evaluator->Automatic]}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.31666666666666665`]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{3.811079517018569*^9, 3.8110797081571093`*^9, 
  3.811079839281168*^9, 3.811079912850997*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"6f9e6110-318e-48bf-8618-66b988bf5793"]
}, Open  ]],

Cell["\<\
The package \[OpenCurlyDoubleQuote]Example\[CloseCurlyDoubleQuote] contains \
two public items and two private items. Look below:\
\>", "Text",
 CellChangeTimes->{{3.8110091719858656`*^9, 
  3.81100922185165*^9}},ExpressionUUID->"c20b42ce-303a-4c97-8833-\
dccafb28df4b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fromAlphaPublic", "[", "\"\<test\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8110092265007334`*^9, 3.8110092337497053`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"0685ab19-e734-4135-b870-3f894387dc75"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"51", ",", "36", ",", "50", ",", "51"}], "}"}]], "Output",
 CellChangeTimes->{3.811009238358663*^9, 3.8110795239909987`*^9, 
  3.811079714057549*^9, 3.8110797463374925`*^9, 3.8110799302631855`*^9, 
  3.8110800278047647`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"4d456ed9-789e-4a9e-be43-94b88dbfb186"]
}, Open  ]],

Cell["\<\
As you can see, we could directly run fromAlphaPublic with little difficulty. \
However, this public function actually calls the private function fromAlpha. \
To call the private function from here, we would have to do something like so:\
\>", "Text",
 CellChangeTimes->{{3.8110092431322575`*^9, 
  3.8110092742857075`*^9}},ExpressionUUID->"cb29729c-bbe1-413a-b4e4-\
ea31ca204f5a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Example`Private`fromAlpha", "[", "\"\<test\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8110092783751245`*^9, 3.811009287118414*^9}, {
  3.8110797817581778`*^9, 3.8110797831909237`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"0c1a71f0-da4d-4a49-8b5a-359a154a8fcb"],

Cell[BoxData[
 RowBox[{"Example`Private`fromAlpha", "[", "\<\"test\"\>", "]"}]], "Output",
 CellChangeTimes->{
  3.811009289407925*^9, {3.81107975550445*^9, 3.8110797851117415`*^9}, 
   3.8110799629462576`*^9, 3.8110800304264393`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"c6b5714a-9ceb-4f9a-8355-38658ec8ef7a"]
}, Open  ]],

Cell["\<\
In this case, there is no benefit here. However, imagine a larger program \
with hundreds of functions all carefully integrated. Now, imagine that this \
program only requires a few arguments from the user to work. Rather than \
exposing all those functions to the user, a developer could instead only have \
public functions for operations the user is intended to do, and those public \
functions could call the appropriate private functions. 

Also, if the implementation of those private functions changes, the public \
functions should require little or no adjustment, as they should be dealing \
primarily with the outputs from the \[OpenCurlyDoubleQuote]meat\
\[CloseCurlyDoubleQuote] of the program. Thus, users \
shouldn\[CloseCurlyQuote]t have to constantly update their code to reflect \
changes in private function names, parameters, variables, etc. As far as they\
\[CloseCurlyQuote]re concerned, no change has occurred at all.\
\>", "Text",
 CellChangeTimes->{{3.811009516917029*^9, 
  3.811009761453889*^9}},ExpressionUUID->"fb052c1d-c565-4409-8b9c-\
a45fa3765a29"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440., 747.75},
WindowMargins->{{2394, Automatic}, {150.25, Automatic}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"59d60157-4946-435d-940a-0f4c355a25ec"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 170, 3, 97, "Title",ExpressionUUID->"f0f93403-7482-4cad-8b65-6bbed2d1beb4"],
Cell[753, 27, 223, 5, 34, "Text",ExpressionUUID->"c52d6be7-ce48-46ca-8289-e826c705df28"],
Cell[CellGroupData[{
Cell[1001, 36, 157, 3, 53, "Subtitle",ExpressionUUID->"6fa580fe-726d-4d40-8204-5bbcff2a6b73"],
Cell[1161, 41, 703, 13, 122, "Text",ExpressionUUID->"e8035cea-7617-481d-b758-49a7e3f6b2e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1901, 59, 157, 3, 53, "Subtitle",ExpressionUUID->"e5ccd4d7-9d0e-4e5b-82a2-704cd20a0d48"],
Cell[2061, 64, 203, 3, 34, "Text",ExpressionUUID->"5f863ed5-324a-4510-ae45-cc2671296cae"],
Cell[2267, 69, 1113, 26, 141, "Input",ExpressionUUID->"0458eadf-2bed-4adf-b680-1dd119af1e05"],
Cell[3383, 97, 600, 12, 100, "Text",ExpressionUUID->"4d7bac7b-39dc-47a3-9490-b5837c2026e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4020, 114, 166, 3, 53, "Subtitle",ExpressionUUID->"0240755b-6c50-4a75-866e-2e9e1fae2062"],
Cell[4189, 119, 313, 8, 56, "Text",ExpressionUUID->"6abb86ef-9bed-46e8-8349-4187c3d2ae95"],
Cell[CellGroupData[{
Cell[4527, 131, 290, 4, 31, "Item",ExpressionUUID->"12b95d40-fd80-4bf1-9137-e0efe8029bf3"],
Cell[4820, 137, 348, 7, 31, "Item",ExpressionUUID->"2de315ba-6f42-42ca-adaa-d2e99a305c7d"],
Cell[5171, 146, 311, 5, 31, "Item",ExpressionUUID->"7d230c95-2d4a-438d-9075-7fcfb0263a49"],
Cell[5485, 153, 271, 6, 31, "Item",ExpressionUUID->"efdfd74a-2953-4dbe-a991-782fdd323a90"]
}, Open  ]],
Cell[5771, 162, 576, 11, 78, "Text",ExpressionUUID->"8d1e87ec-9408-427c-9bc6-33299ec2d242"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6384, 178, 157, 3, 53, "Subtitle",ExpressionUUID->"c014b30e-3a27-45e8-8a0a-2dfa5a302ee6"],
Cell[6544, 183, 584, 10, 56, "Text",ExpressionUUID->"a516aed3-66fa-4983-b525-c9ac438f24cf"],
Cell[CellGroupData[{
Cell[7153, 197, 350, 6, 47, "Input",ExpressionUUID->"79015c7a-b825-429e-9de1-4f1d70dfcffb"],
Cell[7506, 205, 374, 5, 32, "Output",ExpressionUUID->"669d1ec9-568b-4461-8647-626cb94c2252"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7917, 215, 313, 5, 47, "Input",ExpressionUUID->"662168f2-afc1-48e2-8640-1df8790fed00"],
Cell[8233, 222, 249, 3, 32, "Output",ExpressionUUID->"6cc0be02-c61c-46b6-aa08-090b431d0272"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8519, 230, 198, 3, 28, "Input",ExpressionUUID->"b25e7d46-b857-46a3-8068-c4d5bf2f17d7"],
Cell[8720, 235, 3604, 89, 91, "Output",ExpressionUUID->"6f9e6110-318e-48bf-8618-66b988bf5793"]
}, Open  ]],
Cell[12339, 327, 280, 6, 34, "Text",ExpressionUUID->"c20b42ce-303a-4c97-8833-dccafb28df4b"],
Cell[CellGroupData[{
Cell[12644, 337, 227, 3, 28, "Input",ExpressionUUID->"0685ab19-e734-4135-b870-3f894387dc75"],
Cell[12874, 342, 341, 6, 32, "Output",ExpressionUUID->"4d456ed9-789e-4a9e-be43-94b88dbfb186"]
}, Open  ]],
Cell[13230, 351, 391, 7, 56, "Text",ExpressionUUID->"cb29729c-bbe1-413a-b4e4-ea31ca204f5a"],
Cell[CellGroupData[{
Cell[13646, 362, 288, 4, 28, "Input",ExpressionUUID->"0c1a71f0-da4d-4a49-8b5a-359a154a8fcb"],
Cell[13937, 368, 312, 5, 32, "Output",ExpressionUUID->"c6b5714a-9ceb-4f9a-8355-38658ec8ef7a"]
}, Open  ]],
Cell[14264, 376, 1089, 18, 144, "Text",ExpressionUUID->"fb052c1d-c565-4409-8b9c-a45fa3765a29"]
}, Open  ]]
}, Open  ]]
}
]
*)

